/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PostBrandingThemeRequestWidgetLogoPosition Logo position
type PostBrandingThemeRequestWidgetLogoPosition string

// List of post_branding_theme_request_widget_logo_position
const (
	POSTBRANDINGTHEMEREQUESTWIDGETLOGOPOSITION_CENTER PostBrandingThemeRequestWidgetLogoPosition = "center"
	POSTBRANDINGTHEMEREQUESTWIDGETLOGOPOSITION_LEFT   PostBrandingThemeRequestWidgetLogoPosition = "left"
	POSTBRANDINGTHEMEREQUESTWIDGETLOGOPOSITION_NONE   PostBrandingThemeRequestWidgetLogoPosition = "none"
	POSTBRANDINGTHEMEREQUESTWIDGETLOGOPOSITION_RIGHT  PostBrandingThemeRequestWidgetLogoPosition = "right"
)

// All allowed values of PostBrandingThemeRequestWidgetLogoPosition enum
var AllowedPostBrandingThemeRequestWidgetLogoPositionEnumValues = []PostBrandingThemeRequestWidgetLogoPosition{
	"center",
	"left",
	"none",
	"right",
}

func (v *PostBrandingThemeRequestWidgetLogoPosition) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PostBrandingThemeRequestWidgetLogoPosition(value)
	for _, existing := range AllowedPostBrandingThemeRequestWidgetLogoPositionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PostBrandingThemeRequestWidgetLogoPosition", value)
}

// NewPostBrandingThemeRequestWidgetLogoPositionFromValue returns a pointer to a valid PostBrandingThemeRequestWidgetLogoPosition
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPostBrandingThemeRequestWidgetLogoPositionFromValue(v string) (*PostBrandingThemeRequestWidgetLogoPosition, error) {
	ev := PostBrandingThemeRequestWidgetLogoPosition(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PostBrandingThemeRequestWidgetLogoPosition: valid values are %v", v, AllowedPostBrandingThemeRequestWidgetLogoPositionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PostBrandingThemeRequestWidgetLogoPosition) IsValid() bool {
	for _, existing := range AllowedPostBrandingThemeRequestWidgetLogoPositionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to post_branding_theme_request_widget_logo_position value
func (v PostBrandingThemeRequestWidgetLogoPosition) Ptr() *PostBrandingThemeRequestWidgetLogoPosition {
	return &v
}

type NullablePostBrandingThemeRequestWidgetLogoPosition struct {
	value *PostBrandingThemeRequestWidgetLogoPosition
	isSet bool
}

func (v NullablePostBrandingThemeRequestWidgetLogoPosition) Get() *PostBrandingThemeRequestWidgetLogoPosition {
	return v.value
}

func (v *NullablePostBrandingThemeRequestWidgetLogoPosition) Set(val *PostBrandingThemeRequestWidgetLogoPosition) {
	v.value = val
	v.isSet = true
}

func (v NullablePostBrandingThemeRequestWidgetLogoPosition) IsSet() bool {
	return v.isSet
}

func (v *NullablePostBrandingThemeRequestWidgetLogoPosition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostBrandingThemeRequestWidgetLogoPosition(val *PostBrandingThemeRequestWidgetLogoPosition) *NullablePostBrandingThemeRequestWidgetLogoPosition {
	return &NullablePostBrandingThemeRequestWidgetLogoPosition{value: val, isSet: true}
}

func (v NullablePostBrandingThemeRequestWidgetLogoPosition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostBrandingThemeRequestWidgetLogoPosition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
