/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ClientCreateAppType Type of client used to determine which settings are applicable. Can be `spa`, `native`, `non_interactive`, or `regular_web`.
type ClientCreateAppType string

// List of clientCreate_app_type
const (
	CLIENTCREATEAPPTYPE_NATIVE          ClientCreateAppType = "native"
	CLIENTCREATEAPPTYPE_SPA             ClientCreateAppType = "spa"
	CLIENTCREATEAPPTYPE_REGULAR_WEB     ClientCreateAppType = "regular_web"
	CLIENTCREATEAPPTYPE_NON_INTERACTIVE ClientCreateAppType = "non_interactive"
	CLIENTCREATEAPPTYPE_RMS             ClientCreateAppType = "rms"
	CLIENTCREATEAPPTYPE_BOX             ClientCreateAppType = "box"
	CLIENTCREATEAPPTYPE_CLOUDBEES       ClientCreateAppType = "cloudbees"
	CLIENTCREATEAPPTYPE_CONCUR          ClientCreateAppType = "concur"
	CLIENTCREATEAPPTYPE_DROPBOX         ClientCreateAppType = "dropbox"
	CLIENTCREATEAPPTYPE_MSCRM           ClientCreateAppType = "mscrm"
	CLIENTCREATEAPPTYPE_ECHOSIGN        ClientCreateAppType = "echosign"
	CLIENTCREATEAPPTYPE_EGNYTE          ClientCreateAppType = "egnyte"
	CLIENTCREATEAPPTYPE_NEWRELIC        ClientCreateAppType = "newrelic"
	CLIENTCREATEAPPTYPE_OFFICE365       ClientCreateAppType = "office365"
	CLIENTCREATEAPPTYPE_SALESFORCE      ClientCreateAppType = "salesforce"
	CLIENTCREATEAPPTYPE_SENTRY          ClientCreateAppType = "sentry"
	CLIENTCREATEAPPTYPE_SHAREPOINT      ClientCreateAppType = "sharepoint"
	CLIENTCREATEAPPTYPE_SLACK           ClientCreateAppType = "slack"
	CLIENTCREATEAPPTYPE_SPRINGCM        ClientCreateAppType = "springcm"
	CLIENTCREATEAPPTYPE_ZENDESK         ClientCreateAppType = "zendesk"
	CLIENTCREATEAPPTYPE_ZOOM            ClientCreateAppType = "zoom"
	CLIENTCREATEAPPTYPE_SSO_INTEGRATION ClientCreateAppType = "sso_integration"
	CLIENTCREATEAPPTYPE_OAG             ClientCreateAppType = "oag"
)

// All allowed values of ClientCreateAppType enum
var AllowedClientCreateAppTypeEnumValues = []ClientCreateAppType{
	"native",
	"spa",
	"regular_web",
	"non_interactive",
	"rms",
	"box",
	"cloudbees",
	"concur",
	"dropbox",
	"mscrm",
	"echosign",
	"egnyte",
	"newrelic",
	"office365",
	"salesforce",
	"sentry",
	"sharepoint",
	"slack",
	"springcm",
	"zendesk",
	"zoom",
	"sso_integration",
	"oag",
}

func (v *ClientCreateAppType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ClientCreateAppType(value)
	for _, existing := range AllowedClientCreateAppTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ClientCreateAppType", value)
}

// NewClientCreateAppTypeFromValue returns a pointer to a valid ClientCreateAppType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewClientCreateAppTypeFromValue(v string) (*ClientCreateAppType, error) {
	ev := ClientCreateAppType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ClientCreateAppType: valid values are %v", v, AllowedClientCreateAppTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ClientCreateAppType) IsValid() bool {
	for _, existing := range AllowedClientCreateAppTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to clientCreate_app_type value
func (v ClientCreateAppType) Ptr() *ClientCreateAppType {
	return &v
}

type NullableClientCreateAppType struct {
	value *ClientCreateAppType
	isSet bool
}

func (v NullableClientCreateAppType) Get() *ClientCreateAppType {
	return v.value
}

func (v *NullableClientCreateAppType) Set(val *ClientCreateAppType) {
	v.value = val
	v.isSet = true
}

func (v NullableClientCreateAppType) IsSet() bool {
	return v.isSet
}

func (v *NullableClientCreateAppType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientCreateAppType(val *ClientCreateAppType) *NullableClientCreateAppType {
	return &NullableClientCreateAppType{value: val, isSet: true}
}

func (v NullableClientCreateAppType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientCreateAppType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
