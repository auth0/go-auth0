/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// EmailProviderUpdateCredentialsAnyOf4 struct for EmailProviderUpdateCredentialsAnyOf4
type EmailProviderUpdateCredentialsAnyOf4 struct {
	// API Key
	ApiKey *string `json:"api_key,omitempty"`
	// Domain
	Domain *string                                     `json:"domain,omitempty"`
	Region *EmailProviderUpdateCredentialsAnyOf4Region `json:"region,omitempty"`
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *EmailProviderUpdateCredentialsAnyOf4) GetApiKey() string {
	if o == nil || IsNil(o.ApiKey) {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailProviderUpdateCredentialsAnyOf4) GetApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ApiKey) {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *EmailProviderUpdateCredentialsAnyOf4) HasApiKey() bool {
	if o != nil && !IsNil(o.ApiKey) {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *EmailProviderUpdateCredentialsAnyOf4) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *EmailProviderUpdateCredentialsAnyOf4) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailProviderUpdateCredentialsAnyOf4) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *EmailProviderUpdateCredentialsAnyOf4) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *EmailProviderUpdateCredentialsAnyOf4) SetDomain(v string) {
	o.Domain = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *EmailProviderUpdateCredentialsAnyOf4) GetRegion() EmailProviderUpdateCredentialsAnyOf4Region {
	if o == nil || IsNil(o.Region) {
		var ret EmailProviderUpdateCredentialsAnyOf4Region
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailProviderUpdateCredentialsAnyOf4) GetRegionOk() (*EmailProviderUpdateCredentialsAnyOf4Region, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *EmailProviderUpdateCredentialsAnyOf4) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given EmailProviderUpdateCredentialsAnyOf4Region and assigns it to the Region field.
func (o *EmailProviderUpdateCredentialsAnyOf4) SetRegion(v EmailProviderUpdateCredentialsAnyOf4Region) {
	o.Region = &v
}

func (o EmailProviderUpdateCredentialsAnyOf4) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailProviderUpdateCredentialsAnyOf4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiKey) {
		toSerialize["api_key"] = o.ApiKey
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return toSerialize, nil
}

type NullableEmailProviderUpdateCredentialsAnyOf4 struct {
	value *EmailProviderUpdateCredentialsAnyOf4
	isSet bool
}

func (v NullableEmailProviderUpdateCredentialsAnyOf4) Get() *EmailProviderUpdateCredentialsAnyOf4 {
	return v.value
}

func (v *NullableEmailProviderUpdateCredentialsAnyOf4) Set(val *EmailProviderUpdateCredentialsAnyOf4) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailProviderUpdateCredentialsAnyOf4) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailProviderUpdateCredentialsAnyOf4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailProviderUpdateCredentialsAnyOf4(val *EmailProviderUpdateCredentialsAnyOf4) *NullableEmailProviderUpdateCredentialsAnyOf4 {
	return &NullableEmailProviderUpdateCredentialsAnyOf4{value: val, isSet: true}
}

func (v NullableEmailProviderUpdateCredentialsAnyOf4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailProviderUpdateCredentialsAnyOf4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
