/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PostRecoveryCodeRegeneration200Response struct for PostRecoveryCodeRegeneration200Response
type PostRecoveryCodeRegeneration200Response struct {
	// New account recovery code.
	RecoveryCode         string `json:"recovery_code"`
	AdditionalProperties map[string]interface{}
}

type _PostRecoveryCodeRegeneration200Response PostRecoveryCodeRegeneration200Response

// GetRecoveryCode returns the RecoveryCode field value
func (o *PostRecoveryCodeRegeneration200Response) GetRecoveryCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecoveryCode
}

// GetRecoveryCodeOk returns a tuple with the RecoveryCode field value
// and a boolean to check if the value has been set.
func (o *PostRecoveryCodeRegeneration200Response) GetRecoveryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecoveryCode, true
}

// SetRecoveryCode sets field value
func (o *PostRecoveryCodeRegeneration200Response) SetRecoveryCode(v string) {
	o.RecoveryCode = v
}

func (o PostRecoveryCodeRegeneration200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostRecoveryCodeRegeneration200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["recovery_code"] = o.RecoveryCode

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PostRecoveryCodeRegeneration200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"recovery_code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostRecoveryCodeRegeneration200Response := _PostRecoveryCodeRegeneration200Response{}

	err = json.Unmarshal(data, &varPostRecoveryCodeRegeneration200Response)

	if err != nil {
		return err
	}

	*o = PostRecoveryCodeRegeneration200Response(varPostRecoveryCodeRegeneration200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "recovery_code")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePostRecoveryCodeRegeneration200Response struct {
	value *PostRecoveryCodeRegeneration200Response
	isSet bool
}

func (v NullablePostRecoveryCodeRegeneration200Response) Get() *PostRecoveryCodeRegeneration200Response {
	return v.value
}

func (v *NullablePostRecoveryCodeRegeneration200Response) Set(val *PostRecoveryCodeRegeneration200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePostRecoveryCodeRegeneration200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePostRecoveryCodeRegeneration200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostRecoveryCodeRegeneration200Response(val *PostRecoveryCodeRegeneration200Response) *NullablePostRecoveryCodeRegeneration200Response {
	return &NullablePostRecoveryCodeRegeneration200Response{value: val, isSet: true}
}

func (v NullablePostRecoveryCodeRegeneration200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostRecoveryCodeRegeneration200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
