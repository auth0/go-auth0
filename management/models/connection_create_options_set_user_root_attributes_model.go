/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ConnectionCreateOptionsSetUserRootAttributes When using an external IdP, this flag determines  whether 'name', 'given_name', 'family_name', 'nickname', and 'picture' attributes are updated. In addition, it also determines whether the user is created when user doesnt exist previously. Possible values are 'on_each_login' (default value, it configures the connection to automatically create the user if necessary and update the root attributes from the external IdP with each user login. When this setting is used, root attributes cannot be independently updated), 'on_first_login' (configures the connection to create the user and set the root attributes on first login only, allowing them to be independently updated thereafter), and 'never_on_login' (configures the connection not to create the user and not to set the root attributes from the external IdP, allowing them to be independently updated).
type ConnectionCreateOptionsSetUserRootAttributes string

// List of connectionCreate_options_set_user_root_attributes
const (
	CONNECTIONCREATEOPTIONSSETUSERROOTATTRIBUTES_ON_EACH_LOGIN  ConnectionCreateOptionsSetUserRootAttributes = "on_each_login"
	CONNECTIONCREATEOPTIONSSETUSERROOTATTRIBUTES_ON_FIRST_LOGIN ConnectionCreateOptionsSetUserRootAttributes = "on_first_login"
	CONNECTIONCREATEOPTIONSSETUSERROOTATTRIBUTES_NEVER_ON_LOGIN ConnectionCreateOptionsSetUserRootAttributes = "never_on_login"
)

// All allowed values of ConnectionCreateOptionsSetUserRootAttributes enum
var AllowedConnectionCreateOptionsSetUserRootAttributesEnumValues = []ConnectionCreateOptionsSetUserRootAttributes{
	"on_each_login",
	"on_first_login",
	"never_on_login",
}

func (v *ConnectionCreateOptionsSetUserRootAttributes) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ConnectionCreateOptionsSetUserRootAttributes(value)
	for _, existing := range AllowedConnectionCreateOptionsSetUserRootAttributesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ConnectionCreateOptionsSetUserRootAttributes", value)
}

// NewConnectionCreateOptionsSetUserRootAttributesFromValue returns a pointer to a valid ConnectionCreateOptionsSetUserRootAttributes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewConnectionCreateOptionsSetUserRootAttributesFromValue(v string) (*ConnectionCreateOptionsSetUserRootAttributes, error) {
	ev := ConnectionCreateOptionsSetUserRootAttributes(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ConnectionCreateOptionsSetUserRootAttributes: valid values are %v", v, AllowedConnectionCreateOptionsSetUserRootAttributesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ConnectionCreateOptionsSetUserRootAttributes) IsValid() bool {
	for _, existing := range AllowedConnectionCreateOptionsSetUserRootAttributesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to connectionCreate_options_set_user_root_attributes value
func (v ConnectionCreateOptionsSetUserRootAttributes) Ptr() *ConnectionCreateOptionsSetUserRootAttributes {
	return &v
}

type NullableConnectionCreateOptionsSetUserRootAttributes struct {
	value *ConnectionCreateOptionsSetUserRootAttributes
	isSet bool
}

func (v NullableConnectionCreateOptionsSetUserRootAttributes) Get() *ConnectionCreateOptionsSetUserRootAttributes {
	return v.value
}

func (v *NullableConnectionCreateOptionsSetUserRootAttributes) Set(val *ConnectionCreateOptionsSetUserRootAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionCreateOptionsSetUserRootAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionCreateOptionsSetUserRootAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionCreateOptionsSetUserRootAttributes(val *ConnectionCreateOptionsSetUserRootAttributes) *NullableConnectionCreateOptionsSetUserRootAttributes {
	return &NullableConnectionCreateOptionsSetUserRootAttributes{value: val, isSet: true}
}

func (v NullableConnectionCreateOptionsSetUserRootAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionCreateOptionsSetUserRootAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
