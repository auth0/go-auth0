/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// TenantSettingsUpdateDeviceFlow Device Flow configuration.
type TenantSettingsUpdateDeviceFlow struct {
	Charset *TenantSettingsDeviceFlowCharset `json:"charset,omitempty"`
	// Mask used to format a generated User Code into a friendly, readable format.
	Mask *string `json:"mask,omitempty"`
}

// GetCharset returns the Charset field value if set, zero value otherwise.
func (o *TenantSettingsUpdateDeviceFlow) GetCharset() TenantSettingsDeviceFlowCharset {
	if o == nil || IsNil(o.Charset) {
		var ret TenantSettingsDeviceFlowCharset
		return ret
	}
	return *o.Charset
}

// GetCharsetOk returns a tuple with the Charset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsUpdateDeviceFlow) GetCharsetOk() (*TenantSettingsDeviceFlowCharset, bool) {
	if o == nil || IsNil(o.Charset) {
		return nil, false
	}
	return o.Charset, true
}

// HasCharset returns a boolean if a field has been set.
func (o *TenantSettingsUpdateDeviceFlow) HasCharset() bool {
	if o != nil && !IsNil(o.Charset) {
		return true
	}

	return false
}

// SetCharset gets a reference to the given TenantSettingsDeviceFlowCharset and assigns it to the Charset field.
func (o *TenantSettingsUpdateDeviceFlow) SetCharset(v TenantSettingsDeviceFlowCharset) {
	o.Charset = &v
}

// GetMask returns the Mask field value if set, zero value otherwise.
func (o *TenantSettingsUpdateDeviceFlow) GetMask() string {
	if o == nil || IsNil(o.Mask) {
		var ret string
		return ret
	}
	return *o.Mask
}

// GetMaskOk returns a tuple with the Mask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsUpdateDeviceFlow) GetMaskOk() (*string, bool) {
	if o == nil || IsNil(o.Mask) {
		return nil, false
	}
	return o.Mask, true
}

// HasMask returns a boolean if a field has been set.
func (o *TenantSettingsUpdateDeviceFlow) HasMask() bool {
	if o != nil && !IsNil(o.Mask) {
		return true
	}

	return false
}

// SetMask gets a reference to the given string and assigns it to the Mask field.
func (o *TenantSettingsUpdateDeviceFlow) SetMask(v string) {
	o.Mask = &v
}

func (o TenantSettingsUpdateDeviceFlow) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantSettingsUpdateDeviceFlow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Charset) {
		toSerialize["charset"] = o.Charset
	}
	if !IsNil(o.Mask) {
		toSerialize["mask"] = o.Mask
	}
	return toSerialize, nil
}

type NullableTenantSettingsUpdateDeviceFlow struct {
	value *TenantSettingsUpdateDeviceFlow
	isSet bool
}

func (v NullableTenantSettingsUpdateDeviceFlow) Get() *TenantSettingsUpdateDeviceFlow {
	return v.value
}

func (v *NullableTenantSettingsUpdateDeviceFlow) Set(val *TenantSettingsUpdateDeviceFlow) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantSettingsUpdateDeviceFlow) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantSettingsUpdateDeviceFlow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantSettingsUpdateDeviceFlow(val *TenantSettingsUpdateDeviceFlow) *NullableTenantSettingsUpdateDeviceFlow {
	return &NullableTenantSettingsUpdateDeviceFlow{value: val, isSet: true}
}

func (v NullableTenantSettingsUpdateDeviceFlow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantSettingsUpdateDeviceFlow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
