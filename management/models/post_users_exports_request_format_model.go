/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PostUsersExportsRequestFormat Format of the file. Must be `json` or `csv`.
type PostUsersExportsRequestFormat string

// List of post_users_exports_request_format
const (
	POSTUSERSEXPORTSREQUESTFORMAT_JSON PostUsersExportsRequestFormat = "json"
	POSTUSERSEXPORTSREQUESTFORMAT_CSV  PostUsersExportsRequestFormat = "csv"
)

// All allowed values of PostUsersExportsRequestFormat enum
var AllowedPostUsersExportsRequestFormatEnumValues = []PostUsersExportsRequestFormat{
	"json",
	"csv",
}

func (v *PostUsersExportsRequestFormat) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PostUsersExportsRequestFormat(value)
	for _, existing := range AllowedPostUsersExportsRequestFormatEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PostUsersExportsRequestFormat", value)
}

// NewPostUsersExportsRequestFormatFromValue returns a pointer to a valid PostUsersExportsRequestFormat
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPostUsersExportsRequestFormatFromValue(v string) (*PostUsersExportsRequestFormat, error) {
	ev := PostUsersExportsRequestFormat(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PostUsersExportsRequestFormat: valid values are %v", v, AllowedPostUsersExportsRequestFormatEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PostUsersExportsRequestFormat) IsValid() bool {
	for _, existing := range AllowedPostUsersExportsRequestFormatEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to post_users_exports_request_format value
func (v PostUsersExportsRequestFormat) Ptr() *PostUsersExportsRequestFormat {
	return &v
}

type NullablePostUsersExportsRequestFormat struct {
	value *PostUsersExportsRequestFormat
	isSet bool
}

func (v NullablePostUsersExportsRequestFormat) Get() *PostUsersExportsRequestFormat {
	return v.value
}

func (v *NullablePostUsersExportsRequestFormat) Set(val *PostUsersExportsRequestFormat) {
	v.value = val
	v.isSet = true
}

func (v NullablePostUsersExportsRequestFormat) IsSet() bool {
	return v.isSet
}

func (v *NullablePostUsersExportsRequestFormat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostUsersExportsRequestFormat(val *PostUsersExportsRequestFormat) *NullablePostUsersExportsRequestFormat {
	return &NullablePostUsersExportsRequestFormat{value: val, isSet: true}
}

func (v NullablePostUsersExportsRequestFormat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostUsersExportsRequestFormat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
