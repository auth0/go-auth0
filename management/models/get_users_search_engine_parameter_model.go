/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetUsersSearchEngineParameter the model 'GetUsersSearchEngineParameter'
type GetUsersSearchEngineParameter string

// List of get_users_search_engine_parameter
const (
	GETUSERSSEARCHENGINEPARAMETER_V1 GetUsersSearchEngineParameter = "v1"
	GETUSERSSEARCHENGINEPARAMETER_V2 GetUsersSearchEngineParameter = "v2"
	GETUSERSSEARCHENGINEPARAMETER_V3 GetUsersSearchEngineParameter = "v3"
)

// All allowed values of GetUsersSearchEngineParameter enum
var AllowedGetUsersSearchEngineParameterEnumValues = []GetUsersSearchEngineParameter{
	"v1",
	"v2",
	"v3",
}

func (v *GetUsersSearchEngineParameter) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetUsersSearchEngineParameter(value)
	for _, existing := range AllowedGetUsersSearchEngineParameterEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetUsersSearchEngineParameter", value)
}

// NewGetUsersSearchEngineParameterFromValue returns a pointer to a valid GetUsersSearchEngineParameter
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetUsersSearchEngineParameterFromValue(v string) (*GetUsersSearchEngineParameter, error) {
	ev := GetUsersSearchEngineParameter(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetUsersSearchEngineParameter: valid values are %v", v, AllowedGetUsersSearchEngineParameterEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetUsersSearchEngineParameter) IsValid() bool {
	for _, existing := range AllowedGetUsersSearchEngineParameterEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to get_users_search_engine_parameter value
func (v GetUsersSearchEngineParameter) Ptr() *GetUsersSearchEngineParameter {
	return &v
}

type NullableGetUsersSearchEngineParameter struct {
	value *GetUsersSearchEngineParameter
	isSet bool
}

func (v NullableGetUsersSearchEngineParameter) Get() *GetUsersSearchEngineParameter {
	return v.value
}

func (v *NullableGetUsersSearchEngineParameter) Set(val *GetUsersSearchEngineParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUsersSearchEngineParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUsersSearchEngineParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUsersSearchEngineParameter(val *GetUsersSearchEngineParameter) *NullableGetUsersSearchEngineParameter {
	return &NullableGetUsersSearchEngineParameter{value: val, isSet: true}
}

func (v NullableGetUsersSearchEngineParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUsersSearchEngineParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
