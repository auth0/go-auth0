/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetPolicies200ResponseInner The MFA policy
type GetPolicies200ResponseInner string

// List of get_policies_200_response_inner
const (
	GETPOLICIES200RESPONSEINNER_ALL_APPLICATIONS GetPolicies200ResponseInner = "all-applications"
	GETPOLICIES200RESPONSEINNER_CONFIDENCE_SCORE GetPolicies200ResponseInner = "confidence-score"
)

// All allowed values of GetPolicies200ResponseInner enum
var AllowedGetPolicies200ResponseInnerEnumValues = []GetPolicies200ResponseInner{
	"all-applications",
	"confidence-score",
}

func (v *GetPolicies200ResponseInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetPolicies200ResponseInner(value)
	for _, existing := range AllowedGetPolicies200ResponseInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetPolicies200ResponseInner", value)
}

// NewGetPolicies200ResponseInnerFromValue returns a pointer to a valid GetPolicies200ResponseInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetPolicies200ResponseInnerFromValue(v string) (*GetPolicies200ResponseInner, error) {
	ev := GetPolicies200ResponseInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetPolicies200ResponseInner: valid values are %v", v, AllowedGetPolicies200ResponseInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetPolicies200ResponseInner) IsValid() bool {
	for _, existing := range AllowedGetPolicies200ResponseInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to get_policies_200_response_inner value
func (v GetPolicies200ResponseInner) Ptr() *GetPolicies200ResponseInner {
	return &v
}

type NullableGetPolicies200ResponseInner struct {
	value *GetPolicies200ResponseInner
	isSet bool
}

func (v NullableGetPolicies200ResponseInner) Get() *GetPolicies200ResponseInner {
	return v.value
}

func (v *NullableGetPolicies200ResponseInner) Set(val *GetPolicies200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPolicies200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPolicies200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPolicies200ResponseInner(val *GetPolicies200ResponseInner) *NullableGetPolicies200ResponseInner {
	return &NullableGetPolicies200ResponseInner{value: val, isSet: true}
}

func (v NullableGetPolicies200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPolicies200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
