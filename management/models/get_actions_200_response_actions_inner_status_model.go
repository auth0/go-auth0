/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetActions200ResponseActionsInnerStatus The build status of this action.
type GetActions200ResponseActionsInnerStatus string

// List of get_actions_200_response_actions_inner_status
const (
	GETACTIONS200RESPONSEACTIONSINNERSTATUS_PENDING  GetActions200ResponseActionsInnerStatus = "pending"
	GETACTIONS200RESPONSEACTIONSINNERSTATUS_BUILDING GetActions200ResponseActionsInnerStatus = "building"
	GETACTIONS200RESPONSEACTIONSINNERSTATUS_PACKAGED GetActions200ResponseActionsInnerStatus = "packaged"
	GETACTIONS200RESPONSEACTIONSINNERSTATUS_BUILT    GetActions200ResponseActionsInnerStatus = "built"
	GETACTIONS200RESPONSEACTIONSINNERSTATUS_RETRYING GetActions200ResponseActionsInnerStatus = "retrying"
	GETACTIONS200RESPONSEACTIONSINNERSTATUS_FAILED   GetActions200ResponseActionsInnerStatus = "failed"
)

// All allowed values of GetActions200ResponseActionsInnerStatus enum
var AllowedGetActions200ResponseActionsInnerStatusEnumValues = []GetActions200ResponseActionsInnerStatus{
	"pending",
	"building",
	"packaged",
	"built",
	"retrying",
	"failed",
}

func (v *GetActions200ResponseActionsInnerStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetActions200ResponseActionsInnerStatus(value)
	for _, existing := range AllowedGetActions200ResponseActionsInnerStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetActions200ResponseActionsInnerStatus", value)
}

// NewGetActions200ResponseActionsInnerStatusFromValue returns a pointer to a valid GetActions200ResponseActionsInnerStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetActions200ResponseActionsInnerStatusFromValue(v string) (*GetActions200ResponseActionsInnerStatus, error) {
	ev := GetActions200ResponseActionsInnerStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetActions200ResponseActionsInnerStatus: valid values are %v", v, AllowedGetActions200ResponseActionsInnerStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetActions200ResponseActionsInnerStatus) IsValid() bool {
	for _, existing := range AllowedGetActions200ResponseActionsInnerStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to get_actions_200_response_actions_inner_status value
func (v GetActions200ResponseActionsInnerStatus) Ptr() *GetActions200ResponseActionsInnerStatus {
	return &v
}

type NullableGetActions200ResponseActionsInnerStatus struct {
	value *GetActions200ResponseActionsInnerStatus
	isSet bool
}

func (v NullableGetActions200ResponseActionsInnerStatus) Get() *GetActions200ResponseActionsInnerStatus {
	return v.value
}

func (v *NullableGetActions200ResponseActionsInnerStatus) Set(val *GetActions200ResponseActionsInnerStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableGetActions200ResponseActionsInnerStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableGetActions200ResponseActionsInnerStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetActions200ResponseActionsInnerStatus(val *GetActions200ResponseActionsInnerStatus) *NullableGetActions200ResponseActionsInnerStatus {
	return &NullableGetActions200ResponseActionsInnerStatus{value: val, isSet: true}
}

func (v NullableGetActions200ResponseActionsInnerStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetActions200ResponseActionsInnerStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
