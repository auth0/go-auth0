/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientUpdateAddons Addons enabled for this client and their associated configurations.
type ClientUpdateAddons struct {
	Aws       *ClientAddonsAws       `json:"aws,omitempty"`
	AzureBlob *ClientAddonsAzureBlob `json:"azure_blob,omitempty"`
	AzureSb   *ClientAddonsAzureSb   `json:"azure_sb,omitempty"`
	Rms       *ClientAddonsRms       `json:"rms,omitempty"`
	Mscrm     *ClientAddonsMscrm     `json:"mscrm,omitempty"`
	Slack     *ClientAddonsSlack     `json:"slack,omitempty"`
	Sentry    *ClientAddonsSentry    `json:"sentry,omitempty"`
	// Box SSO indicator (no configuration settings needed for Box SSO).
	Box map[string]interface{} `json:"box,omitempty"`
	// CloudBees SSO indicator (no configuration settings needed for CloudBees SSO).
	Cloudbees map[string]interface{} `json:"cloudbees,omitempty"`
	// Concur SSO indicator (no configuration settings needed for Concur SSO).
	Concur map[string]interface{} `json:"concur,omitempty"`
	// Dropbox SSO indicator (no configuration settings needed for Dropbox SSO).
	Dropbox              map[string]interface{}            `json:"dropbox,omitempty"`
	Echosign             *ClientAddonsEchosign             `json:"echosign,omitempty"`
	Egnyte               *ClientAddonsEgnyte               `json:"egnyte,omitempty"`
	Firebase             *ClientAddonsFirebase             `json:"firebase,omitempty"`
	Newrelic             *ClientAddonsNewrelic             `json:"newrelic,omitempty"`
	Office365            *ClientAddonsOffice365            `json:"office365,omitempty"`
	Salesforce           *ClientAddonsSalesforce           `json:"salesforce,omitempty"`
	SalesforceApi        *ClientAddonsSalesforceApi        `json:"salesforce_api,omitempty"`
	SalesforceSandboxApi *ClientAddonsSalesforceSandboxApi `json:"salesforce_sandbox_api,omitempty"`
	Samlp                *ClientAddonsSamlp                `json:"samlp,omitempty"`
	Layer                *ClientAddonsLayer                `json:"layer,omitempty"`
	SapApi               *ClientAddonsSapApi               `json:"sap_api,omitempty"`
	Sharepoint           *ClientAddonsSharepoint           `json:"sharepoint,omitempty"`
	Springcm             *ClientAddonsSpringcm             `json:"springcm,omitempty"`
	Wams                 *ClientAddonsWams                 `json:"wams,omitempty"`
	// WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `client_aliases` properties on the client.
	Wsfed          map[string]interface{}      `json:"wsfed,omitempty"`
	Zendesk        *ClientAddonsZendesk        `json:"zendesk,omitempty"`
	Zoom           *ClientAddonsZoom           `json:"zoom,omitempty"`
	SsoIntegration *ClientAddonsSsoIntegration `json:"sso_integration,omitempty"`
	// Okta Access Gateway SSO configuration
	Oag map[string]interface{} `json:"oag,omitempty"`
}

// GetAws returns the Aws field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetAws() ClientAddonsAws {
	if o == nil || IsNil(o.Aws) {
		var ret ClientAddonsAws
		return ret
	}
	return *o.Aws
}

// GetAwsOk returns a tuple with the Aws field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetAwsOk() (*ClientAddonsAws, bool) {
	if o == nil || IsNil(o.Aws) {
		return nil, false
	}
	return o.Aws, true
}

// HasAws returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasAws() bool {
	if o != nil && !IsNil(o.Aws) {
		return true
	}

	return false
}

// SetAws gets a reference to the given ClientAddonsAws and assigns it to the Aws field.
func (o *ClientUpdateAddons) SetAws(v ClientAddonsAws) {
	o.Aws = &v
}

// GetAzureBlob returns the AzureBlob field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetAzureBlob() ClientAddonsAzureBlob {
	if o == nil || IsNil(o.AzureBlob) {
		var ret ClientAddonsAzureBlob
		return ret
	}
	return *o.AzureBlob
}

// GetAzureBlobOk returns a tuple with the AzureBlob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetAzureBlobOk() (*ClientAddonsAzureBlob, bool) {
	if o == nil || IsNil(o.AzureBlob) {
		return nil, false
	}
	return o.AzureBlob, true
}

// HasAzureBlob returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasAzureBlob() bool {
	if o != nil && !IsNil(o.AzureBlob) {
		return true
	}

	return false
}

// SetAzureBlob gets a reference to the given ClientAddonsAzureBlob and assigns it to the AzureBlob field.
func (o *ClientUpdateAddons) SetAzureBlob(v ClientAddonsAzureBlob) {
	o.AzureBlob = &v
}

// GetAzureSb returns the AzureSb field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetAzureSb() ClientAddonsAzureSb {
	if o == nil || IsNil(o.AzureSb) {
		var ret ClientAddonsAzureSb
		return ret
	}
	return *o.AzureSb
}

// GetAzureSbOk returns a tuple with the AzureSb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetAzureSbOk() (*ClientAddonsAzureSb, bool) {
	if o == nil || IsNil(o.AzureSb) {
		return nil, false
	}
	return o.AzureSb, true
}

// HasAzureSb returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasAzureSb() bool {
	if o != nil && !IsNil(o.AzureSb) {
		return true
	}

	return false
}

// SetAzureSb gets a reference to the given ClientAddonsAzureSb and assigns it to the AzureSb field.
func (o *ClientUpdateAddons) SetAzureSb(v ClientAddonsAzureSb) {
	o.AzureSb = &v
}

// GetRms returns the Rms field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetRms() ClientAddonsRms {
	if o == nil || IsNil(o.Rms) {
		var ret ClientAddonsRms
		return ret
	}
	return *o.Rms
}

// GetRmsOk returns a tuple with the Rms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetRmsOk() (*ClientAddonsRms, bool) {
	if o == nil || IsNil(o.Rms) {
		return nil, false
	}
	return o.Rms, true
}

// HasRms returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasRms() bool {
	if o != nil && !IsNil(o.Rms) {
		return true
	}

	return false
}

// SetRms gets a reference to the given ClientAddonsRms and assigns it to the Rms field.
func (o *ClientUpdateAddons) SetRms(v ClientAddonsRms) {
	o.Rms = &v
}

// GetMscrm returns the Mscrm field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetMscrm() ClientAddonsMscrm {
	if o == nil || IsNil(o.Mscrm) {
		var ret ClientAddonsMscrm
		return ret
	}
	return *o.Mscrm
}

// GetMscrmOk returns a tuple with the Mscrm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetMscrmOk() (*ClientAddonsMscrm, bool) {
	if o == nil || IsNil(o.Mscrm) {
		return nil, false
	}
	return o.Mscrm, true
}

// HasMscrm returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasMscrm() bool {
	if o != nil && !IsNil(o.Mscrm) {
		return true
	}

	return false
}

// SetMscrm gets a reference to the given ClientAddonsMscrm and assigns it to the Mscrm field.
func (o *ClientUpdateAddons) SetMscrm(v ClientAddonsMscrm) {
	o.Mscrm = &v
}

// GetSlack returns the Slack field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetSlack() ClientAddonsSlack {
	if o == nil || IsNil(o.Slack) {
		var ret ClientAddonsSlack
		return ret
	}
	return *o.Slack
}

// GetSlackOk returns a tuple with the Slack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetSlackOk() (*ClientAddonsSlack, bool) {
	if o == nil || IsNil(o.Slack) {
		return nil, false
	}
	return o.Slack, true
}

// HasSlack returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasSlack() bool {
	if o != nil && !IsNil(o.Slack) {
		return true
	}

	return false
}

// SetSlack gets a reference to the given ClientAddonsSlack and assigns it to the Slack field.
func (o *ClientUpdateAddons) SetSlack(v ClientAddonsSlack) {
	o.Slack = &v
}

// GetSentry returns the Sentry field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetSentry() ClientAddonsSentry {
	if o == nil || IsNil(o.Sentry) {
		var ret ClientAddonsSentry
		return ret
	}
	return *o.Sentry
}

// GetSentryOk returns a tuple with the Sentry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetSentryOk() (*ClientAddonsSentry, bool) {
	if o == nil || IsNil(o.Sentry) {
		return nil, false
	}
	return o.Sentry, true
}

// HasSentry returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasSentry() bool {
	if o != nil && !IsNil(o.Sentry) {
		return true
	}

	return false
}

// SetSentry gets a reference to the given ClientAddonsSentry and assigns it to the Sentry field.
func (o *ClientUpdateAddons) SetSentry(v ClientAddonsSentry) {
	o.Sentry = &v
}

// GetBox returns the Box field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetBox() map[string]interface{} {
	if o == nil || IsNil(o.Box) {
		var ret map[string]interface{}
		return ret
	}
	return o.Box
}

// GetBoxOk returns a tuple with the Box field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetBoxOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Box) {
		return map[string]interface{}{}, false
	}
	return o.Box, true
}

// HasBox returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasBox() bool {
	if o != nil && !IsNil(o.Box) {
		return true
	}

	return false
}

// SetBox gets a reference to the given map[string]interface{} and assigns it to the Box field.
func (o *ClientUpdateAddons) SetBox(v map[string]interface{}) {
	o.Box = v
}

// GetCloudbees returns the Cloudbees field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetCloudbees() map[string]interface{} {
	if o == nil || IsNil(o.Cloudbees) {
		var ret map[string]interface{}
		return ret
	}
	return o.Cloudbees
}

// GetCloudbeesOk returns a tuple with the Cloudbees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetCloudbeesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Cloudbees) {
		return map[string]interface{}{}, false
	}
	return o.Cloudbees, true
}

// HasCloudbees returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasCloudbees() bool {
	if o != nil && !IsNil(o.Cloudbees) {
		return true
	}

	return false
}

// SetCloudbees gets a reference to the given map[string]interface{} and assigns it to the Cloudbees field.
func (o *ClientUpdateAddons) SetCloudbees(v map[string]interface{}) {
	o.Cloudbees = v
}

// GetConcur returns the Concur field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetConcur() map[string]interface{} {
	if o == nil || IsNil(o.Concur) {
		var ret map[string]interface{}
		return ret
	}
	return o.Concur
}

// GetConcurOk returns a tuple with the Concur field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetConcurOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Concur) {
		return map[string]interface{}{}, false
	}
	return o.Concur, true
}

// HasConcur returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasConcur() bool {
	if o != nil && !IsNil(o.Concur) {
		return true
	}

	return false
}

// SetConcur gets a reference to the given map[string]interface{} and assigns it to the Concur field.
func (o *ClientUpdateAddons) SetConcur(v map[string]interface{}) {
	o.Concur = v
}

// GetDropbox returns the Dropbox field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetDropbox() map[string]interface{} {
	if o == nil || IsNil(o.Dropbox) {
		var ret map[string]interface{}
		return ret
	}
	return o.Dropbox
}

// GetDropboxOk returns a tuple with the Dropbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetDropboxOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Dropbox) {
		return map[string]interface{}{}, false
	}
	return o.Dropbox, true
}

// HasDropbox returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasDropbox() bool {
	if o != nil && !IsNil(o.Dropbox) {
		return true
	}

	return false
}

// SetDropbox gets a reference to the given map[string]interface{} and assigns it to the Dropbox field.
func (o *ClientUpdateAddons) SetDropbox(v map[string]interface{}) {
	o.Dropbox = v
}

// GetEchosign returns the Echosign field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetEchosign() ClientAddonsEchosign {
	if o == nil || IsNil(o.Echosign) {
		var ret ClientAddonsEchosign
		return ret
	}
	return *o.Echosign
}

// GetEchosignOk returns a tuple with the Echosign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetEchosignOk() (*ClientAddonsEchosign, bool) {
	if o == nil || IsNil(o.Echosign) {
		return nil, false
	}
	return o.Echosign, true
}

// HasEchosign returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasEchosign() bool {
	if o != nil && !IsNil(o.Echosign) {
		return true
	}

	return false
}

// SetEchosign gets a reference to the given ClientAddonsEchosign and assigns it to the Echosign field.
func (o *ClientUpdateAddons) SetEchosign(v ClientAddonsEchosign) {
	o.Echosign = &v
}

// GetEgnyte returns the Egnyte field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetEgnyte() ClientAddonsEgnyte {
	if o == nil || IsNil(o.Egnyte) {
		var ret ClientAddonsEgnyte
		return ret
	}
	return *o.Egnyte
}

// GetEgnyteOk returns a tuple with the Egnyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetEgnyteOk() (*ClientAddonsEgnyte, bool) {
	if o == nil || IsNil(o.Egnyte) {
		return nil, false
	}
	return o.Egnyte, true
}

// HasEgnyte returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasEgnyte() bool {
	if o != nil && !IsNil(o.Egnyte) {
		return true
	}

	return false
}

// SetEgnyte gets a reference to the given ClientAddonsEgnyte and assigns it to the Egnyte field.
func (o *ClientUpdateAddons) SetEgnyte(v ClientAddonsEgnyte) {
	o.Egnyte = &v
}

// GetFirebase returns the Firebase field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetFirebase() ClientAddonsFirebase {
	if o == nil || IsNil(o.Firebase) {
		var ret ClientAddonsFirebase
		return ret
	}
	return *o.Firebase
}

// GetFirebaseOk returns a tuple with the Firebase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetFirebaseOk() (*ClientAddonsFirebase, bool) {
	if o == nil || IsNil(o.Firebase) {
		return nil, false
	}
	return o.Firebase, true
}

// HasFirebase returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasFirebase() bool {
	if o != nil && !IsNil(o.Firebase) {
		return true
	}

	return false
}

// SetFirebase gets a reference to the given ClientAddonsFirebase and assigns it to the Firebase field.
func (o *ClientUpdateAddons) SetFirebase(v ClientAddonsFirebase) {
	o.Firebase = &v
}

// GetNewrelic returns the Newrelic field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetNewrelic() ClientAddonsNewrelic {
	if o == nil || IsNil(o.Newrelic) {
		var ret ClientAddonsNewrelic
		return ret
	}
	return *o.Newrelic
}

// GetNewrelicOk returns a tuple with the Newrelic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetNewrelicOk() (*ClientAddonsNewrelic, bool) {
	if o == nil || IsNil(o.Newrelic) {
		return nil, false
	}
	return o.Newrelic, true
}

// HasNewrelic returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasNewrelic() bool {
	if o != nil && !IsNil(o.Newrelic) {
		return true
	}

	return false
}

// SetNewrelic gets a reference to the given ClientAddonsNewrelic and assigns it to the Newrelic field.
func (o *ClientUpdateAddons) SetNewrelic(v ClientAddonsNewrelic) {
	o.Newrelic = &v
}

// GetOffice365 returns the Office365 field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetOffice365() ClientAddonsOffice365 {
	if o == nil || IsNil(o.Office365) {
		var ret ClientAddonsOffice365
		return ret
	}
	return *o.Office365
}

// GetOffice365Ok returns a tuple with the Office365 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetOffice365Ok() (*ClientAddonsOffice365, bool) {
	if o == nil || IsNil(o.Office365) {
		return nil, false
	}
	return o.Office365, true
}

// HasOffice365 returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasOffice365() bool {
	if o != nil && !IsNil(o.Office365) {
		return true
	}

	return false
}

// SetOffice365 gets a reference to the given ClientAddonsOffice365 and assigns it to the Office365 field.
func (o *ClientUpdateAddons) SetOffice365(v ClientAddonsOffice365) {
	o.Office365 = &v
}

// GetSalesforce returns the Salesforce field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetSalesforce() ClientAddonsSalesforce {
	if o == nil || IsNil(o.Salesforce) {
		var ret ClientAddonsSalesforce
		return ret
	}
	return *o.Salesforce
}

// GetSalesforceOk returns a tuple with the Salesforce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetSalesforceOk() (*ClientAddonsSalesforce, bool) {
	if o == nil || IsNil(o.Salesforce) {
		return nil, false
	}
	return o.Salesforce, true
}

// HasSalesforce returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasSalesforce() bool {
	if o != nil && !IsNil(o.Salesforce) {
		return true
	}

	return false
}

// SetSalesforce gets a reference to the given ClientAddonsSalesforce and assigns it to the Salesforce field.
func (o *ClientUpdateAddons) SetSalesforce(v ClientAddonsSalesforce) {
	o.Salesforce = &v
}

// GetSalesforceApi returns the SalesforceApi field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetSalesforceApi() ClientAddonsSalesforceApi {
	if o == nil || IsNil(o.SalesforceApi) {
		var ret ClientAddonsSalesforceApi
		return ret
	}
	return *o.SalesforceApi
}

// GetSalesforceApiOk returns a tuple with the SalesforceApi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetSalesforceApiOk() (*ClientAddonsSalesforceApi, bool) {
	if o == nil || IsNil(o.SalesforceApi) {
		return nil, false
	}
	return o.SalesforceApi, true
}

// HasSalesforceApi returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasSalesforceApi() bool {
	if o != nil && !IsNil(o.SalesforceApi) {
		return true
	}

	return false
}

// SetSalesforceApi gets a reference to the given ClientAddonsSalesforceApi and assigns it to the SalesforceApi field.
func (o *ClientUpdateAddons) SetSalesforceApi(v ClientAddonsSalesforceApi) {
	o.SalesforceApi = &v
}

// GetSalesforceSandboxApi returns the SalesforceSandboxApi field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetSalesforceSandboxApi() ClientAddonsSalesforceSandboxApi {
	if o == nil || IsNil(o.SalesforceSandboxApi) {
		var ret ClientAddonsSalesforceSandboxApi
		return ret
	}
	return *o.SalesforceSandboxApi
}

// GetSalesforceSandboxApiOk returns a tuple with the SalesforceSandboxApi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetSalesforceSandboxApiOk() (*ClientAddonsSalesforceSandboxApi, bool) {
	if o == nil || IsNil(o.SalesforceSandboxApi) {
		return nil, false
	}
	return o.SalesforceSandboxApi, true
}

// HasSalesforceSandboxApi returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasSalesforceSandboxApi() bool {
	if o != nil && !IsNil(o.SalesforceSandboxApi) {
		return true
	}

	return false
}

// SetSalesforceSandboxApi gets a reference to the given ClientAddonsSalesforceSandboxApi and assigns it to the SalesforceSandboxApi field.
func (o *ClientUpdateAddons) SetSalesforceSandboxApi(v ClientAddonsSalesforceSandboxApi) {
	o.SalesforceSandboxApi = &v
}

// GetSamlp returns the Samlp field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetSamlp() ClientAddonsSamlp {
	if o == nil || IsNil(o.Samlp) {
		var ret ClientAddonsSamlp
		return ret
	}
	return *o.Samlp
}

// GetSamlpOk returns a tuple with the Samlp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetSamlpOk() (*ClientAddonsSamlp, bool) {
	if o == nil || IsNil(o.Samlp) {
		return nil, false
	}
	return o.Samlp, true
}

// HasSamlp returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasSamlp() bool {
	if o != nil && !IsNil(o.Samlp) {
		return true
	}

	return false
}

// SetSamlp gets a reference to the given ClientAddonsSamlp and assigns it to the Samlp field.
func (o *ClientUpdateAddons) SetSamlp(v ClientAddonsSamlp) {
	o.Samlp = &v
}

// GetLayer returns the Layer field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetLayer() ClientAddonsLayer {
	if o == nil || IsNil(o.Layer) {
		var ret ClientAddonsLayer
		return ret
	}
	return *o.Layer
}

// GetLayerOk returns a tuple with the Layer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetLayerOk() (*ClientAddonsLayer, bool) {
	if o == nil || IsNil(o.Layer) {
		return nil, false
	}
	return o.Layer, true
}

// HasLayer returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasLayer() bool {
	if o != nil && !IsNil(o.Layer) {
		return true
	}

	return false
}

// SetLayer gets a reference to the given ClientAddonsLayer and assigns it to the Layer field.
func (o *ClientUpdateAddons) SetLayer(v ClientAddonsLayer) {
	o.Layer = &v
}

// GetSapApi returns the SapApi field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetSapApi() ClientAddonsSapApi {
	if o == nil || IsNil(o.SapApi) {
		var ret ClientAddonsSapApi
		return ret
	}
	return *o.SapApi
}

// GetSapApiOk returns a tuple with the SapApi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetSapApiOk() (*ClientAddonsSapApi, bool) {
	if o == nil || IsNil(o.SapApi) {
		return nil, false
	}
	return o.SapApi, true
}

// HasSapApi returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasSapApi() bool {
	if o != nil && !IsNil(o.SapApi) {
		return true
	}

	return false
}

// SetSapApi gets a reference to the given ClientAddonsSapApi and assigns it to the SapApi field.
func (o *ClientUpdateAddons) SetSapApi(v ClientAddonsSapApi) {
	o.SapApi = &v
}

// GetSharepoint returns the Sharepoint field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetSharepoint() ClientAddonsSharepoint {
	if o == nil || IsNil(o.Sharepoint) {
		var ret ClientAddonsSharepoint
		return ret
	}
	return *o.Sharepoint
}

// GetSharepointOk returns a tuple with the Sharepoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetSharepointOk() (*ClientAddonsSharepoint, bool) {
	if o == nil || IsNil(o.Sharepoint) {
		return nil, false
	}
	return o.Sharepoint, true
}

// HasSharepoint returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasSharepoint() bool {
	if o != nil && !IsNil(o.Sharepoint) {
		return true
	}

	return false
}

// SetSharepoint gets a reference to the given ClientAddonsSharepoint and assigns it to the Sharepoint field.
func (o *ClientUpdateAddons) SetSharepoint(v ClientAddonsSharepoint) {
	o.Sharepoint = &v
}

// GetSpringcm returns the Springcm field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetSpringcm() ClientAddonsSpringcm {
	if o == nil || IsNil(o.Springcm) {
		var ret ClientAddonsSpringcm
		return ret
	}
	return *o.Springcm
}

// GetSpringcmOk returns a tuple with the Springcm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetSpringcmOk() (*ClientAddonsSpringcm, bool) {
	if o == nil || IsNil(o.Springcm) {
		return nil, false
	}
	return o.Springcm, true
}

// HasSpringcm returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasSpringcm() bool {
	if o != nil && !IsNil(o.Springcm) {
		return true
	}

	return false
}

// SetSpringcm gets a reference to the given ClientAddonsSpringcm and assigns it to the Springcm field.
func (o *ClientUpdateAddons) SetSpringcm(v ClientAddonsSpringcm) {
	o.Springcm = &v
}

// GetWams returns the Wams field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetWams() ClientAddonsWams {
	if o == nil || IsNil(o.Wams) {
		var ret ClientAddonsWams
		return ret
	}
	return *o.Wams
}

// GetWamsOk returns a tuple with the Wams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetWamsOk() (*ClientAddonsWams, bool) {
	if o == nil || IsNil(o.Wams) {
		return nil, false
	}
	return o.Wams, true
}

// HasWams returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasWams() bool {
	if o != nil && !IsNil(o.Wams) {
		return true
	}

	return false
}

// SetWams gets a reference to the given ClientAddonsWams and assigns it to the Wams field.
func (o *ClientUpdateAddons) SetWams(v ClientAddonsWams) {
	o.Wams = &v
}

// GetWsfed returns the Wsfed field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetWsfed() map[string]interface{} {
	if o == nil || IsNil(o.Wsfed) {
		var ret map[string]interface{}
		return ret
	}
	return o.Wsfed
}

// GetWsfedOk returns a tuple with the Wsfed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetWsfedOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Wsfed) {
		return map[string]interface{}{}, false
	}
	return o.Wsfed, true
}

// HasWsfed returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasWsfed() bool {
	if o != nil && !IsNil(o.Wsfed) {
		return true
	}

	return false
}

// SetWsfed gets a reference to the given map[string]interface{} and assigns it to the Wsfed field.
func (o *ClientUpdateAddons) SetWsfed(v map[string]interface{}) {
	o.Wsfed = v
}

// GetZendesk returns the Zendesk field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetZendesk() ClientAddonsZendesk {
	if o == nil || IsNil(o.Zendesk) {
		var ret ClientAddonsZendesk
		return ret
	}
	return *o.Zendesk
}

// GetZendeskOk returns a tuple with the Zendesk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetZendeskOk() (*ClientAddonsZendesk, bool) {
	if o == nil || IsNil(o.Zendesk) {
		return nil, false
	}
	return o.Zendesk, true
}

// HasZendesk returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasZendesk() bool {
	if o != nil && !IsNil(o.Zendesk) {
		return true
	}

	return false
}

// SetZendesk gets a reference to the given ClientAddonsZendesk and assigns it to the Zendesk field.
func (o *ClientUpdateAddons) SetZendesk(v ClientAddonsZendesk) {
	o.Zendesk = &v
}

// GetZoom returns the Zoom field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetZoom() ClientAddonsZoom {
	if o == nil || IsNil(o.Zoom) {
		var ret ClientAddonsZoom
		return ret
	}
	return *o.Zoom
}

// GetZoomOk returns a tuple with the Zoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetZoomOk() (*ClientAddonsZoom, bool) {
	if o == nil || IsNil(o.Zoom) {
		return nil, false
	}
	return o.Zoom, true
}

// HasZoom returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasZoom() bool {
	if o != nil && !IsNil(o.Zoom) {
		return true
	}

	return false
}

// SetZoom gets a reference to the given ClientAddonsZoom and assigns it to the Zoom field.
func (o *ClientUpdateAddons) SetZoom(v ClientAddonsZoom) {
	o.Zoom = &v
}

// GetSsoIntegration returns the SsoIntegration field value if set, zero value otherwise.
func (o *ClientUpdateAddons) GetSsoIntegration() ClientAddonsSsoIntegration {
	if o == nil || IsNil(o.SsoIntegration) {
		var ret ClientAddonsSsoIntegration
		return ret
	}
	return *o.SsoIntegration
}

// GetSsoIntegrationOk returns a tuple with the SsoIntegration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateAddons) GetSsoIntegrationOk() (*ClientAddonsSsoIntegration, bool) {
	if o == nil || IsNil(o.SsoIntegration) {
		return nil, false
	}
	return o.SsoIntegration, true
}

// HasSsoIntegration returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasSsoIntegration() bool {
	if o != nil && !IsNil(o.SsoIntegration) {
		return true
	}

	return false
}

// SetSsoIntegration gets a reference to the given ClientAddonsSsoIntegration and assigns it to the SsoIntegration field.
func (o *ClientUpdateAddons) SetSsoIntegration(v ClientAddonsSsoIntegration) {
	o.SsoIntegration = &v
}

// GetOag returns the Oag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientUpdateAddons) GetOag() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Oag
}

// GetOagOk returns a tuple with the Oag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientUpdateAddons) GetOagOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Oag) {
		return map[string]interface{}{}, false
	}
	return o.Oag, true
}

// HasOag returns a boolean if a field has been set.
func (o *ClientUpdateAddons) HasOag() bool {
	if o != nil && !IsNil(o.Oag) {
		return true
	}

	return false
}

// SetOag gets a reference to the given map[string]interface{} and assigns it to the Oag field.
func (o *ClientUpdateAddons) SetOag(v map[string]interface{}) {
	o.Oag = v
}

func (o ClientUpdateAddons) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientUpdateAddons) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aws) {
		toSerialize["aws"] = o.Aws
	}
	if !IsNil(o.AzureBlob) {
		toSerialize["azure_blob"] = o.AzureBlob
	}
	if !IsNil(o.AzureSb) {
		toSerialize["azure_sb"] = o.AzureSb
	}
	if !IsNil(o.Rms) {
		toSerialize["rms"] = o.Rms
	}
	if !IsNil(o.Mscrm) {
		toSerialize["mscrm"] = o.Mscrm
	}
	if !IsNil(o.Slack) {
		toSerialize["slack"] = o.Slack
	}
	if !IsNil(o.Sentry) {
		toSerialize["sentry"] = o.Sentry
	}
	if !IsNil(o.Box) {
		toSerialize["box"] = o.Box
	}
	if !IsNil(o.Cloudbees) {
		toSerialize["cloudbees"] = o.Cloudbees
	}
	if !IsNil(o.Concur) {
		toSerialize["concur"] = o.Concur
	}
	if !IsNil(o.Dropbox) {
		toSerialize["dropbox"] = o.Dropbox
	}
	if !IsNil(o.Echosign) {
		toSerialize["echosign"] = o.Echosign
	}
	if !IsNil(o.Egnyte) {
		toSerialize["egnyte"] = o.Egnyte
	}
	if !IsNil(o.Firebase) {
		toSerialize["firebase"] = o.Firebase
	}
	if !IsNil(o.Newrelic) {
		toSerialize["newrelic"] = o.Newrelic
	}
	if !IsNil(o.Office365) {
		toSerialize["office365"] = o.Office365
	}
	if !IsNil(o.Salesforce) {
		toSerialize["salesforce"] = o.Salesforce
	}
	if !IsNil(o.SalesforceApi) {
		toSerialize["salesforce_api"] = o.SalesforceApi
	}
	if !IsNil(o.SalesforceSandboxApi) {
		toSerialize["salesforce_sandbox_api"] = o.SalesforceSandboxApi
	}
	if !IsNil(o.Samlp) {
		toSerialize["samlp"] = o.Samlp
	}
	if !IsNil(o.Layer) {
		toSerialize["layer"] = o.Layer
	}
	if !IsNil(o.SapApi) {
		toSerialize["sap_api"] = o.SapApi
	}
	if !IsNil(o.Sharepoint) {
		toSerialize["sharepoint"] = o.Sharepoint
	}
	if !IsNil(o.Springcm) {
		toSerialize["springcm"] = o.Springcm
	}
	if !IsNil(o.Wams) {
		toSerialize["wams"] = o.Wams
	}
	if !IsNil(o.Wsfed) {
		toSerialize["wsfed"] = o.Wsfed
	}
	if !IsNil(o.Zendesk) {
		toSerialize["zendesk"] = o.Zendesk
	}
	if !IsNil(o.Zoom) {
		toSerialize["zoom"] = o.Zoom
	}
	if !IsNil(o.SsoIntegration) {
		toSerialize["sso_integration"] = o.SsoIntegration
	}
	if o.Oag != nil {
		toSerialize["oag"] = o.Oag
	}
	return toSerialize, nil
}

type NullableClientUpdateAddons struct {
	value *ClientUpdateAddons
	isSet bool
}

func (v NullableClientUpdateAddons) Get() *ClientUpdateAddons {
	return v.value
}

func (v *NullableClientUpdateAddons) Set(val *ClientUpdateAddons) {
	v.value = val
	v.isSet = true
}

func (v NullableClientUpdateAddons) IsSet() bool {
	return v.isSet
}

func (v *NullableClientUpdateAddons) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientUpdateAddons(val *ClientUpdateAddons) *NullableClientUpdateAddons {
	return &NullableClientUpdateAddons{value: val, isSet: true}
}

func (v NullableClientUpdateAddons) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientUpdateAddons) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
