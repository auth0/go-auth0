/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientCreateOidcLogout Configuration for OIDC backchannel logout
type ClientCreateOidcLogout struct {
	// Comma-separated list of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.
	BackchannelLogoutUrls       []string                                           `json:"backchannel_logout_urls,omitempty"`
	BackchannelLogoutInitiators *ClientCreateOidcLogoutBackchannelLogoutInitiators `json:"backchannel_logout_initiators,omitempty"`
}

// GetBackchannelLogoutUrls returns the BackchannelLogoutUrls field value if set, zero value otherwise.
func (o *ClientCreateOidcLogout) GetBackchannelLogoutUrls() []string {
	if o == nil || IsNil(o.BackchannelLogoutUrls) {
		var ret []string
		return ret
	}
	return o.BackchannelLogoutUrls
}

// GetBackchannelLogoutUrlsOk returns a tuple with the BackchannelLogoutUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCreateOidcLogout) GetBackchannelLogoutUrlsOk() ([]string, bool) {
	if o == nil || IsNil(o.BackchannelLogoutUrls) {
		return nil, false
	}
	return o.BackchannelLogoutUrls, true
}

// HasBackchannelLogoutUrls returns a boolean if a field has been set.
func (o *ClientCreateOidcLogout) HasBackchannelLogoutUrls() bool {
	if o != nil && !IsNil(o.BackchannelLogoutUrls) {
		return true
	}

	return false
}

// SetBackchannelLogoutUrls gets a reference to the given []string and assigns it to the BackchannelLogoutUrls field.
func (o *ClientCreateOidcLogout) SetBackchannelLogoutUrls(v []string) {
	o.BackchannelLogoutUrls = v
}

// GetBackchannelLogoutInitiators returns the BackchannelLogoutInitiators field value if set, zero value otherwise.
func (o *ClientCreateOidcLogout) GetBackchannelLogoutInitiators() ClientCreateOidcLogoutBackchannelLogoutInitiators {
	if o == nil || IsNil(o.BackchannelLogoutInitiators) {
		var ret ClientCreateOidcLogoutBackchannelLogoutInitiators
		return ret
	}
	return *o.BackchannelLogoutInitiators
}

// GetBackchannelLogoutInitiatorsOk returns a tuple with the BackchannelLogoutInitiators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCreateOidcLogout) GetBackchannelLogoutInitiatorsOk() (*ClientCreateOidcLogoutBackchannelLogoutInitiators, bool) {
	if o == nil || IsNil(o.BackchannelLogoutInitiators) {
		return nil, false
	}
	return o.BackchannelLogoutInitiators, true
}

// HasBackchannelLogoutInitiators returns a boolean if a field has been set.
func (o *ClientCreateOidcLogout) HasBackchannelLogoutInitiators() bool {
	if o != nil && !IsNil(o.BackchannelLogoutInitiators) {
		return true
	}

	return false
}

// SetBackchannelLogoutInitiators gets a reference to the given ClientCreateOidcLogoutBackchannelLogoutInitiators and assigns it to the BackchannelLogoutInitiators field.
func (o *ClientCreateOidcLogout) SetBackchannelLogoutInitiators(v ClientCreateOidcLogoutBackchannelLogoutInitiators) {
	o.BackchannelLogoutInitiators = &v
}

func (o ClientCreateOidcLogout) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientCreateOidcLogout) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackchannelLogoutUrls) {
		toSerialize["backchannel_logout_urls"] = o.BackchannelLogoutUrls
	}
	if !IsNil(o.BackchannelLogoutInitiators) {
		toSerialize["backchannel_logout_initiators"] = o.BackchannelLogoutInitiators
	}
	return toSerialize, nil
}

type NullableClientCreateOidcLogout struct {
	value *ClientCreateOidcLogout
	isSet bool
}

func (v NullableClientCreateOidcLogout) Get() *ClientCreateOidcLogout {
	return v.value
}

func (v *NullableClientCreateOidcLogout) Set(val *ClientCreateOidcLogout) {
	v.value = val
	v.isSet = true
}

func (v NullableClientCreateOidcLogout) IsSet() bool {
	return v.isSet
}

func (v *NullableClientCreateOidcLogout) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientCreateOidcLogout(val *ClientCreateOidcLogout) *NullableClientCreateOidcLogout {
	return &NullableClientCreateOidcLogout{value: val, isSet: true}
}

func (v NullableClientCreateOidcLogout) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientCreateOidcLogout) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
