/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GetSession200ResponseAuthenticationMethodsInner Authentication signal details
type GetSession200ResponseAuthenticationMethodsInner struct {
	// One of: \"federated\", \"passkey\", \"pwd\", \"sms\", \"email\", \"mfa\", \"mock\" or a custom method denoted by a URL
	Name      *string                                                          `json:"name,omitempty"`
	Timestamp NullableGetSession200ResponseAuthenticationMethodsInnerTimestamp `json:"timestamp,omitempty"`
	// A specific MFA factor. Only present when \"name\" is set to \"mfa\"
	Type                 *string `json:"^type$,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetSession200ResponseAuthenticationMethodsInner GetSession200ResponseAuthenticationMethodsInner

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetSession200ResponseAuthenticationMethodsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSession200ResponseAuthenticationMethodsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetSession200ResponseAuthenticationMethodsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetSession200ResponseAuthenticationMethodsInner) SetName(v string) {
	o.Name = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetSession200ResponseAuthenticationMethodsInner) GetTimestamp() GetSession200ResponseAuthenticationMethodsInnerTimestamp {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret GetSession200ResponseAuthenticationMethodsInnerTimestamp
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetSession200ResponseAuthenticationMethodsInner) GetTimestampOk() (*GetSession200ResponseAuthenticationMethodsInnerTimestamp, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *GetSession200ResponseAuthenticationMethodsInner) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableGetSession200ResponseAuthenticationMethodsInnerTimestamp and assigns it to the Timestamp field.
func (o *GetSession200ResponseAuthenticationMethodsInner) SetTimestamp(v GetSession200ResponseAuthenticationMethodsInnerTimestamp) {
	o.Timestamp.Set(&v)
}

// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *GetSession200ResponseAuthenticationMethodsInner) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *GetSession200ResponseAuthenticationMethodsInner) UnsetTimestamp() {
	o.Timestamp.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetSession200ResponseAuthenticationMethodsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSession200ResponseAuthenticationMethodsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetSession200ResponseAuthenticationMethodsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetSession200ResponseAuthenticationMethodsInner) SetType(v string) {
	o.Type = &v
}

func (o GetSession200ResponseAuthenticationMethodsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSession200ResponseAuthenticationMethodsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["^type$"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetSession200ResponseAuthenticationMethodsInner) UnmarshalJSON(data []byte) (err error) {
	varGetSession200ResponseAuthenticationMethodsInner := _GetSession200ResponseAuthenticationMethodsInner{}

	err = json.Unmarshal(data, &varGetSession200ResponseAuthenticationMethodsInner)

	if err != nil {
		return err
	}

	*o = GetSession200ResponseAuthenticationMethodsInner(varGetSession200ResponseAuthenticationMethodsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "^type$")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetSession200ResponseAuthenticationMethodsInner struct {
	value *GetSession200ResponseAuthenticationMethodsInner
	isSet bool
}

func (v NullableGetSession200ResponseAuthenticationMethodsInner) Get() *GetSession200ResponseAuthenticationMethodsInner {
	return v.value
}

func (v *NullableGetSession200ResponseAuthenticationMethodsInner) Set(val *GetSession200ResponseAuthenticationMethodsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSession200ResponseAuthenticationMethodsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSession200ResponseAuthenticationMethodsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSession200ResponseAuthenticationMethodsInner(val *GetSession200ResponseAuthenticationMethodsInner) *NullableGetSession200ResponseAuthenticationMethodsInner {
	return &NullableGetSession200ResponseAuthenticationMethodsInner{value: val, isSet: true}
}

func (v NullableGetSession200ResponseAuthenticationMethodsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSession200ResponseAuthenticationMethodsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
