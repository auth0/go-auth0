/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GetSession200ResponseAuthenticationMethodsInner Authentication signal details
type GetSession200ResponseAuthenticationMethodsInner struct {
	// One of: \"federated\", \"passkey\", \"pwd\", \"sms\", \"email\", \"mfa\", \"mock\" or a custom method denoted by a URL
	Name      string                                                           `json:"name"`
	Timestamp NullableGetSession200ResponseAuthenticationMethodsInnerTimestamp `json:"timestamp"`
	// A specific MFA factor. Only present when \"name\" is set to \"mfa\"
	Type                 string `json:"^type$"`
	AdditionalProperties map[string]interface{}
}

type _GetSession200ResponseAuthenticationMethodsInner GetSession200ResponseAuthenticationMethodsInner

// GetName returns the Name field value
func (o *GetSession200ResponseAuthenticationMethodsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetSession200ResponseAuthenticationMethodsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetSession200ResponseAuthenticationMethodsInner) SetName(v string) {
	o.Name = v
}

// GetTimestamp returns the Timestamp field value
// If the value is explicit nil, the zero value for GetSession200ResponseAuthenticationMethodsInnerTimestamp will be returned
func (o *GetSession200ResponseAuthenticationMethodsInner) GetTimestamp() GetSession200ResponseAuthenticationMethodsInnerTimestamp {
	if o == nil || o.Timestamp.Get() == nil {
		var ret GetSession200ResponseAuthenticationMethodsInnerTimestamp
		return ret
	}

	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetSession200ResponseAuthenticationMethodsInner) GetTimestampOk() (*GetSession200ResponseAuthenticationMethodsInnerTimestamp, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// SetTimestamp sets field value
func (o *GetSession200ResponseAuthenticationMethodsInner) SetTimestamp(v GetSession200ResponseAuthenticationMethodsInnerTimestamp) {
	o.Timestamp.Set(&v)
}

// GetType returns the Type field value
func (o *GetSession200ResponseAuthenticationMethodsInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GetSession200ResponseAuthenticationMethodsInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *GetSession200ResponseAuthenticationMethodsInner) SetType(v string) {
	o.Type = v
}

func (o GetSession200ResponseAuthenticationMethodsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSession200ResponseAuthenticationMethodsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["timestamp"] = o.Timestamp.Get()
	toSerialize["^type$"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetSession200ResponseAuthenticationMethodsInner) UnmarshalJSON(data []byte) (err error) {
	varGetSession200ResponseAuthenticationMethodsInner := _GetSession200ResponseAuthenticationMethodsInner{}

	err = json.Unmarshal(data, &varGetSession200ResponseAuthenticationMethodsInner)

	if err != nil {
		return err
	}

	*o = GetSession200ResponseAuthenticationMethodsInner(varGetSession200ResponseAuthenticationMethodsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "^type$")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetSession200ResponseAuthenticationMethodsInner struct {
	value *GetSession200ResponseAuthenticationMethodsInner
	isSet bool
}

func (v NullableGetSession200ResponseAuthenticationMethodsInner) Get() *GetSession200ResponseAuthenticationMethodsInner {
	return v.value
}

func (v *NullableGetSession200ResponseAuthenticationMethodsInner) Set(val *GetSession200ResponseAuthenticationMethodsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSession200ResponseAuthenticationMethodsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSession200ResponseAuthenticationMethodsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSession200ResponseAuthenticationMethodsInner(val *GetSession200ResponseAuthenticationMethodsInner) *NullableGetSession200ResponseAuthenticationMethodsInner {
	return &NullableGetSession200ResponseAuthenticationMethodsInner{value: val, isSet: true}
}

func (v NullableGetSession200ResponseAuthenticationMethodsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSession200ResponseAuthenticationMethodsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
