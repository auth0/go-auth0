/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientAddonsSalesforceApi Salesforce API addon configuration.
type ClientAddonsSalesforceApi struct {
	// Consumer Key assigned by Salesforce to the Connected App.
	Clientid *string `json:"clientid,omitempty"`
	// Name of the property in the user object that maps to a Salesforce username. e.g. `email`.
	Principal *string `json:"principal,omitempty"`
	// Community name.
	CommunityName *string `json:"communityName,omitempty"`
	// Community url section.
	CommunityUrlSection  *string `json:"community_url_section,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClientAddonsSalesforceApi ClientAddonsSalesforceApi

// GetClientid returns the Clientid field value if set, zero value otherwise.
func (o *ClientAddonsSalesforceApi) GetClientid() string {
	if o == nil || IsNil(o.Clientid) {
		var ret string
		return ret
	}
	return *o.Clientid
}

// GetClientidOk returns a tuple with the Clientid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAddonsSalesforceApi) GetClientidOk() (*string, bool) {
	if o == nil || IsNil(o.Clientid) {
		return nil, false
	}
	return o.Clientid, true
}

// HasClientid returns a boolean if a field has been set.
func (o *ClientAddonsSalesforceApi) HasClientid() bool {
	if o != nil && !IsNil(o.Clientid) {
		return true
	}

	return false
}

// SetClientid gets a reference to the given string and assigns it to the Clientid field.
func (o *ClientAddonsSalesforceApi) SetClientid(v string) {
	o.Clientid = &v
}

// GetPrincipal returns the Principal field value if set, zero value otherwise.
func (o *ClientAddonsSalesforceApi) GetPrincipal() string {
	if o == nil || IsNil(o.Principal) {
		var ret string
		return ret
	}
	return *o.Principal
}

// GetPrincipalOk returns a tuple with the Principal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAddonsSalesforceApi) GetPrincipalOk() (*string, bool) {
	if o == nil || IsNil(o.Principal) {
		return nil, false
	}
	return o.Principal, true
}

// HasPrincipal returns a boolean if a field has been set.
func (o *ClientAddonsSalesforceApi) HasPrincipal() bool {
	if o != nil && !IsNil(o.Principal) {
		return true
	}

	return false
}

// SetPrincipal gets a reference to the given string and assigns it to the Principal field.
func (o *ClientAddonsSalesforceApi) SetPrincipal(v string) {
	o.Principal = &v
}

// GetCommunityName returns the CommunityName field value if set, zero value otherwise.
func (o *ClientAddonsSalesforceApi) GetCommunityName() string {
	if o == nil || IsNil(o.CommunityName) {
		var ret string
		return ret
	}
	return *o.CommunityName
}

// GetCommunityNameOk returns a tuple with the CommunityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAddonsSalesforceApi) GetCommunityNameOk() (*string, bool) {
	if o == nil || IsNil(o.CommunityName) {
		return nil, false
	}
	return o.CommunityName, true
}

// HasCommunityName returns a boolean if a field has been set.
func (o *ClientAddonsSalesforceApi) HasCommunityName() bool {
	if o != nil && !IsNil(o.CommunityName) {
		return true
	}

	return false
}

// SetCommunityName gets a reference to the given string and assigns it to the CommunityName field.
func (o *ClientAddonsSalesforceApi) SetCommunityName(v string) {
	o.CommunityName = &v
}

// GetCommunityUrlSection returns the CommunityUrlSection field value if set, zero value otherwise.
func (o *ClientAddonsSalesforceApi) GetCommunityUrlSection() string {
	if o == nil || IsNil(o.CommunityUrlSection) {
		var ret string
		return ret
	}
	return *o.CommunityUrlSection
}

// GetCommunityUrlSectionOk returns a tuple with the CommunityUrlSection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAddonsSalesforceApi) GetCommunityUrlSectionOk() (*string, bool) {
	if o == nil || IsNil(o.CommunityUrlSection) {
		return nil, false
	}
	return o.CommunityUrlSection, true
}

// HasCommunityUrlSection returns a boolean if a field has been set.
func (o *ClientAddonsSalesforceApi) HasCommunityUrlSection() bool {
	if o != nil && !IsNil(o.CommunityUrlSection) {
		return true
	}

	return false
}

// SetCommunityUrlSection gets a reference to the given string and assigns it to the CommunityUrlSection field.
func (o *ClientAddonsSalesforceApi) SetCommunityUrlSection(v string) {
	o.CommunityUrlSection = &v
}

func (o ClientAddonsSalesforceApi) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientAddonsSalesforceApi) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Clientid) {
		toSerialize["clientid"] = o.Clientid
	}
	if !IsNil(o.Principal) {
		toSerialize["principal"] = o.Principal
	}
	if !IsNil(o.CommunityName) {
		toSerialize["communityName"] = o.CommunityName
	}
	if !IsNil(o.CommunityUrlSection) {
		toSerialize["community_url_section"] = o.CommunityUrlSection
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClientAddonsSalesforceApi) UnmarshalJSON(data []byte) (err error) {
	varClientAddonsSalesforceApi := _ClientAddonsSalesforceApi{}

	err = json.Unmarshal(data, &varClientAddonsSalesforceApi)

	if err != nil {
		return err
	}

	*o = ClientAddonsSalesforceApi(varClientAddonsSalesforceApi)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "clientid")
		delete(additionalProperties, "principal")
		delete(additionalProperties, "communityName")
		delete(additionalProperties, "community_url_section")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClientAddonsSalesforceApi struct {
	value *ClientAddonsSalesforceApi
	isSet bool
}

func (v NullableClientAddonsSalesforceApi) Get() *ClientAddonsSalesforceApi {
	return v.value
}

func (v *NullableClientAddonsSalesforceApi) Set(val *ClientAddonsSalesforceApi) {
	v.value = val
	v.isSet = true
}

func (v NullableClientAddonsSalesforceApi) IsSet() bool {
	return v.isSet
}

func (v *NullableClientAddonsSalesforceApi) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientAddonsSalesforceApi(val *ClientAddonsSalesforceApi) *NullableClientAddonsSalesforceApi {
	return &NullableClientAddonsSalesforceApi{value: val, isSet: true}
}

func (v NullableClientAddonsSalesforceApi) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientAddonsSalesforceApi) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
