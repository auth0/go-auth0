/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetActionVersions200ResponseVersionsInnerStatus The build status of this specific version.
type GetActionVersions200ResponseVersionsInnerStatus string

// List of get_action_versions_200_response_versions_inner_status
const (
	GETACTIONVERSIONS200RESPONSEVERSIONSINNERSTATUS_PENDING  GetActionVersions200ResponseVersionsInnerStatus = "pending"
	GETACTIONVERSIONS200RESPONSEVERSIONSINNERSTATUS_BUILDING GetActionVersions200ResponseVersionsInnerStatus = "building"
	GETACTIONVERSIONS200RESPONSEVERSIONSINNERSTATUS_PACKAGED GetActionVersions200ResponseVersionsInnerStatus = "packaged"
	GETACTIONVERSIONS200RESPONSEVERSIONSINNERSTATUS_BUILT    GetActionVersions200ResponseVersionsInnerStatus = "built"
	GETACTIONVERSIONS200RESPONSEVERSIONSINNERSTATUS_RETRYING GetActionVersions200ResponseVersionsInnerStatus = "retrying"
	GETACTIONVERSIONS200RESPONSEVERSIONSINNERSTATUS_FAILED   GetActionVersions200ResponseVersionsInnerStatus = "failed"
)

// All allowed values of GetActionVersions200ResponseVersionsInnerStatus enum
var AllowedGetActionVersions200ResponseVersionsInnerStatusEnumValues = []GetActionVersions200ResponseVersionsInnerStatus{
	"pending",
	"building",
	"packaged",
	"built",
	"retrying",
	"failed",
}

func (v *GetActionVersions200ResponseVersionsInnerStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetActionVersions200ResponseVersionsInnerStatus(value)
	for _, existing := range AllowedGetActionVersions200ResponseVersionsInnerStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetActionVersions200ResponseVersionsInnerStatus", value)
}

// NewGetActionVersions200ResponseVersionsInnerStatusFromValue returns a pointer to a valid GetActionVersions200ResponseVersionsInnerStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetActionVersions200ResponseVersionsInnerStatusFromValue(v string) (*GetActionVersions200ResponseVersionsInnerStatus, error) {
	ev := GetActionVersions200ResponseVersionsInnerStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetActionVersions200ResponseVersionsInnerStatus: valid values are %v", v, AllowedGetActionVersions200ResponseVersionsInnerStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetActionVersions200ResponseVersionsInnerStatus) IsValid() bool {
	for _, existing := range AllowedGetActionVersions200ResponseVersionsInnerStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to get_action_versions_200_response_versions_inner_status value
func (v GetActionVersions200ResponseVersionsInnerStatus) Ptr() *GetActionVersions200ResponseVersionsInnerStatus {
	return &v
}

type NullableGetActionVersions200ResponseVersionsInnerStatus struct {
	value *GetActionVersions200ResponseVersionsInnerStatus
	isSet bool
}

func (v NullableGetActionVersions200ResponseVersionsInnerStatus) Get() *GetActionVersions200ResponseVersionsInnerStatus {
	return v.value
}

func (v *NullableGetActionVersions200ResponseVersionsInnerStatus) Set(val *GetActionVersions200ResponseVersionsInnerStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableGetActionVersions200ResponseVersionsInnerStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableGetActionVersions200ResponseVersionsInnerStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetActionVersions200ResponseVersionsInnerStatus(val *GetActionVersions200ResponseVersionsInnerStatus) *NullableGetActionVersions200ResponseVersionsInnerStatus {
	return &NullableGetActionVersions200ResponseVersionsInnerStatus{value: val, isSet: true}
}

func (v NullableGetActionVersions200ResponseVersionsInnerStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetActionVersions200ResponseVersionsInnerStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
