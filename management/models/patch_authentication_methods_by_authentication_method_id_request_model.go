/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PatchAuthenticationMethodsByAuthenticationMethodIdRequest struct for PatchAuthenticationMethodsByAuthenticationMethodIdRequest
type PatchAuthenticationMethodsByAuthenticationMethodIdRequest struct {
	// A human-readable label to identify the authentication method.
	Name                          *string                                                                `json:"name,omitempty"`
	PreferredAuthenticationMethod *PutAuthenticationMethods200ResponseInnerPreferredAuthenticationMethod `json:"preferred_authentication_method,omitempty"`
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchAuthenticationMethodsByAuthenticationMethodIdRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchAuthenticationMethodsByAuthenticationMethodIdRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchAuthenticationMethodsByAuthenticationMethodIdRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchAuthenticationMethodsByAuthenticationMethodIdRequest) SetName(v string) {
	o.Name = &v
}

// GetPreferredAuthenticationMethod returns the PreferredAuthenticationMethod field value if set, zero value otherwise.
func (o *PatchAuthenticationMethodsByAuthenticationMethodIdRequest) GetPreferredAuthenticationMethod() PutAuthenticationMethods200ResponseInnerPreferredAuthenticationMethod {
	if o == nil || IsNil(o.PreferredAuthenticationMethod) {
		var ret PutAuthenticationMethods200ResponseInnerPreferredAuthenticationMethod
		return ret
	}
	return *o.PreferredAuthenticationMethod
}

// GetPreferredAuthenticationMethodOk returns a tuple with the PreferredAuthenticationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchAuthenticationMethodsByAuthenticationMethodIdRequest) GetPreferredAuthenticationMethodOk() (*PutAuthenticationMethods200ResponseInnerPreferredAuthenticationMethod, bool) {
	if o == nil || IsNil(o.PreferredAuthenticationMethod) {
		return nil, false
	}
	return o.PreferredAuthenticationMethod, true
}

// HasPreferredAuthenticationMethod returns a boolean if a field has been set.
func (o *PatchAuthenticationMethodsByAuthenticationMethodIdRequest) HasPreferredAuthenticationMethod() bool {
	if o != nil && !IsNil(o.PreferredAuthenticationMethod) {
		return true
	}

	return false
}

// SetPreferredAuthenticationMethod gets a reference to the given PutAuthenticationMethods200ResponseInnerPreferredAuthenticationMethod and assigns it to the PreferredAuthenticationMethod field.
func (o *PatchAuthenticationMethodsByAuthenticationMethodIdRequest) SetPreferredAuthenticationMethod(v PutAuthenticationMethods200ResponseInnerPreferredAuthenticationMethod) {
	o.PreferredAuthenticationMethod = &v
}

func (o PatchAuthenticationMethodsByAuthenticationMethodIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchAuthenticationMethodsByAuthenticationMethodIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PreferredAuthenticationMethod) {
		toSerialize["preferred_authentication_method"] = o.PreferredAuthenticationMethod
	}
	return toSerialize, nil
}

type NullablePatchAuthenticationMethodsByAuthenticationMethodIdRequest struct {
	value *PatchAuthenticationMethodsByAuthenticationMethodIdRequest
	isSet bool
}

func (v NullablePatchAuthenticationMethodsByAuthenticationMethodIdRequest) Get() *PatchAuthenticationMethodsByAuthenticationMethodIdRequest {
	return v.value
}

func (v *NullablePatchAuthenticationMethodsByAuthenticationMethodIdRequest) Set(val *PatchAuthenticationMethodsByAuthenticationMethodIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchAuthenticationMethodsByAuthenticationMethodIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchAuthenticationMethodsByAuthenticationMethodIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchAuthenticationMethodsByAuthenticationMethodIdRequest(val *PatchAuthenticationMethodsByAuthenticationMethodIdRequest) *NullablePatchAuthenticationMethodsByAuthenticationMethodIdRequest {
	return &NullablePatchAuthenticationMethodsByAuthenticationMethodIdRequest{value: val, isSet: true}
}

func (v NullablePatchAuthenticationMethodsByAuthenticationMethodIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchAuthenticationMethodsByAuthenticationMethodIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
