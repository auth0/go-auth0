/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PatchBindingsRequestBindingsInnerRefType How the action is being referred to: `action_id` or `action_name`.
type PatchBindingsRequestBindingsInnerRefType string

// List of patch_bindings_request_bindings_inner_ref_type
const (
	PATCHBINDINGSREQUESTBINDINGSINNERREFTYPE_BINDING_ID  PatchBindingsRequestBindingsInnerRefType = "binding_id"
	PATCHBINDINGSREQUESTBINDINGSINNERREFTYPE_ACTION_ID   PatchBindingsRequestBindingsInnerRefType = "action_id"
	PATCHBINDINGSREQUESTBINDINGSINNERREFTYPE_ACTION_NAME PatchBindingsRequestBindingsInnerRefType = "action_name"
)

// All allowed values of PatchBindingsRequestBindingsInnerRefType enum
var AllowedPatchBindingsRequestBindingsInnerRefTypeEnumValues = []PatchBindingsRequestBindingsInnerRefType{
	"binding_id",
	"action_id",
	"action_name",
}

func (v *PatchBindingsRequestBindingsInnerRefType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PatchBindingsRequestBindingsInnerRefType(value)
	for _, existing := range AllowedPatchBindingsRequestBindingsInnerRefTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PatchBindingsRequestBindingsInnerRefType", value)
}

// NewPatchBindingsRequestBindingsInnerRefTypeFromValue returns a pointer to a valid PatchBindingsRequestBindingsInnerRefType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPatchBindingsRequestBindingsInnerRefTypeFromValue(v string) (*PatchBindingsRequestBindingsInnerRefType, error) {
	ev := PatchBindingsRequestBindingsInnerRefType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PatchBindingsRequestBindingsInnerRefType: valid values are %v", v, AllowedPatchBindingsRequestBindingsInnerRefTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PatchBindingsRequestBindingsInnerRefType) IsValid() bool {
	for _, existing := range AllowedPatchBindingsRequestBindingsInnerRefTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to patch_bindings_request_bindings_inner_ref_type value
func (v PatchBindingsRequestBindingsInnerRefType) Ptr() *PatchBindingsRequestBindingsInnerRefType {
	return &v
}

type NullablePatchBindingsRequestBindingsInnerRefType struct {
	value *PatchBindingsRequestBindingsInnerRefType
	isSet bool
}

func (v NullablePatchBindingsRequestBindingsInnerRefType) Get() *PatchBindingsRequestBindingsInnerRefType {
	return v.value
}

func (v *NullablePatchBindingsRequestBindingsInnerRefType) Set(val *PatchBindingsRequestBindingsInnerRefType) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchBindingsRequestBindingsInnerRefType) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchBindingsRequestBindingsInnerRefType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchBindingsRequestBindingsInnerRefType(val *PatchBindingsRequestBindingsInnerRefType) *NullablePatchBindingsRequestBindingsInnerRefType {
	return &NullablePatchBindingsRequestBindingsInnerRefType{value: val, isSet: true}
}

func (v NullablePatchBindingsRequestBindingsInnerRefType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchBindingsRequestBindingsInnerRefType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
