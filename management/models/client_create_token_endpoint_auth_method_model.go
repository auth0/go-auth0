/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ClientCreateTokenEndpointAuthMethod Defines the requested authentication method for the token endpoint. Can be `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), or `client_secret_basic` (client uses HTTP Basic).
type ClientCreateTokenEndpointAuthMethod string

// List of clientCreate_token_endpoint_auth_method
const (
	CLIENTCREATETOKENENDPOINTAUTHMETHOD_NONE                ClientCreateTokenEndpointAuthMethod = "none"
	CLIENTCREATETOKENENDPOINTAUTHMETHOD_CLIENT_SECRET_POST  ClientCreateTokenEndpointAuthMethod = "client_secret_post"
	CLIENTCREATETOKENENDPOINTAUTHMETHOD_CLIENT_SECRET_BASIC ClientCreateTokenEndpointAuthMethod = "client_secret_basic"
)

// All allowed values of ClientCreateTokenEndpointAuthMethod enum
var AllowedClientCreateTokenEndpointAuthMethodEnumValues = []ClientCreateTokenEndpointAuthMethod{
	"none",
	"client_secret_post",
	"client_secret_basic",
}

func (v *ClientCreateTokenEndpointAuthMethod) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ClientCreateTokenEndpointAuthMethod(value)
	for _, existing := range AllowedClientCreateTokenEndpointAuthMethodEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ClientCreateTokenEndpointAuthMethod", value)
}

// NewClientCreateTokenEndpointAuthMethodFromValue returns a pointer to a valid ClientCreateTokenEndpointAuthMethod
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewClientCreateTokenEndpointAuthMethodFromValue(v string) (*ClientCreateTokenEndpointAuthMethod, error) {
	ev := ClientCreateTokenEndpointAuthMethod(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ClientCreateTokenEndpointAuthMethod: valid values are %v", v, AllowedClientCreateTokenEndpointAuthMethodEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ClientCreateTokenEndpointAuthMethod) IsValid() bool {
	for _, existing := range AllowedClientCreateTokenEndpointAuthMethodEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to clientCreate_token_endpoint_auth_method value
func (v ClientCreateTokenEndpointAuthMethod) Ptr() *ClientCreateTokenEndpointAuthMethod {
	return &v
}

type NullableClientCreateTokenEndpointAuthMethod struct {
	value *ClientCreateTokenEndpointAuthMethod
	isSet bool
}

func (v NullableClientCreateTokenEndpointAuthMethod) Get() *ClientCreateTokenEndpointAuthMethod {
	return v.value
}

func (v *NullableClientCreateTokenEndpointAuthMethod) Set(val *ClientCreateTokenEndpointAuthMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableClientCreateTokenEndpointAuthMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableClientCreateTokenEndpointAuthMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientCreateTokenEndpointAuthMethod(val *ClientCreateTokenEndpointAuthMethod) *NullableClientCreateTokenEndpointAuthMethod {
	return &NullableClientCreateTokenEndpointAuthMethod{value: val, isSet: true}
}

func (v NullableClientCreateTokenEndpointAuthMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientCreateTokenEndpointAuthMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
