/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientMobileIos iOS native app configuration.
type ClientMobileIos struct {
	// Identifier assigned to the Apple account that signs and uploads the app to the store.
	TeamId string `json:"team_id"`
	// Assigned by developer to the app as its unique identifier inside the store. Usually this is a reverse domain plus the app name, e.g. `com.you.MyApp`.
	AppBundleIdentifier  string `json:"app_bundle_identifier"`
	AdditionalProperties map[string]interface{}
}

type _ClientMobileIos ClientMobileIos

// GetTeamId returns the TeamId field value
func (o *ClientMobileIos) GetTeamId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value
// and a boolean to check if the value has been set.
func (o *ClientMobileIos) GetTeamIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TeamId, true
}

// SetTeamId sets field value
func (o *ClientMobileIos) SetTeamId(v string) {
	o.TeamId = v
}

// GetAppBundleIdentifier returns the AppBundleIdentifier field value
func (o *ClientMobileIos) GetAppBundleIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppBundleIdentifier
}

// GetAppBundleIdentifierOk returns a tuple with the AppBundleIdentifier field value
// and a boolean to check if the value has been set.
func (o *ClientMobileIos) GetAppBundleIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppBundleIdentifier, true
}

// SetAppBundleIdentifier sets field value
func (o *ClientMobileIos) SetAppBundleIdentifier(v string) {
	o.AppBundleIdentifier = v
}

func (o ClientMobileIos) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientMobileIos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["team_id"] = o.TeamId
	toSerialize["app_bundle_identifier"] = o.AppBundleIdentifier

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClientMobileIos) UnmarshalJSON(data []byte) (err error) {
	varClientMobileIos := _ClientMobileIos{}

	err = json.Unmarshal(data, &varClientMobileIos)

	if err != nil {
		return err
	}

	*o = ClientMobileIos(varClientMobileIos)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "team_id")
		delete(additionalProperties, "app_bundle_identifier")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClientMobileIos struct {
	value *ClientMobileIos
	isSet bool
}

func (v NullableClientMobileIos) Get() *ClientMobileIos {
	return v.value
}

func (v *NullableClientMobileIos) Set(val *ClientMobileIos) {
	v.value = val
	v.isSet = true
}

func (v NullableClientMobileIos) IsSet() bool {
	return v.isSet
}

func (v *NullableClientMobileIos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientMobileIos(val *ClientMobileIos) *NullableClientMobileIos {
	return &NullableClientMobileIos{value: val, isSet: true}
}

func (v NullableClientMobileIos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientMobileIos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
