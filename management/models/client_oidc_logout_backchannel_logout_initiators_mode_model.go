/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ClientOidcLogoutBackchannelLogoutInitiatorsMode The `mode` property determines the configuration method for enabling initiators. `custom` enables only the initiators listed in the selected_initiators array, `all` enables all current and future initiators.
type ClientOidcLogoutBackchannelLogoutInitiatorsMode string

// List of client_oidc_logout_backchannel_logout_initiators_mode
const (
	CLIENTOIDCLOGOUTBACKCHANNELLOGOUTINITIATORSMODE_CUSTOM ClientOidcLogoutBackchannelLogoutInitiatorsMode = "custom"
	CLIENTOIDCLOGOUTBACKCHANNELLOGOUTINITIATORSMODE_ALL    ClientOidcLogoutBackchannelLogoutInitiatorsMode = "all"
)

// All allowed values of ClientOidcLogoutBackchannelLogoutInitiatorsMode enum
var AllowedClientOidcLogoutBackchannelLogoutInitiatorsModeEnumValues = []ClientOidcLogoutBackchannelLogoutInitiatorsMode{
	"custom",
	"all",
}

func (v *ClientOidcLogoutBackchannelLogoutInitiatorsMode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ClientOidcLogoutBackchannelLogoutInitiatorsMode(value)
	for _, existing := range AllowedClientOidcLogoutBackchannelLogoutInitiatorsModeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ClientOidcLogoutBackchannelLogoutInitiatorsMode", value)
}

// NewClientOidcLogoutBackchannelLogoutInitiatorsModeFromValue returns a pointer to a valid ClientOidcLogoutBackchannelLogoutInitiatorsMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewClientOidcLogoutBackchannelLogoutInitiatorsModeFromValue(v string) (*ClientOidcLogoutBackchannelLogoutInitiatorsMode, error) {
	ev := ClientOidcLogoutBackchannelLogoutInitiatorsMode(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ClientOidcLogoutBackchannelLogoutInitiatorsMode: valid values are %v", v, AllowedClientOidcLogoutBackchannelLogoutInitiatorsModeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ClientOidcLogoutBackchannelLogoutInitiatorsMode) IsValid() bool {
	for _, existing := range AllowedClientOidcLogoutBackchannelLogoutInitiatorsModeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to client_oidc_logout_backchannel_logout_initiators_mode value
func (v ClientOidcLogoutBackchannelLogoutInitiatorsMode) Ptr() *ClientOidcLogoutBackchannelLogoutInitiatorsMode {
	return &v
}

type NullableClientOidcLogoutBackchannelLogoutInitiatorsMode struct {
	value *ClientOidcLogoutBackchannelLogoutInitiatorsMode
	isSet bool
}

func (v NullableClientOidcLogoutBackchannelLogoutInitiatorsMode) Get() *ClientOidcLogoutBackchannelLogoutInitiatorsMode {
	return v.value
}

func (v *NullableClientOidcLogoutBackchannelLogoutInitiatorsMode) Set(val *ClientOidcLogoutBackchannelLogoutInitiatorsMode) {
	v.value = val
	v.isSet = true
}

func (v NullableClientOidcLogoutBackchannelLogoutInitiatorsMode) IsSet() bool {
	return v.isSet
}

func (v *NullableClientOidcLogoutBackchannelLogoutInitiatorsMode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientOidcLogoutBackchannelLogoutInitiatorsMode(val *ClientOidcLogoutBackchannelLogoutInitiatorsMode) *NullableClientOidcLogoutBackchannelLogoutInitiatorsMode {
	return &NullableClientOidcLogoutBackchannelLogoutInitiatorsMode{value: val, isSet: true}
}

func (v NullableClientOidcLogoutBackchannelLogoutInitiatorsMode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientOidcLogoutBackchannelLogoutInitiatorsMode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
