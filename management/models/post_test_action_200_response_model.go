/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PostTestAction200Response struct for PostTestAction200Response
type PostTestAction200Response struct {
	// The resulting payload after an action was executed.
	Payload map[string]interface{} `json:"payload,omitempty"`
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *PostTestAction200Response) GetPayload() map[string]interface{} {
	if o == nil || IsNil(o.Payload) {
		var ret map[string]interface{}
		return ret
	}
	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTestAction200Response) GetPayloadOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Payload) {
		return map[string]interface{}{}, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *PostTestAction200Response) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given map[string]interface{} and assigns it to the Payload field.
func (o *PostTestAction200Response) SetPayload(v map[string]interface{}) {
	o.Payload = v
}

func (o PostTestAction200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostTestAction200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	return toSerialize, nil
}

type NullablePostTestAction200Response struct {
	value *PostTestAction200Response
	isSet bool
}

func (v NullablePostTestAction200Response) Get() *PostTestAction200Response {
	return v.value
}

func (v *NullablePostTestAction200Response) Set(val *PostTestAction200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePostTestAction200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePostTestAction200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostTestAction200Response(val *PostTestAction200Response) *NullablePostTestAction200Response {
	return &NullablePostTestAction200Response{value: val, isSet: true}
}

func (v NullablePostTestAction200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostTestAction200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
