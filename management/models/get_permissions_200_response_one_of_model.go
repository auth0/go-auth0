/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// GetPermissions200ResponseOneOf struct for GetPermissions200ResponseOneOf
type GetPermissions200ResponseOneOf struct {
	Start       float32                               `json:"start"`
	Limit       float32                               `json:"limit"`
	Total       float32                               `json:"total"`
	Permissions []GetPermissions200ResponseOneOfInner `json:"permissions"`
}

type _GetPermissions200ResponseOneOf GetPermissions200ResponseOneOf

// GetStart returns the Start field value
func (o *GetPermissions200ResponseOneOf) GetStart() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *GetPermissions200ResponseOneOf) GetStartOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *GetPermissions200ResponseOneOf) SetStart(v float32) {
	o.Start = v
}

// GetLimit returns the Limit field value
func (o *GetPermissions200ResponseOneOf) GetLimit() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *GetPermissions200ResponseOneOf) GetLimitOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Limit, true
}

// SetLimit sets field value
func (o *GetPermissions200ResponseOneOf) SetLimit(v float32) {
	o.Limit = v
}

// GetTotal returns the Total field value
func (o *GetPermissions200ResponseOneOf) GetTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *GetPermissions200ResponseOneOf) GetTotalOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *GetPermissions200ResponseOneOf) SetTotal(v float32) {
	o.Total = v
}

// GetPermissions returns the Permissions field value
func (o *GetPermissions200ResponseOneOf) GetPermissions() []GetPermissions200ResponseOneOfInner {
	if o == nil {
		var ret []GetPermissions200ResponseOneOfInner
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *GetPermissions200ResponseOneOf) GetPermissionsOk() ([]GetPermissions200ResponseOneOfInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Permissions, true
}

// SetPermissions sets field value
func (o *GetPermissions200ResponseOneOf) SetPermissions(v []GetPermissions200ResponseOneOfInner) {
	o.Permissions = v
}

func (o GetPermissions200ResponseOneOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPermissions200ResponseOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["start"] = o.Start
	toSerialize["limit"] = o.Limit
	toSerialize["total"] = o.Total
	toSerialize["permissions"] = o.Permissions
	return toSerialize, nil
}

func (o *GetPermissions200ResponseOneOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"start",
		"limit",
		"total",
		"permissions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetPermissions200ResponseOneOf := _GetPermissions200ResponseOneOf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetPermissions200ResponseOneOf)

	if err != nil {
		return err
	}

	*o = GetPermissions200ResponseOneOf(varGetPermissions200ResponseOneOf)

	return err
}

type NullableGetPermissions200ResponseOneOf struct {
	value *GetPermissions200ResponseOneOf
	isSet bool
}

func (v NullableGetPermissions200ResponseOneOf) Get() *GetPermissions200ResponseOneOf {
	return v.value
}

func (v *NullableGetPermissions200ResponseOneOf) Set(val *GetPermissions200ResponseOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPermissions200ResponseOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPermissions200ResponseOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPermissions200ResponseOneOf(val *GetPermissions200ResponseOneOf) *NullableGetPermissions200ResponseOneOf {
	return &NullableGetPermissions200ResponseOneOf{value: val, isSet: true}
}

func (v NullableGetPermissions200ResponseOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPermissions200ResponseOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
