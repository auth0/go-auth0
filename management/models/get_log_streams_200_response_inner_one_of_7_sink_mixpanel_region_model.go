/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion Mixpanel Region
type GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion string

// List of get_log_streams_200_response_inner_oneOf_7_sink_mixpanelRegion
const (
	GETLOGSTREAMS200RESPONSEINNERONEOF7SINKMIXPANELREGION_US GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion = "us"
	GETLOGSTREAMS200RESPONSEINNERONEOF7SINKMIXPANELREGION_EU GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion = "eu"
)

// All allowed values of GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion enum
var AllowedGetLogStreams200ResponseInnerOneOf7SinkMixpanelRegionEnumValues = []GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion{
	"us",
	"eu",
}

func (v *GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion(value)
	for _, existing := range AllowedGetLogStreams200ResponseInnerOneOf7SinkMixpanelRegionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion", value)
}

// NewGetLogStreams200ResponseInnerOneOf7SinkMixpanelRegionFromValue returns a pointer to a valid GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetLogStreams200ResponseInnerOneOf7SinkMixpanelRegionFromValue(v string) (*GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion, error) {
	ev := GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion: valid values are %v", v, AllowedGetLogStreams200ResponseInnerOneOf7SinkMixpanelRegionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion) IsValid() bool {
	for _, existing := range AllowedGetLogStreams200ResponseInnerOneOf7SinkMixpanelRegionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to get_log_streams_200_response_inner_oneOf_7_sink_mixpanelRegion value
func (v GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion) Ptr() *GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion {
	return &v
}

type NullableGetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion struct {
	value *GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion
	isSet bool
}

func (v NullableGetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion) Get() *GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion {
	return v.value
}

func (v *NullableGetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion) Set(val *GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion(val *GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion) *NullableGetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion {
	return &NullableGetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion{value: val, isSet: true}
}

func (v NullableGetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
