/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PostLogStreamsRequestOneOfFiltersInner struct for PostLogStreamsRequestOneOfFiltersInner
type PostLogStreamsRequestOneOfFiltersInner struct {
	Type                 *GetLogStreams200ResponseInnerOneOfFiltersInnerType `json:"type,omitempty"`
	Name                 *GetLogStreams200ResponseInnerOneOfFiltersInnerName `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PostLogStreamsRequestOneOfFiltersInner PostLogStreamsRequestOneOfFiltersInner

// GetType returns the Type field value if set, zero value otherwise.
func (o *PostLogStreamsRequestOneOfFiltersInner) GetType() GetLogStreams200ResponseInnerOneOfFiltersInnerType {
	if o == nil || IsNil(o.Type) {
		var ret GetLogStreams200ResponseInnerOneOfFiltersInnerType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostLogStreamsRequestOneOfFiltersInner) GetTypeOk() (*GetLogStreams200ResponseInnerOneOfFiltersInnerType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PostLogStreamsRequestOneOfFiltersInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given GetLogStreams200ResponseInnerOneOfFiltersInnerType and assigns it to the Type field.
func (o *PostLogStreamsRequestOneOfFiltersInner) SetType(v GetLogStreams200ResponseInnerOneOfFiltersInnerType) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PostLogStreamsRequestOneOfFiltersInner) GetName() GetLogStreams200ResponseInnerOneOfFiltersInnerName {
	if o == nil || IsNil(o.Name) {
		var ret GetLogStreams200ResponseInnerOneOfFiltersInnerName
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostLogStreamsRequestOneOfFiltersInner) GetNameOk() (*GetLogStreams200ResponseInnerOneOfFiltersInnerName, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PostLogStreamsRequestOneOfFiltersInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given GetLogStreams200ResponseInnerOneOfFiltersInnerName and assigns it to the Name field.
func (o *PostLogStreamsRequestOneOfFiltersInner) SetName(v GetLogStreams200ResponseInnerOneOfFiltersInnerName) {
	o.Name = &v
}

func (o PostLogStreamsRequestOneOfFiltersInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostLogStreamsRequestOneOfFiltersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PostLogStreamsRequestOneOfFiltersInner) UnmarshalJSON(data []byte) (err error) {
	varPostLogStreamsRequestOneOfFiltersInner := _PostLogStreamsRequestOneOfFiltersInner{}

	err = json.Unmarshal(data, &varPostLogStreamsRequestOneOfFiltersInner)

	if err != nil {
		return err
	}

	*o = PostLogStreamsRequestOneOfFiltersInner(varPostLogStreamsRequestOneOfFiltersInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePostLogStreamsRequestOneOfFiltersInner struct {
	value *PostLogStreamsRequestOneOfFiltersInner
	isSet bool
}

func (v NullablePostLogStreamsRequestOneOfFiltersInner) Get() *PostLogStreamsRequestOneOfFiltersInner {
	return v.value
}

func (v *NullablePostLogStreamsRequestOneOfFiltersInner) Set(val *PostLogStreamsRequestOneOfFiltersInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePostLogStreamsRequestOneOfFiltersInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePostLogStreamsRequestOneOfFiltersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostLogStreamsRequestOneOfFiltersInner(val *PostLogStreamsRequestOneOfFiltersInner) *NullablePostLogStreamsRequestOneOfFiltersInner {
	return &NullablePostLogStreamsRequestOneOfFiltersInner{value: val, isSet: true}
}

func (v NullablePostLogStreamsRequestOneOfFiltersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostLogStreamsRequestOneOfFiltersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
