/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// StatsEntry struct for StatsEntry
type StatsEntry struct {
	// Date these events occurred in ISO 8601 format.
	Date *string `json:"date,omitempty"`
	// Number of logins on this date.
	Logins *int32 `json:"logins,omitempty"`
	// Number of signups on this date.
	Signups *int32 `json:"signups,omitempty"`
	// Number of breached-password detections on this date (subscription required).
	LeakedPasswords *int32 `json:"leaked_passwords,omitempty"`
	// Date and time this stats entry was last updated in ISO 8601 format.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// Approximate date and time the first event occurred in ISO 8601 format.
	CreatedAt            *string `json:"created_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _StatsEntry StatsEntry

// GetDate returns the Date field value if set, zero value otherwise.
func (o *StatsEntry) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsEntry) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *StatsEntry) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *StatsEntry) SetDate(v string) {
	o.Date = &v
}

// GetLogins returns the Logins field value if set, zero value otherwise.
func (o *StatsEntry) GetLogins() int32 {
	if o == nil || IsNil(o.Logins) {
		var ret int32
		return ret
	}
	return *o.Logins
}

// GetLoginsOk returns a tuple with the Logins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsEntry) GetLoginsOk() (*int32, bool) {
	if o == nil || IsNil(o.Logins) {
		return nil, false
	}
	return o.Logins, true
}

// HasLogins returns a boolean if a field has been set.
func (o *StatsEntry) HasLogins() bool {
	if o != nil && !IsNil(o.Logins) {
		return true
	}

	return false
}

// SetLogins gets a reference to the given int32 and assigns it to the Logins field.
func (o *StatsEntry) SetLogins(v int32) {
	o.Logins = &v
}

// GetSignups returns the Signups field value if set, zero value otherwise.
func (o *StatsEntry) GetSignups() int32 {
	if o == nil || IsNil(o.Signups) {
		var ret int32
		return ret
	}
	return *o.Signups
}

// GetSignupsOk returns a tuple with the Signups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsEntry) GetSignupsOk() (*int32, bool) {
	if o == nil || IsNil(o.Signups) {
		return nil, false
	}
	return o.Signups, true
}

// HasSignups returns a boolean if a field has been set.
func (o *StatsEntry) HasSignups() bool {
	if o != nil && !IsNil(o.Signups) {
		return true
	}

	return false
}

// SetSignups gets a reference to the given int32 and assigns it to the Signups field.
func (o *StatsEntry) SetSignups(v int32) {
	o.Signups = &v
}

// GetLeakedPasswords returns the LeakedPasswords field value if set, zero value otherwise.
func (o *StatsEntry) GetLeakedPasswords() int32 {
	if o == nil || IsNil(o.LeakedPasswords) {
		var ret int32
		return ret
	}
	return *o.LeakedPasswords
}

// GetLeakedPasswordsOk returns a tuple with the LeakedPasswords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsEntry) GetLeakedPasswordsOk() (*int32, bool) {
	if o == nil || IsNil(o.LeakedPasswords) {
		return nil, false
	}
	return o.LeakedPasswords, true
}

// HasLeakedPasswords returns a boolean if a field has been set.
func (o *StatsEntry) HasLeakedPasswords() bool {
	if o != nil && !IsNil(o.LeakedPasswords) {
		return true
	}

	return false
}

// SetLeakedPasswords gets a reference to the given int32 and assigns it to the LeakedPasswords field.
func (o *StatsEntry) SetLeakedPasswords(v int32) {
	o.LeakedPasswords = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *StatsEntry) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsEntry) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *StatsEntry) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *StatsEntry) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *StatsEntry) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsEntry) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *StatsEntry) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *StatsEntry) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

func (o StatsEntry) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatsEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.Logins) {
		toSerialize["logins"] = o.Logins
	}
	if !IsNil(o.Signups) {
		toSerialize["signups"] = o.Signups
	}
	if !IsNil(o.LeakedPasswords) {
		toSerialize["leaked_passwords"] = o.LeakedPasswords
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *StatsEntry) UnmarshalJSON(data []byte) (err error) {
	varStatsEntry := _StatsEntry{}

	err = json.Unmarshal(data, &varStatsEntry)

	if err != nil {
		return err
	}

	*o = StatsEntry(varStatsEntry)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "date")
		delete(additionalProperties, "logins")
		delete(additionalProperties, "signups")
		delete(additionalProperties, "leaked_passwords")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "created_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStatsEntry struct {
	value *StatsEntry
	isSet bool
}

func (v NullableStatsEntry) Get() *StatsEntry {
	return v.value
}

func (v *NullableStatsEntry) Set(val *StatsEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableStatsEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableStatsEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatsEntry(val *StatsEntry) *NullableStatsEntry {
	return &NullableStatsEntry{value: val, isSet: true}
}

func (v NullableStatsEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatsEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
