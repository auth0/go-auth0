/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// PostLogStreamsRequestOneOf1Sink struct for PostLogStreamsRequestOneOf1Sink
type PostLogStreamsRequestOneOf1Sink struct {
	// AWS account ID
	AwsAccountId string                                           `json:"awsAccountId"`
	AwsRegion    GetLogStreams200ResponseInnerOneOf1SinkAwsRegion `json:"awsRegion"`
}

type _PostLogStreamsRequestOneOf1Sink PostLogStreamsRequestOneOf1Sink

// GetAwsAccountId returns the AwsAccountId field value
func (o *PostLogStreamsRequestOneOf1Sink) GetAwsAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AwsAccountId
}

// GetAwsAccountIdOk returns a tuple with the AwsAccountId field value
// and a boolean to check if the value has been set.
func (o *PostLogStreamsRequestOneOf1Sink) GetAwsAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AwsAccountId, true
}

// SetAwsAccountId sets field value
func (o *PostLogStreamsRequestOneOf1Sink) SetAwsAccountId(v string) {
	o.AwsAccountId = v
}

// GetAwsRegion returns the AwsRegion field value
func (o *PostLogStreamsRequestOneOf1Sink) GetAwsRegion() GetLogStreams200ResponseInnerOneOf1SinkAwsRegion {
	if o == nil {
		var ret GetLogStreams200ResponseInnerOneOf1SinkAwsRegion
		return ret
	}

	return o.AwsRegion
}

// GetAwsRegionOk returns a tuple with the AwsRegion field value
// and a boolean to check if the value has been set.
func (o *PostLogStreamsRequestOneOf1Sink) GetAwsRegionOk() (*GetLogStreams200ResponseInnerOneOf1SinkAwsRegion, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AwsRegion, true
}

// SetAwsRegion sets field value
func (o *PostLogStreamsRequestOneOf1Sink) SetAwsRegion(v GetLogStreams200ResponseInnerOneOf1SinkAwsRegion) {
	o.AwsRegion = v
}

func (o PostLogStreamsRequestOneOf1Sink) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostLogStreamsRequestOneOf1Sink) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["awsAccountId"] = o.AwsAccountId
	toSerialize["awsRegion"] = o.AwsRegion
	return toSerialize, nil
}

func (o *PostLogStreamsRequestOneOf1Sink) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"awsAccountId",
		"awsRegion",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostLogStreamsRequestOneOf1Sink := _PostLogStreamsRequestOneOf1Sink{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varPostLogStreamsRequestOneOf1Sink)

	if err != nil {
		return err
	}

	*o = PostLogStreamsRequestOneOf1Sink(varPostLogStreamsRequestOneOf1Sink)

	return err
}

type NullablePostLogStreamsRequestOneOf1Sink struct {
	value *PostLogStreamsRequestOneOf1Sink
	isSet bool
}

func (v NullablePostLogStreamsRequestOneOf1Sink) Get() *PostLogStreamsRequestOneOf1Sink {
	return v.value
}

func (v *NullablePostLogStreamsRequestOneOf1Sink) Set(val *PostLogStreamsRequestOneOf1Sink) {
	v.value = val
	v.isSet = true
}

func (v NullablePostLogStreamsRequestOneOf1Sink) IsSet() bool {
	return v.isSet
}

func (v *NullablePostLogStreamsRequestOneOf1Sink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostLogStreamsRequestOneOf1Sink(val *PostLogStreamsRequestOneOf1Sink) *NullablePostLogStreamsRequestOneOf1Sink {
	return &NullablePostLogStreamsRequestOneOf1Sink{value: val, isSet: true}
}

func (v NullablePostLogStreamsRequestOneOf1Sink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostLogStreamsRequestOneOf1Sink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
