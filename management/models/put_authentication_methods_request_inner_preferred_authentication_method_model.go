/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod The preferred authentication method for phone authentication method.
type PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod string

// List of put_authentication_methods_request_inner_preferred_authentication_method
const (
	PUTAUTHENTICATIONMETHODSREQUESTINNERPREFERREDAUTHENTICATIONMETHOD_VOICE PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod = "voice"
	PUTAUTHENTICATIONMETHODSREQUESTINNERPREFERREDAUTHENTICATIONMETHOD_SMS   PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod = "sms"
)

// All allowed values of PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod enum
var AllowedPutAuthenticationMethodsRequestInnerPreferredAuthenticationMethodEnumValues = []PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod{
	"voice",
	"sms",
}

func (v *PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod(value)
	for _, existing := range AllowedPutAuthenticationMethodsRequestInnerPreferredAuthenticationMethodEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod", value)
}

// NewPutAuthenticationMethodsRequestInnerPreferredAuthenticationMethodFromValue returns a pointer to a valid PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPutAuthenticationMethodsRequestInnerPreferredAuthenticationMethodFromValue(v string) (*PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod, error) {
	ev := PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod: valid values are %v", v, AllowedPutAuthenticationMethodsRequestInnerPreferredAuthenticationMethodEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod) IsValid() bool {
	for _, existing := range AllowedPutAuthenticationMethodsRequestInnerPreferredAuthenticationMethodEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to put_authentication_methods_request_inner_preferred_authentication_method value
func (v PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod) Ptr() *PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod {
	return &v
}

type NullablePutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod struct {
	value *PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod
	isSet bool
}

func (v NullablePutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod) Get() *PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod {
	return v.value
}

func (v *NullablePutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod) Set(val *PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod) {
	v.value = val
	v.isSet = true
}

func (v NullablePutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod) IsSet() bool {
	return v.isSet
}

func (v *NullablePutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod(val *PutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod) *NullablePutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod {
	return &NullablePutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod{value: val, isSet: true}
}

func (v NullablePutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutAuthenticationMethodsRequestInnerPreferredAuthenticationMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
