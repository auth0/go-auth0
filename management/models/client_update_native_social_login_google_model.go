/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientUpdateNativeSocialLoginGoogle Native Social Login support for the google-oauth2 connection
type ClientUpdateNativeSocialLoginGoogle struct {
	// Determine whether or not to allow signing in natively using a Google ID token
	Enabled *bool `json:"enabled,omitempty"`
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ClientUpdateNativeSocialLoginGoogle) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateNativeSocialLoginGoogle) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ClientUpdateNativeSocialLoginGoogle) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ClientUpdateNativeSocialLoginGoogle) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o ClientUpdateNativeSocialLoginGoogle) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientUpdateNativeSocialLoginGoogle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	return toSerialize, nil
}

type NullableClientUpdateNativeSocialLoginGoogle struct {
	value *ClientUpdateNativeSocialLoginGoogle
	isSet bool
}

func (v NullableClientUpdateNativeSocialLoginGoogle) Get() *ClientUpdateNativeSocialLoginGoogle {
	return v.value
}

func (v *NullableClientUpdateNativeSocialLoginGoogle) Set(val *ClientUpdateNativeSocialLoginGoogle) {
	v.value = val
	v.isSet = true
}

func (v NullableClientUpdateNativeSocialLoginGoogle) IsSet() bool {
	return v.isSet
}

func (v *NullableClientUpdateNativeSocialLoginGoogle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientUpdateNativeSocialLoginGoogle(val *ClientUpdateNativeSocialLoginGoogle) *NullableClientUpdateNativeSocialLoginGoogle {
	return &NullableClientUpdateNativeSocialLoginGoogle{value: val, isSet: true}
}

func (v NullableClientUpdateNativeSocialLoginGoogle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientUpdateNativeSocialLoginGoogle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
