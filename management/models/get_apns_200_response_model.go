/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// GetApns200Response struct for GetApns200Response
type GetApns200Response struct {
	BundleId NullableString `json:"bundle_id"`
	Sandbox  bool           `json:"sandbox"`
	Enabled  bool           `json:"enabled"`
}

type _GetApns200Response GetApns200Response

// GetBundleId returns the BundleId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *GetApns200Response) GetBundleId() string {
	if o == nil || o.BundleId.Get() == nil {
		var ret string
		return ret
	}

	return *o.BundleId.Get()
}

// GetBundleIdOk returns a tuple with the BundleId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetApns200Response) GetBundleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BundleId.Get(), o.BundleId.IsSet()
}

// SetBundleId sets field value
func (o *GetApns200Response) SetBundleId(v string) {
	o.BundleId.Set(&v)
}

// GetSandbox returns the Sandbox field value
func (o *GetApns200Response) GetSandbox() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Sandbox
}

// GetSandboxOk returns a tuple with the Sandbox field value
// and a boolean to check if the value has been set.
func (o *GetApns200Response) GetSandboxOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sandbox, true
}

// SetSandbox sets field value
func (o *GetApns200Response) SetSandbox(v bool) {
	o.Sandbox = v
}

// GetEnabled returns the Enabled field value
func (o *GetApns200Response) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *GetApns200Response) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *GetApns200Response) SetEnabled(v bool) {
	o.Enabled = v
}

func (o GetApns200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetApns200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bundle_id"] = o.BundleId.Get()
	toSerialize["sandbox"] = o.Sandbox
	toSerialize["enabled"] = o.Enabled
	return toSerialize, nil
}

func (o *GetApns200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bundle_id",
		"sandbox",
		"enabled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetApns200Response := _GetApns200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetApns200Response)

	if err != nil {
		return err
	}

	*o = GetApns200Response(varGetApns200Response)

	return err
}

type NullableGetApns200Response struct {
	value *GetApns200Response
	isSet bool
}

func (v NullableGetApns200Response) Get() *GetApns200Response {
	return v.value
}

func (v *NullableGetApns200Response) Set(val *GetApns200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApns200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApns200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApns200Response(val *GetApns200Response) *NullableGetApns200Response {
	return &NullableGetApns200Response{value: val, isSet: true}
}

func (v NullableGetApns200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApns200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
