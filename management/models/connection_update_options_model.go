/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ConnectionUpdateOptions The connection's options (depend on the connection strategy)
type ConnectionUpdateOptions struct {
	Validation NullableConnectionCreateOptionsValidation `json:"validation,omitempty"`
	// An array of user fields that should not be stored in the Auth0 database (https://manage.local.dev.auth0.com/docs/security/data-security/denylist)
	NonPersistentAttrs  []string `json:"non_persistent_attrs,omitempty"`
	EnableScriptContext *bool    `json:"enable_script_context,omitempty"`
	// Set to true to use a legacy user store
	EnabledDatabaseCustomization *bool `json:"enabledDatabaseCustomization,omitempty"`
	// Enable this if you have a legacy user store and you want to gradually migrate those users to the Auth0 user store
	ImportMode                       *bool                                                    `json:"import_mode,omitempty"`
	CustomScripts                    *ConnectionCreateOptionsCustomScripts                    `json:"customScripts,omitempty"`
	AuthenticationMethods            NullableConnectionCreateOptionsAuthenticationMethods     `json:"authentication_methods,omitempty"`
	PasskeyOptions                   NullableConnectionCreateOptionsPasskeyOptions            `json:"passkey_options,omitempty"`
	PasswordPolicy                   NullableConnectionCreateOptionsPasswordPolicy            `json:"passwordPolicy,omitempty"`
	PasswordComplexityOptions        NullableConnectionCreateOptionsPasswordComplexityOptions `json:"password_complexity_options,omitempty"`
	PasswordHistory                  NullableConnectionCreateOptionsPasswordHistory           `json:"password_history,omitempty"`
	PasswordNoPersonalInfo           NullableConnectionCreateOptionsPasswordNoPersonalInfo    `json:"password_no_personal_info,omitempty"`
	PasswordDictionary               NullableConnectionCreateOptionsPasswordDictionary        `json:"password_dictionary,omitempty"`
	ApiEnableUsers                   *bool                                                    `json:"api_enable_users,omitempty"`
	BasicProfile                     *bool                                                    `json:"basic_profile,omitempty"`
	ExtAdmin                         *bool                                                    `json:"ext_admin,omitempty"`
	ExtIsSuspended                   *bool                                                    `json:"ext_is_suspended,omitempty"`
	ExtAgreedTerms                   *bool                                                    `json:"ext_agreed_terms,omitempty"`
	ExtGroups                        *bool                                                    `json:"ext_groups,omitempty"`
	ExtAssignedPlans                 *bool                                                    `json:"ext_assigned_plans,omitempty"`
	ExtProfile                       *bool                                                    `json:"ext_profile,omitempty"`
	DisableSelfServiceChangePassword *bool                                                    `json:"disable_self_service_change_password,omitempty"`
	// Options for adding parameters in the request to the upstream IdP
	UpstreamParams        map[string]interface{}                               `json:"upstream_params,omitempty"`
	SetUserRootAttributes *ConnectionCreateOptionsSetUserRootAttributes        `json:"set_user_root_attributes,omitempty"`
	GatewayAuthentication NullableConnectionCreateOptionsGatewayAuthentication `json:"gateway_authentication,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _ConnectionUpdateOptions ConnectionUpdateOptions

// GetValidation returns the Validation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionUpdateOptions) GetValidation() ConnectionCreateOptionsValidation {
	if o == nil || IsNil(o.Validation.Get()) {
		var ret ConnectionCreateOptionsValidation
		return ret
	}
	return *o.Validation.Get()
}

// GetValidationOk returns a tuple with the Validation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionUpdateOptions) GetValidationOk() (*ConnectionCreateOptionsValidation, bool) {
	if o == nil {
		return nil, false
	}
	return o.Validation.Get(), o.Validation.IsSet()
}

// HasValidation returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasValidation() bool {
	if o != nil && o.Validation.IsSet() {
		return true
	}

	return false
}

// SetValidation gets a reference to the given NullableConnectionCreateOptionsValidation and assigns it to the Validation field.
func (o *ConnectionUpdateOptions) SetValidation(v ConnectionCreateOptionsValidation) {
	o.Validation.Set(&v)
}

// SetValidationNil sets the value for Validation to be an explicit nil
func (o *ConnectionUpdateOptions) SetValidationNil() {
	o.Validation.Set(nil)
}

// UnsetValidation ensures that no value is present for Validation, not even an explicit nil
func (o *ConnectionUpdateOptions) UnsetValidation() {
	o.Validation.Unset()
}

// GetNonPersistentAttrs returns the NonPersistentAttrs field value if set, zero value otherwise.
func (o *ConnectionUpdateOptions) GetNonPersistentAttrs() []string {
	if o == nil || IsNil(o.NonPersistentAttrs) {
		var ret []string
		return ret
	}
	return o.NonPersistentAttrs
}

// GetNonPersistentAttrsOk returns a tuple with the NonPersistentAttrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionUpdateOptions) GetNonPersistentAttrsOk() ([]string, bool) {
	if o == nil || IsNil(o.NonPersistentAttrs) {
		return nil, false
	}
	return o.NonPersistentAttrs, true
}

// HasNonPersistentAttrs returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasNonPersistentAttrs() bool {
	if o != nil && !IsNil(o.NonPersistentAttrs) {
		return true
	}

	return false
}

// SetNonPersistentAttrs gets a reference to the given []string and assigns it to the NonPersistentAttrs field.
func (o *ConnectionUpdateOptions) SetNonPersistentAttrs(v []string) {
	o.NonPersistentAttrs = v
}

// GetEnableScriptContext returns the EnableScriptContext field value if set, zero value otherwise.
func (o *ConnectionUpdateOptions) GetEnableScriptContext() bool {
	if o == nil || IsNil(o.EnableScriptContext) {
		var ret bool
		return ret
	}
	return *o.EnableScriptContext
}

// GetEnableScriptContextOk returns a tuple with the EnableScriptContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionUpdateOptions) GetEnableScriptContextOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableScriptContext) {
		return nil, false
	}
	return o.EnableScriptContext, true
}

// HasEnableScriptContext returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasEnableScriptContext() bool {
	if o != nil && !IsNil(o.EnableScriptContext) {
		return true
	}

	return false
}

// SetEnableScriptContext gets a reference to the given bool and assigns it to the EnableScriptContext field.
func (o *ConnectionUpdateOptions) SetEnableScriptContext(v bool) {
	o.EnableScriptContext = &v
}

// GetEnabledDatabaseCustomization returns the EnabledDatabaseCustomization field value if set, zero value otherwise.
func (o *ConnectionUpdateOptions) GetEnabledDatabaseCustomization() bool {
	if o == nil || IsNil(o.EnabledDatabaseCustomization) {
		var ret bool
		return ret
	}
	return *o.EnabledDatabaseCustomization
}

// GetEnabledDatabaseCustomizationOk returns a tuple with the EnabledDatabaseCustomization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionUpdateOptions) GetEnabledDatabaseCustomizationOk() (*bool, bool) {
	if o == nil || IsNil(o.EnabledDatabaseCustomization) {
		return nil, false
	}
	return o.EnabledDatabaseCustomization, true
}

// HasEnabledDatabaseCustomization returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasEnabledDatabaseCustomization() bool {
	if o != nil && !IsNil(o.EnabledDatabaseCustomization) {
		return true
	}

	return false
}

// SetEnabledDatabaseCustomization gets a reference to the given bool and assigns it to the EnabledDatabaseCustomization field.
func (o *ConnectionUpdateOptions) SetEnabledDatabaseCustomization(v bool) {
	o.EnabledDatabaseCustomization = &v
}

// GetImportMode returns the ImportMode field value if set, zero value otherwise.
func (o *ConnectionUpdateOptions) GetImportMode() bool {
	if o == nil || IsNil(o.ImportMode) {
		var ret bool
		return ret
	}
	return *o.ImportMode
}

// GetImportModeOk returns a tuple with the ImportMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionUpdateOptions) GetImportModeOk() (*bool, bool) {
	if o == nil || IsNil(o.ImportMode) {
		return nil, false
	}
	return o.ImportMode, true
}

// HasImportMode returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasImportMode() bool {
	if o != nil && !IsNil(o.ImportMode) {
		return true
	}

	return false
}

// SetImportMode gets a reference to the given bool and assigns it to the ImportMode field.
func (o *ConnectionUpdateOptions) SetImportMode(v bool) {
	o.ImportMode = &v
}

// GetCustomScripts returns the CustomScripts field value if set, zero value otherwise.
func (o *ConnectionUpdateOptions) GetCustomScripts() ConnectionCreateOptionsCustomScripts {
	if o == nil || IsNil(o.CustomScripts) {
		var ret ConnectionCreateOptionsCustomScripts
		return ret
	}
	return *o.CustomScripts
}

// GetCustomScriptsOk returns a tuple with the CustomScripts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionUpdateOptions) GetCustomScriptsOk() (*ConnectionCreateOptionsCustomScripts, bool) {
	if o == nil || IsNil(o.CustomScripts) {
		return nil, false
	}
	return o.CustomScripts, true
}

// HasCustomScripts returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasCustomScripts() bool {
	if o != nil && !IsNil(o.CustomScripts) {
		return true
	}

	return false
}

// SetCustomScripts gets a reference to the given ConnectionCreateOptionsCustomScripts and assigns it to the CustomScripts field.
func (o *ConnectionUpdateOptions) SetCustomScripts(v ConnectionCreateOptionsCustomScripts) {
	o.CustomScripts = &v
}

// GetAuthenticationMethods returns the AuthenticationMethods field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionUpdateOptions) GetAuthenticationMethods() ConnectionCreateOptionsAuthenticationMethods {
	if o == nil || IsNil(o.AuthenticationMethods.Get()) {
		var ret ConnectionCreateOptionsAuthenticationMethods
		return ret
	}
	return *o.AuthenticationMethods.Get()
}

// GetAuthenticationMethodsOk returns a tuple with the AuthenticationMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionUpdateOptions) GetAuthenticationMethodsOk() (*ConnectionCreateOptionsAuthenticationMethods, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthenticationMethods.Get(), o.AuthenticationMethods.IsSet()
}

// HasAuthenticationMethods returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasAuthenticationMethods() bool {
	if o != nil && o.AuthenticationMethods.IsSet() {
		return true
	}

	return false
}

// SetAuthenticationMethods gets a reference to the given NullableConnectionCreateOptionsAuthenticationMethods and assigns it to the AuthenticationMethods field.
func (o *ConnectionUpdateOptions) SetAuthenticationMethods(v ConnectionCreateOptionsAuthenticationMethods) {
	o.AuthenticationMethods.Set(&v)
}

// SetAuthenticationMethodsNil sets the value for AuthenticationMethods to be an explicit nil
func (o *ConnectionUpdateOptions) SetAuthenticationMethodsNil() {
	o.AuthenticationMethods.Set(nil)
}

// UnsetAuthenticationMethods ensures that no value is present for AuthenticationMethods, not even an explicit nil
func (o *ConnectionUpdateOptions) UnsetAuthenticationMethods() {
	o.AuthenticationMethods.Unset()
}

// GetPasskeyOptions returns the PasskeyOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionUpdateOptions) GetPasskeyOptions() ConnectionCreateOptionsPasskeyOptions {
	if o == nil || IsNil(o.PasskeyOptions.Get()) {
		var ret ConnectionCreateOptionsPasskeyOptions
		return ret
	}
	return *o.PasskeyOptions.Get()
}

// GetPasskeyOptionsOk returns a tuple with the PasskeyOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionUpdateOptions) GetPasskeyOptionsOk() (*ConnectionCreateOptionsPasskeyOptions, bool) {
	if o == nil {
		return nil, false
	}
	return o.PasskeyOptions.Get(), o.PasskeyOptions.IsSet()
}

// HasPasskeyOptions returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasPasskeyOptions() bool {
	if o != nil && o.PasskeyOptions.IsSet() {
		return true
	}

	return false
}

// SetPasskeyOptions gets a reference to the given NullableConnectionCreateOptionsPasskeyOptions and assigns it to the PasskeyOptions field.
func (o *ConnectionUpdateOptions) SetPasskeyOptions(v ConnectionCreateOptionsPasskeyOptions) {
	o.PasskeyOptions.Set(&v)
}

// SetPasskeyOptionsNil sets the value for PasskeyOptions to be an explicit nil
func (o *ConnectionUpdateOptions) SetPasskeyOptionsNil() {
	o.PasskeyOptions.Set(nil)
}

// UnsetPasskeyOptions ensures that no value is present for PasskeyOptions, not even an explicit nil
func (o *ConnectionUpdateOptions) UnsetPasskeyOptions() {
	o.PasskeyOptions.Unset()
}

// GetPasswordPolicy returns the PasswordPolicy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionUpdateOptions) GetPasswordPolicy() ConnectionCreateOptionsPasswordPolicy {
	if o == nil || IsNil(o.PasswordPolicy.Get()) {
		var ret ConnectionCreateOptionsPasswordPolicy
		return ret
	}
	return *o.PasswordPolicy.Get()
}

// GetPasswordPolicyOk returns a tuple with the PasswordPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionUpdateOptions) GetPasswordPolicyOk() (*ConnectionCreateOptionsPasswordPolicy, bool) {
	if o == nil {
		return nil, false
	}
	return o.PasswordPolicy.Get(), o.PasswordPolicy.IsSet()
}

// HasPasswordPolicy returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasPasswordPolicy() bool {
	if o != nil && o.PasswordPolicy.IsSet() {
		return true
	}

	return false
}

// SetPasswordPolicy gets a reference to the given NullableConnectionCreateOptionsPasswordPolicy and assigns it to the PasswordPolicy field.
func (o *ConnectionUpdateOptions) SetPasswordPolicy(v ConnectionCreateOptionsPasswordPolicy) {
	o.PasswordPolicy.Set(&v)
}

// SetPasswordPolicyNil sets the value for PasswordPolicy to be an explicit nil
func (o *ConnectionUpdateOptions) SetPasswordPolicyNil() {
	o.PasswordPolicy.Set(nil)
}

// UnsetPasswordPolicy ensures that no value is present for PasswordPolicy, not even an explicit nil
func (o *ConnectionUpdateOptions) UnsetPasswordPolicy() {
	o.PasswordPolicy.Unset()
}

// GetPasswordComplexityOptions returns the PasswordComplexityOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionUpdateOptions) GetPasswordComplexityOptions() ConnectionCreateOptionsPasswordComplexityOptions {
	if o == nil || IsNil(o.PasswordComplexityOptions.Get()) {
		var ret ConnectionCreateOptionsPasswordComplexityOptions
		return ret
	}
	return *o.PasswordComplexityOptions.Get()
}

// GetPasswordComplexityOptionsOk returns a tuple with the PasswordComplexityOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionUpdateOptions) GetPasswordComplexityOptionsOk() (*ConnectionCreateOptionsPasswordComplexityOptions, bool) {
	if o == nil {
		return nil, false
	}
	return o.PasswordComplexityOptions.Get(), o.PasswordComplexityOptions.IsSet()
}

// HasPasswordComplexityOptions returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasPasswordComplexityOptions() bool {
	if o != nil && o.PasswordComplexityOptions.IsSet() {
		return true
	}

	return false
}

// SetPasswordComplexityOptions gets a reference to the given NullableConnectionCreateOptionsPasswordComplexityOptions and assigns it to the PasswordComplexityOptions field.
func (o *ConnectionUpdateOptions) SetPasswordComplexityOptions(v ConnectionCreateOptionsPasswordComplexityOptions) {
	o.PasswordComplexityOptions.Set(&v)
}

// SetPasswordComplexityOptionsNil sets the value for PasswordComplexityOptions to be an explicit nil
func (o *ConnectionUpdateOptions) SetPasswordComplexityOptionsNil() {
	o.PasswordComplexityOptions.Set(nil)
}

// UnsetPasswordComplexityOptions ensures that no value is present for PasswordComplexityOptions, not even an explicit nil
func (o *ConnectionUpdateOptions) UnsetPasswordComplexityOptions() {
	o.PasswordComplexityOptions.Unset()
}

// GetPasswordHistory returns the PasswordHistory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionUpdateOptions) GetPasswordHistory() ConnectionCreateOptionsPasswordHistory {
	if o == nil || IsNil(o.PasswordHistory.Get()) {
		var ret ConnectionCreateOptionsPasswordHistory
		return ret
	}
	return *o.PasswordHistory.Get()
}

// GetPasswordHistoryOk returns a tuple with the PasswordHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionUpdateOptions) GetPasswordHistoryOk() (*ConnectionCreateOptionsPasswordHistory, bool) {
	if o == nil {
		return nil, false
	}
	return o.PasswordHistory.Get(), o.PasswordHistory.IsSet()
}

// HasPasswordHistory returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasPasswordHistory() bool {
	if o != nil && o.PasswordHistory.IsSet() {
		return true
	}

	return false
}

// SetPasswordHistory gets a reference to the given NullableConnectionCreateOptionsPasswordHistory and assigns it to the PasswordHistory field.
func (o *ConnectionUpdateOptions) SetPasswordHistory(v ConnectionCreateOptionsPasswordHistory) {
	o.PasswordHistory.Set(&v)
}

// SetPasswordHistoryNil sets the value for PasswordHistory to be an explicit nil
func (o *ConnectionUpdateOptions) SetPasswordHistoryNil() {
	o.PasswordHistory.Set(nil)
}

// UnsetPasswordHistory ensures that no value is present for PasswordHistory, not even an explicit nil
func (o *ConnectionUpdateOptions) UnsetPasswordHistory() {
	o.PasswordHistory.Unset()
}

// GetPasswordNoPersonalInfo returns the PasswordNoPersonalInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionUpdateOptions) GetPasswordNoPersonalInfo() ConnectionCreateOptionsPasswordNoPersonalInfo {
	if o == nil || IsNil(o.PasswordNoPersonalInfo.Get()) {
		var ret ConnectionCreateOptionsPasswordNoPersonalInfo
		return ret
	}
	return *o.PasswordNoPersonalInfo.Get()
}

// GetPasswordNoPersonalInfoOk returns a tuple with the PasswordNoPersonalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionUpdateOptions) GetPasswordNoPersonalInfoOk() (*ConnectionCreateOptionsPasswordNoPersonalInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.PasswordNoPersonalInfo.Get(), o.PasswordNoPersonalInfo.IsSet()
}

// HasPasswordNoPersonalInfo returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasPasswordNoPersonalInfo() bool {
	if o != nil && o.PasswordNoPersonalInfo.IsSet() {
		return true
	}

	return false
}

// SetPasswordNoPersonalInfo gets a reference to the given NullableConnectionCreateOptionsPasswordNoPersonalInfo and assigns it to the PasswordNoPersonalInfo field.
func (o *ConnectionUpdateOptions) SetPasswordNoPersonalInfo(v ConnectionCreateOptionsPasswordNoPersonalInfo) {
	o.PasswordNoPersonalInfo.Set(&v)
}

// SetPasswordNoPersonalInfoNil sets the value for PasswordNoPersonalInfo to be an explicit nil
func (o *ConnectionUpdateOptions) SetPasswordNoPersonalInfoNil() {
	o.PasswordNoPersonalInfo.Set(nil)
}

// UnsetPasswordNoPersonalInfo ensures that no value is present for PasswordNoPersonalInfo, not even an explicit nil
func (o *ConnectionUpdateOptions) UnsetPasswordNoPersonalInfo() {
	o.PasswordNoPersonalInfo.Unset()
}

// GetPasswordDictionary returns the PasswordDictionary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionUpdateOptions) GetPasswordDictionary() ConnectionCreateOptionsPasswordDictionary {
	if o == nil || IsNil(o.PasswordDictionary.Get()) {
		var ret ConnectionCreateOptionsPasswordDictionary
		return ret
	}
	return *o.PasswordDictionary.Get()
}

// GetPasswordDictionaryOk returns a tuple with the PasswordDictionary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionUpdateOptions) GetPasswordDictionaryOk() (*ConnectionCreateOptionsPasswordDictionary, bool) {
	if o == nil {
		return nil, false
	}
	return o.PasswordDictionary.Get(), o.PasswordDictionary.IsSet()
}

// HasPasswordDictionary returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasPasswordDictionary() bool {
	if o != nil && o.PasswordDictionary.IsSet() {
		return true
	}

	return false
}

// SetPasswordDictionary gets a reference to the given NullableConnectionCreateOptionsPasswordDictionary and assigns it to the PasswordDictionary field.
func (o *ConnectionUpdateOptions) SetPasswordDictionary(v ConnectionCreateOptionsPasswordDictionary) {
	o.PasswordDictionary.Set(&v)
}

// SetPasswordDictionaryNil sets the value for PasswordDictionary to be an explicit nil
func (o *ConnectionUpdateOptions) SetPasswordDictionaryNil() {
	o.PasswordDictionary.Set(nil)
}

// UnsetPasswordDictionary ensures that no value is present for PasswordDictionary, not even an explicit nil
func (o *ConnectionUpdateOptions) UnsetPasswordDictionary() {
	o.PasswordDictionary.Unset()
}

// GetApiEnableUsers returns the ApiEnableUsers field value if set, zero value otherwise.
func (o *ConnectionUpdateOptions) GetApiEnableUsers() bool {
	if o == nil || IsNil(o.ApiEnableUsers) {
		var ret bool
		return ret
	}
	return *o.ApiEnableUsers
}

// GetApiEnableUsersOk returns a tuple with the ApiEnableUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionUpdateOptions) GetApiEnableUsersOk() (*bool, bool) {
	if o == nil || IsNil(o.ApiEnableUsers) {
		return nil, false
	}
	return o.ApiEnableUsers, true
}

// HasApiEnableUsers returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasApiEnableUsers() bool {
	if o != nil && !IsNil(o.ApiEnableUsers) {
		return true
	}

	return false
}

// SetApiEnableUsers gets a reference to the given bool and assigns it to the ApiEnableUsers field.
func (o *ConnectionUpdateOptions) SetApiEnableUsers(v bool) {
	o.ApiEnableUsers = &v
}

// GetBasicProfile returns the BasicProfile field value if set, zero value otherwise.
func (o *ConnectionUpdateOptions) GetBasicProfile() bool {
	if o == nil || IsNil(o.BasicProfile) {
		var ret bool
		return ret
	}
	return *o.BasicProfile
}

// GetBasicProfileOk returns a tuple with the BasicProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionUpdateOptions) GetBasicProfileOk() (*bool, bool) {
	if o == nil || IsNil(o.BasicProfile) {
		return nil, false
	}
	return o.BasicProfile, true
}

// HasBasicProfile returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasBasicProfile() bool {
	if o != nil && !IsNil(o.BasicProfile) {
		return true
	}

	return false
}

// SetBasicProfile gets a reference to the given bool and assigns it to the BasicProfile field.
func (o *ConnectionUpdateOptions) SetBasicProfile(v bool) {
	o.BasicProfile = &v
}

// GetExtAdmin returns the ExtAdmin field value if set, zero value otherwise.
func (o *ConnectionUpdateOptions) GetExtAdmin() bool {
	if o == nil || IsNil(o.ExtAdmin) {
		var ret bool
		return ret
	}
	return *o.ExtAdmin
}

// GetExtAdminOk returns a tuple with the ExtAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionUpdateOptions) GetExtAdminOk() (*bool, bool) {
	if o == nil || IsNil(o.ExtAdmin) {
		return nil, false
	}
	return o.ExtAdmin, true
}

// HasExtAdmin returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasExtAdmin() bool {
	if o != nil && !IsNil(o.ExtAdmin) {
		return true
	}

	return false
}

// SetExtAdmin gets a reference to the given bool and assigns it to the ExtAdmin field.
func (o *ConnectionUpdateOptions) SetExtAdmin(v bool) {
	o.ExtAdmin = &v
}

// GetExtIsSuspended returns the ExtIsSuspended field value if set, zero value otherwise.
func (o *ConnectionUpdateOptions) GetExtIsSuspended() bool {
	if o == nil || IsNil(o.ExtIsSuspended) {
		var ret bool
		return ret
	}
	return *o.ExtIsSuspended
}

// GetExtIsSuspendedOk returns a tuple with the ExtIsSuspended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionUpdateOptions) GetExtIsSuspendedOk() (*bool, bool) {
	if o == nil || IsNil(o.ExtIsSuspended) {
		return nil, false
	}
	return o.ExtIsSuspended, true
}

// HasExtIsSuspended returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasExtIsSuspended() bool {
	if o != nil && !IsNil(o.ExtIsSuspended) {
		return true
	}

	return false
}

// SetExtIsSuspended gets a reference to the given bool and assigns it to the ExtIsSuspended field.
func (o *ConnectionUpdateOptions) SetExtIsSuspended(v bool) {
	o.ExtIsSuspended = &v
}

// GetExtAgreedTerms returns the ExtAgreedTerms field value if set, zero value otherwise.
func (o *ConnectionUpdateOptions) GetExtAgreedTerms() bool {
	if o == nil || IsNil(o.ExtAgreedTerms) {
		var ret bool
		return ret
	}
	return *o.ExtAgreedTerms
}

// GetExtAgreedTermsOk returns a tuple with the ExtAgreedTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionUpdateOptions) GetExtAgreedTermsOk() (*bool, bool) {
	if o == nil || IsNil(o.ExtAgreedTerms) {
		return nil, false
	}
	return o.ExtAgreedTerms, true
}

// HasExtAgreedTerms returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasExtAgreedTerms() bool {
	if o != nil && !IsNil(o.ExtAgreedTerms) {
		return true
	}

	return false
}

// SetExtAgreedTerms gets a reference to the given bool and assigns it to the ExtAgreedTerms field.
func (o *ConnectionUpdateOptions) SetExtAgreedTerms(v bool) {
	o.ExtAgreedTerms = &v
}

// GetExtGroups returns the ExtGroups field value if set, zero value otherwise.
func (o *ConnectionUpdateOptions) GetExtGroups() bool {
	if o == nil || IsNil(o.ExtGroups) {
		var ret bool
		return ret
	}
	return *o.ExtGroups
}

// GetExtGroupsOk returns a tuple with the ExtGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionUpdateOptions) GetExtGroupsOk() (*bool, bool) {
	if o == nil || IsNil(o.ExtGroups) {
		return nil, false
	}
	return o.ExtGroups, true
}

// HasExtGroups returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasExtGroups() bool {
	if o != nil && !IsNil(o.ExtGroups) {
		return true
	}

	return false
}

// SetExtGroups gets a reference to the given bool and assigns it to the ExtGroups field.
func (o *ConnectionUpdateOptions) SetExtGroups(v bool) {
	o.ExtGroups = &v
}

// GetExtAssignedPlans returns the ExtAssignedPlans field value if set, zero value otherwise.
func (o *ConnectionUpdateOptions) GetExtAssignedPlans() bool {
	if o == nil || IsNil(o.ExtAssignedPlans) {
		var ret bool
		return ret
	}
	return *o.ExtAssignedPlans
}

// GetExtAssignedPlansOk returns a tuple with the ExtAssignedPlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionUpdateOptions) GetExtAssignedPlansOk() (*bool, bool) {
	if o == nil || IsNil(o.ExtAssignedPlans) {
		return nil, false
	}
	return o.ExtAssignedPlans, true
}

// HasExtAssignedPlans returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasExtAssignedPlans() bool {
	if o != nil && !IsNil(o.ExtAssignedPlans) {
		return true
	}

	return false
}

// SetExtAssignedPlans gets a reference to the given bool and assigns it to the ExtAssignedPlans field.
func (o *ConnectionUpdateOptions) SetExtAssignedPlans(v bool) {
	o.ExtAssignedPlans = &v
}

// GetExtProfile returns the ExtProfile field value if set, zero value otherwise.
func (o *ConnectionUpdateOptions) GetExtProfile() bool {
	if o == nil || IsNil(o.ExtProfile) {
		var ret bool
		return ret
	}
	return *o.ExtProfile
}

// GetExtProfileOk returns a tuple with the ExtProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionUpdateOptions) GetExtProfileOk() (*bool, bool) {
	if o == nil || IsNil(o.ExtProfile) {
		return nil, false
	}
	return o.ExtProfile, true
}

// HasExtProfile returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasExtProfile() bool {
	if o != nil && !IsNil(o.ExtProfile) {
		return true
	}

	return false
}

// SetExtProfile gets a reference to the given bool and assigns it to the ExtProfile field.
func (o *ConnectionUpdateOptions) SetExtProfile(v bool) {
	o.ExtProfile = &v
}

// GetDisableSelfServiceChangePassword returns the DisableSelfServiceChangePassword field value if set, zero value otherwise.
func (o *ConnectionUpdateOptions) GetDisableSelfServiceChangePassword() bool {
	if o == nil || IsNil(o.DisableSelfServiceChangePassword) {
		var ret bool
		return ret
	}
	return *o.DisableSelfServiceChangePassword
}

// GetDisableSelfServiceChangePasswordOk returns a tuple with the DisableSelfServiceChangePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionUpdateOptions) GetDisableSelfServiceChangePasswordOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableSelfServiceChangePassword) {
		return nil, false
	}
	return o.DisableSelfServiceChangePassword, true
}

// HasDisableSelfServiceChangePassword returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasDisableSelfServiceChangePassword() bool {
	if o != nil && !IsNil(o.DisableSelfServiceChangePassword) {
		return true
	}

	return false
}

// SetDisableSelfServiceChangePassword gets a reference to the given bool and assigns it to the DisableSelfServiceChangePassword field.
func (o *ConnectionUpdateOptions) SetDisableSelfServiceChangePassword(v bool) {
	o.DisableSelfServiceChangePassword = &v
}

// GetUpstreamParams returns the UpstreamParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionUpdateOptions) GetUpstreamParams() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.UpstreamParams
}

// GetUpstreamParamsOk returns a tuple with the UpstreamParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionUpdateOptions) GetUpstreamParamsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.UpstreamParams) {
		return map[string]interface{}{}, false
	}
	return o.UpstreamParams, true
}

// HasUpstreamParams returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasUpstreamParams() bool {
	if o != nil && !IsNil(o.UpstreamParams) {
		return true
	}

	return false
}

// SetUpstreamParams gets a reference to the given map[string]interface{} and assigns it to the UpstreamParams field.
func (o *ConnectionUpdateOptions) SetUpstreamParams(v map[string]interface{}) {
	o.UpstreamParams = v
}

// GetSetUserRootAttributes returns the SetUserRootAttributes field value if set, zero value otherwise.
func (o *ConnectionUpdateOptions) GetSetUserRootAttributes() ConnectionCreateOptionsSetUserRootAttributes {
	if o == nil || IsNil(o.SetUserRootAttributes) {
		var ret ConnectionCreateOptionsSetUserRootAttributes
		return ret
	}
	return *o.SetUserRootAttributes
}

// GetSetUserRootAttributesOk returns a tuple with the SetUserRootAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionUpdateOptions) GetSetUserRootAttributesOk() (*ConnectionCreateOptionsSetUserRootAttributes, bool) {
	if o == nil || IsNil(o.SetUserRootAttributes) {
		return nil, false
	}
	return o.SetUserRootAttributes, true
}

// HasSetUserRootAttributes returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasSetUserRootAttributes() bool {
	if o != nil && !IsNil(o.SetUserRootAttributes) {
		return true
	}

	return false
}

// SetSetUserRootAttributes gets a reference to the given ConnectionCreateOptionsSetUserRootAttributes and assigns it to the SetUserRootAttributes field.
func (o *ConnectionUpdateOptions) SetSetUserRootAttributes(v ConnectionCreateOptionsSetUserRootAttributes) {
	o.SetUserRootAttributes = &v
}

// GetGatewayAuthentication returns the GatewayAuthentication field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionUpdateOptions) GetGatewayAuthentication() ConnectionCreateOptionsGatewayAuthentication {
	if o == nil || IsNil(o.GatewayAuthentication.Get()) {
		var ret ConnectionCreateOptionsGatewayAuthentication
		return ret
	}
	return *o.GatewayAuthentication.Get()
}

// GetGatewayAuthenticationOk returns a tuple with the GatewayAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionUpdateOptions) GetGatewayAuthenticationOk() (*ConnectionCreateOptionsGatewayAuthentication, bool) {
	if o == nil {
		return nil, false
	}
	return o.GatewayAuthentication.Get(), o.GatewayAuthentication.IsSet()
}

// HasGatewayAuthentication returns a boolean if a field has been set.
func (o *ConnectionUpdateOptions) HasGatewayAuthentication() bool {
	if o != nil && o.GatewayAuthentication.IsSet() {
		return true
	}

	return false
}

// SetGatewayAuthentication gets a reference to the given NullableConnectionCreateOptionsGatewayAuthentication and assigns it to the GatewayAuthentication field.
func (o *ConnectionUpdateOptions) SetGatewayAuthentication(v ConnectionCreateOptionsGatewayAuthentication) {
	o.GatewayAuthentication.Set(&v)
}

// SetGatewayAuthenticationNil sets the value for GatewayAuthentication to be an explicit nil
func (o *ConnectionUpdateOptions) SetGatewayAuthenticationNil() {
	o.GatewayAuthentication.Set(nil)
}

// UnsetGatewayAuthentication ensures that no value is present for GatewayAuthentication, not even an explicit nil
func (o *ConnectionUpdateOptions) UnsetGatewayAuthentication() {
	o.GatewayAuthentication.Unset()
}

func (o ConnectionUpdateOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionUpdateOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Validation.IsSet() {
		toSerialize["validation"] = o.Validation.Get()
	}
	if !IsNil(o.NonPersistentAttrs) {
		toSerialize["non_persistent_attrs"] = o.NonPersistentAttrs
	}
	if !IsNil(o.EnableScriptContext) {
		toSerialize["enable_script_context"] = o.EnableScriptContext
	}
	if !IsNil(o.EnabledDatabaseCustomization) {
		toSerialize["enabledDatabaseCustomization"] = o.EnabledDatabaseCustomization
	}
	if !IsNil(o.ImportMode) {
		toSerialize["import_mode"] = o.ImportMode
	}
	if !IsNil(o.CustomScripts) {
		toSerialize["customScripts"] = o.CustomScripts
	}
	if o.AuthenticationMethods.IsSet() {
		toSerialize["authentication_methods"] = o.AuthenticationMethods.Get()
	}
	if o.PasskeyOptions.IsSet() {
		toSerialize["passkey_options"] = o.PasskeyOptions.Get()
	}
	if o.PasswordPolicy.IsSet() {
		toSerialize["passwordPolicy"] = o.PasswordPolicy.Get()
	}
	if o.PasswordComplexityOptions.IsSet() {
		toSerialize["password_complexity_options"] = o.PasswordComplexityOptions.Get()
	}
	if o.PasswordHistory.IsSet() {
		toSerialize["password_history"] = o.PasswordHistory.Get()
	}
	if o.PasswordNoPersonalInfo.IsSet() {
		toSerialize["password_no_personal_info"] = o.PasswordNoPersonalInfo.Get()
	}
	if o.PasswordDictionary.IsSet() {
		toSerialize["password_dictionary"] = o.PasswordDictionary.Get()
	}
	if !IsNil(o.ApiEnableUsers) {
		toSerialize["api_enable_users"] = o.ApiEnableUsers
	}
	if !IsNil(o.BasicProfile) {
		toSerialize["basic_profile"] = o.BasicProfile
	}
	if !IsNil(o.ExtAdmin) {
		toSerialize["ext_admin"] = o.ExtAdmin
	}
	if !IsNil(o.ExtIsSuspended) {
		toSerialize["ext_is_suspended"] = o.ExtIsSuspended
	}
	if !IsNil(o.ExtAgreedTerms) {
		toSerialize["ext_agreed_terms"] = o.ExtAgreedTerms
	}
	if !IsNil(o.ExtGroups) {
		toSerialize["ext_groups"] = o.ExtGroups
	}
	if !IsNil(o.ExtAssignedPlans) {
		toSerialize["ext_assigned_plans"] = o.ExtAssignedPlans
	}
	if !IsNil(o.ExtProfile) {
		toSerialize["ext_profile"] = o.ExtProfile
	}
	if !IsNil(o.DisableSelfServiceChangePassword) {
		toSerialize["disable_self_service_change_password"] = o.DisableSelfServiceChangePassword
	}
	if o.UpstreamParams != nil {
		toSerialize["upstream_params"] = o.UpstreamParams
	}
	if !IsNil(o.SetUserRootAttributes) {
		toSerialize["set_user_root_attributes"] = o.SetUserRootAttributes
	}
	if o.GatewayAuthentication.IsSet() {
		toSerialize["gateway_authentication"] = o.GatewayAuthentication.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ConnectionUpdateOptions) UnmarshalJSON(data []byte) (err error) {
	varConnectionUpdateOptions := _ConnectionUpdateOptions{}

	err = json.Unmarshal(data, &varConnectionUpdateOptions)

	if err != nil {
		return err
	}

	*o = ConnectionUpdateOptions(varConnectionUpdateOptions)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "validation")
		delete(additionalProperties, "non_persistent_attrs")
		delete(additionalProperties, "enable_script_context")
		delete(additionalProperties, "enabledDatabaseCustomization")
		delete(additionalProperties, "import_mode")
		delete(additionalProperties, "customScripts")
		delete(additionalProperties, "authentication_methods")
		delete(additionalProperties, "passkey_options")
		delete(additionalProperties, "passwordPolicy")
		delete(additionalProperties, "password_complexity_options")
		delete(additionalProperties, "password_history")
		delete(additionalProperties, "password_no_personal_info")
		delete(additionalProperties, "password_dictionary")
		delete(additionalProperties, "api_enable_users")
		delete(additionalProperties, "basic_profile")
		delete(additionalProperties, "ext_admin")
		delete(additionalProperties, "ext_is_suspended")
		delete(additionalProperties, "ext_agreed_terms")
		delete(additionalProperties, "ext_groups")
		delete(additionalProperties, "ext_assigned_plans")
		delete(additionalProperties, "ext_profile")
		delete(additionalProperties, "disable_self_service_change_password")
		delete(additionalProperties, "upstream_params")
		delete(additionalProperties, "set_user_root_attributes")
		delete(additionalProperties, "gateway_authentication")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConnectionUpdateOptions struct {
	value *ConnectionUpdateOptions
	isSet bool
}

func (v NullableConnectionUpdateOptions) Get() *ConnectionUpdateOptions {
	return v.value
}

func (v *NullableConnectionUpdateOptions) Set(val *ConnectionUpdateOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionUpdateOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionUpdateOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionUpdateOptions(val *ConnectionUpdateOptions) *NullableConnectionUpdateOptions {
	return &NullableConnectionUpdateOptions{value: val, isSet: true}
}

func (v NullableConnectionUpdateOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionUpdateOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
