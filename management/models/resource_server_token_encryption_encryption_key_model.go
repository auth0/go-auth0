/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
)

// ResourceServerTokenEncryptionEncryptionKey struct for ResourceServerTokenEncryptionEncryptionKey
type ResourceServerTokenEncryptionEncryptionKey struct {
	// Name of the encryption key.
	Name *string                                       `json:"name,omitempty"`
	Alg  ResourceServerTokenEncryptionEncryptionKeyAlg `json:"alg"`
	// Key ID.
	Kid *string `json:"kid,omitempty"`
	// PEM-formatted public key. Must be JSON escaped.
	Pem string `json:"pem"`
}

type _ResourceServerTokenEncryptionEncryptionKey ResourceServerTokenEncryptionEncryptionKey

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResourceServerTokenEncryptionEncryptionKey) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceServerTokenEncryptionEncryptionKey) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResourceServerTokenEncryptionEncryptionKey) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ResourceServerTokenEncryptionEncryptionKey) SetName(v string) {
	o.Name = &v
}

// GetAlg returns the Alg field value
func (o *ResourceServerTokenEncryptionEncryptionKey) GetAlg() ResourceServerTokenEncryptionEncryptionKeyAlg {
	if o == nil {
		var ret ResourceServerTokenEncryptionEncryptionKeyAlg
		return ret
	}

	return o.Alg
}

// GetAlgOk returns a tuple with the Alg field value
// and a boolean to check if the value has been set.
func (o *ResourceServerTokenEncryptionEncryptionKey) GetAlgOk() (*ResourceServerTokenEncryptionEncryptionKeyAlg, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Alg, true
}

// SetAlg sets field value
func (o *ResourceServerTokenEncryptionEncryptionKey) SetAlg(v ResourceServerTokenEncryptionEncryptionKeyAlg) {
	o.Alg = v
}

// GetKid returns the Kid field value if set, zero value otherwise.
func (o *ResourceServerTokenEncryptionEncryptionKey) GetKid() string {
	if o == nil || IsNil(o.Kid) {
		var ret string
		return ret
	}
	return *o.Kid
}

// GetKidOk returns a tuple with the Kid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceServerTokenEncryptionEncryptionKey) GetKidOk() (*string, bool) {
	if o == nil || IsNil(o.Kid) {
		return nil, false
	}
	return o.Kid, true
}

// HasKid returns a boolean if a field has been set.
func (o *ResourceServerTokenEncryptionEncryptionKey) HasKid() bool {
	if o != nil && !IsNil(o.Kid) {
		return true
	}

	return false
}

// SetKid gets a reference to the given string and assigns it to the Kid field.
func (o *ResourceServerTokenEncryptionEncryptionKey) SetKid(v string) {
	o.Kid = &v
}

// GetPem returns the Pem field value
func (o *ResourceServerTokenEncryptionEncryptionKey) GetPem() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pem
}

// GetPemOk returns a tuple with the Pem field value
// and a boolean to check if the value has been set.
func (o *ResourceServerTokenEncryptionEncryptionKey) GetPemOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pem, true
}

// SetPem sets field value
func (o *ResourceServerTokenEncryptionEncryptionKey) SetPem(v string) {
	o.Pem = v
}

func (o ResourceServerTokenEncryptionEncryptionKey) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceServerTokenEncryptionEncryptionKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["alg"] = o.Alg
	if !IsNil(o.Kid) {
		toSerialize["kid"] = o.Kid
	}
	toSerialize["pem"] = o.Pem
	return toSerialize, nil
}

func (o *ResourceServerTokenEncryptionEncryptionKey) UnmarshalJSON(data []byte) (err error) {
	varResourceServerTokenEncryptionEncryptionKey := _ResourceServerTokenEncryptionEncryptionKey{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResourceServerTokenEncryptionEncryptionKey)

	if err != nil {
		return err
	}

	*o = ResourceServerTokenEncryptionEncryptionKey(varResourceServerTokenEncryptionEncryptionKey)

	return err
}

type NullableResourceServerTokenEncryptionEncryptionKey struct {
	value *ResourceServerTokenEncryptionEncryptionKey
	isSet bool
}

func (v NullableResourceServerTokenEncryptionEncryptionKey) Get() *ResourceServerTokenEncryptionEncryptionKey {
	return v.value
}

func (v *NullableResourceServerTokenEncryptionEncryptionKey) Set(val *ResourceServerTokenEncryptionEncryptionKey) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceServerTokenEncryptionEncryptionKey) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceServerTokenEncryptionEncryptionKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceServerTokenEncryptionEncryptionKey(val *ResourceServerTokenEncryptionEncryptionKey) *NullableResourceServerTokenEncryptionEncryptionKey {
	return &NullableResourceServerTokenEncryptionEncryptionKey{value: val, isSet: true}
}

func (v NullableResourceServerTokenEncryptionEncryptionKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceServerTokenEncryptionEncryptionKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
