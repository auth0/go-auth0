/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ClientGrantCreateOrganizationUsage Defines whether organizations can be used with client credentials exchanges for this grant.
type ClientGrantCreateOrganizationUsage string

// List of clientGrantCreate_organization_usage
const (
	CLIENTGRANTCREATEORGANIZATIONUSAGE_DENY    ClientGrantCreateOrganizationUsage = "deny"
	CLIENTGRANTCREATEORGANIZATIONUSAGE_ALLOW   ClientGrantCreateOrganizationUsage = "allow"
	CLIENTGRANTCREATEORGANIZATIONUSAGE_REQUIRE ClientGrantCreateOrganizationUsage = "require"
)

// All allowed values of ClientGrantCreateOrganizationUsage enum
var AllowedClientGrantCreateOrganizationUsageEnumValues = []ClientGrantCreateOrganizationUsage{
	"deny",
	"allow",
	"require",
}

func (v *ClientGrantCreateOrganizationUsage) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ClientGrantCreateOrganizationUsage(value)
	for _, existing := range AllowedClientGrantCreateOrganizationUsageEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ClientGrantCreateOrganizationUsage", value)
}

// NewClientGrantCreateOrganizationUsageFromValue returns a pointer to a valid ClientGrantCreateOrganizationUsage
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewClientGrantCreateOrganizationUsageFromValue(v string) (*ClientGrantCreateOrganizationUsage, error) {
	ev := ClientGrantCreateOrganizationUsage(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ClientGrantCreateOrganizationUsage: valid values are %v", v, AllowedClientGrantCreateOrganizationUsageEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ClientGrantCreateOrganizationUsage) IsValid() bool {
	for _, existing := range AllowedClientGrantCreateOrganizationUsageEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to clientGrantCreate_organization_usage value
func (v ClientGrantCreateOrganizationUsage) Ptr() *ClientGrantCreateOrganizationUsage {
	return &v
}

type NullableClientGrantCreateOrganizationUsage struct {
	value *ClientGrantCreateOrganizationUsage
	isSet bool
}

func (v NullableClientGrantCreateOrganizationUsage) Get() *ClientGrantCreateOrganizationUsage {
	return v.value
}

func (v *NullableClientGrantCreateOrganizationUsage) Set(val *ClientGrantCreateOrganizationUsage) {
	v.value = val
	v.isSet = true
}

func (v NullableClientGrantCreateOrganizationUsage) IsSet() bool {
	return v.isSet
}

func (v *NullableClientGrantCreateOrganizationUsage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientGrantCreateOrganizationUsage(val *ClientGrantCreateOrganizationUsage) *NullableClientGrantCreateOrganizationUsage {
	return &NullableClientGrantCreateOrganizationUsage{value: val, isSet: true}
}

func (v NullableClientGrantCreateOrganizationUsage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientGrantCreateOrganizationUsage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
