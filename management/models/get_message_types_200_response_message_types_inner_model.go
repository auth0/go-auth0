/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetMessageTypes200ResponseMessageTypesInner the model 'GetMessageTypes200ResponseMessageTypesInner'
type GetMessageTypes200ResponseMessageTypesInner string

// List of get_message_types_200_response_message_types_inner
const (
	GETMESSAGETYPES200RESPONSEMESSAGETYPESINNER_SMS   GetMessageTypes200ResponseMessageTypesInner = "sms"
	GETMESSAGETYPES200RESPONSEMESSAGETYPESINNER_VOICE GetMessageTypes200ResponseMessageTypesInner = "voice"
)

// All allowed values of GetMessageTypes200ResponseMessageTypesInner enum
var AllowedGetMessageTypes200ResponseMessageTypesInnerEnumValues = []GetMessageTypes200ResponseMessageTypesInner{
	"sms",
	"voice",
}

func (v *GetMessageTypes200ResponseMessageTypesInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetMessageTypes200ResponseMessageTypesInner(value)
	for _, existing := range AllowedGetMessageTypes200ResponseMessageTypesInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetMessageTypes200ResponseMessageTypesInner", value)
}

// NewGetMessageTypes200ResponseMessageTypesInnerFromValue returns a pointer to a valid GetMessageTypes200ResponseMessageTypesInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetMessageTypes200ResponseMessageTypesInnerFromValue(v string) (*GetMessageTypes200ResponseMessageTypesInner, error) {
	ev := GetMessageTypes200ResponseMessageTypesInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetMessageTypes200ResponseMessageTypesInner: valid values are %v", v, AllowedGetMessageTypes200ResponseMessageTypesInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetMessageTypes200ResponseMessageTypesInner) IsValid() bool {
	for _, existing := range AllowedGetMessageTypes200ResponseMessageTypesInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to get_message_types_200_response_message_types_inner value
func (v GetMessageTypes200ResponseMessageTypesInner) Ptr() *GetMessageTypes200ResponseMessageTypesInner {
	return &v
}

type NullableGetMessageTypes200ResponseMessageTypesInner struct {
	value *GetMessageTypes200ResponseMessageTypesInner
	isSet bool
}

func (v NullableGetMessageTypes200ResponseMessageTypesInner) Get() *GetMessageTypes200ResponseMessageTypesInner {
	return v.value
}

func (v *NullableGetMessageTypes200ResponseMessageTypesInner) Set(val *GetMessageTypes200ResponseMessageTypesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMessageTypes200ResponseMessageTypesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMessageTypes200ResponseMessageTypesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMessageTypes200ResponseMessageTypesInner(val *GetMessageTypes200ResponseMessageTypesInner) *NullableGetMessageTypes200ResponseMessageTypesInner {
	return &NullableGetMessageTypes200ResponseMessageTypesInner{value: val, isSet: true}
}

func (v NullableGetMessageTypes200ResponseMessageTypesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMessageTypes200ResponseMessageTypesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
