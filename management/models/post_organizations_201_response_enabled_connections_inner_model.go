/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PostOrganizations201ResponseEnabledConnectionsInner struct for PostOrganizations201ResponseEnabledConnectionsInner
type PostOrganizations201ResponseEnabledConnectionsInner struct {
	// ID of the connection.
	ConnectionId *string `json:"connection_id,omitempty"`
	// When true, all users that log in with this connection will be automatically granted membership in the organization. When false, users must be granted membership in the organization before logging in with this connection.
	AssignMembershipOnLogin *bool `json:"assign_membership_on_login,omitempty"`
	// Determines whether a connection should be displayed on this organizationâ€™s login prompt. Only applicable for enterprise connections. Default: true.
	ShowAsButton *bool `json:"show_as_button,omitempty"`
	// Determines whether organization signup should be enabled for this organization connection. Only applicable for database connections. Default: false.
	IsSignupEnabled      *bool                                                          `json:"is_signup_enabled,omitempty"`
	Connection           *PostOrganizations201ResponseEnabledConnectionsInnerConnection `json:"connection,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PostOrganizations201ResponseEnabledConnectionsInner PostOrganizations201ResponseEnabledConnectionsInner

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId) {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) GetConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetAssignMembershipOnLogin returns the AssignMembershipOnLogin field value if set, zero value otherwise.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) GetAssignMembershipOnLogin() bool {
	if o == nil || IsNil(o.AssignMembershipOnLogin) {
		var ret bool
		return ret
	}
	return *o.AssignMembershipOnLogin
}

// GetAssignMembershipOnLoginOk returns a tuple with the AssignMembershipOnLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) GetAssignMembershipOnLoginOk() (*bool, bool) {
	if o == nil || IsNil(o.AssignMembershipOnLogin) {
		return nil, false
	}
	return o.AssignMembershipOnLogin, true
}

// HasAssignMembershipOnLogin returns a boolean if a field has been set.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) HasAssignMembershipOnLogin() bool {
	if o != nil && !IsNil(o.AssignMembershipOnLogin) {
		return true
	}

	return false
}

// SetAssignMembershipOnLogin gets a reference to the given bool and assigns it to the AssignMembershipOnLogin field.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) SetAssignMembershipOnLogin(v bool) {
	o.AssignMembershipOnLogin = &v
}

// GetShowAsButton returns the ShowAsButton field value if set, zero value otherwise.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) GetShowAsButton() bool {
	if o == nil || IsNil(o.ShowAsButton) {
		var ret bool
		return ret
	}
	return *o.ShowAsButton
}

// GetShowAsButtonOk returns a tuple with the ShowAsButton field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) GetShowAsButtonOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowAsButton) {
		return nil, false
	}
	return o.ShowAsButton, true
}

// HasShowAsButton returns a boolean if a field has been set.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) HasShowAsButton() bool {
	if o != nil && !IsNil(o.ShowAsButton) {
		return true
	}

	return false
}

// SetShowAsButton gets a reference to the given bool and assigns it to the ShowAsButton field.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) SetShowAsButton(v bool) {
	o.ShowAsButton = &v
}

// GetIsSignupEnabled returns the IsSignupEnabled field value if set, zero value otherwise.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) GetIsSignupEnabled() bool {
	if o == nil || IsNil(o.IsSignupEnabled) {
		var ret bool
		return ret
	}
	return *o.IsSignupEnabled
}

// GetIsSignupEnabledOk returns a tuple with the IsSignupEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) GetIsSignupEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSignupEnabled) {
		return nil, false
	}
	return o.IsSignupEnabled, true
}

// HasIsSignupEnabled returns a boolean if a field has been set.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) HasIsSignupEnabled() bool {
	if o != nil && !IsNil(o.IsSignupEnabled) {
		return true
	}

	return false
}

// SetIsSignupEnabled gets a reference to the given bool and assigns it to the IsSignupEnabled field.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) SetIsSignupEnabled(v bool) {
	o.IsSignupEnabled = &v
}

// GetConnection returns the Connection field value if set, zero value otherwise.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) GetConnection() PostOrganizations201ResponseEnabledConnectionsInnerConnection {
	if o == nil || IsNil(o.Connection) {
		var ret PostOrganizations201ResponseEnabledConnectionsInnerConnection
		return ret
	}
	return *o.Connection
}

// GetConnectionOk returns a tuple with the Connection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) GetConnectionOk() (*PostOrganizations201ResponseEnabledConnectionsInnerConnection, bool) {
	if o == nil || IsNil(o.Connection) {
		return nil, false
	}
	return o.Connection, true
}

// HasConnection returns a boolean if a field has been set.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) HasConnection() bool {
	if o != nil && !IsNil(o.Connection) {
		return true
	}

	return false
}

// SetConnection gets a reference to the given PostOrganizations201ResponseEnabledConnectionsInnerConnection and assigns it to the Connection field.
func (o *PostOrganizations201ResponseEnabledConnectionsInner) SetConnection(v PostOrganizations201ResponseEnabledConnectionsInnerConnection) {
	o.Connection = &v
}

func (o PostOrganizations201ResponseEnabledConnectionsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostOrganizations201ResponseEnabledConnectionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	if !IsNil(o.AssignMembershipOnLogin) {
		toSerialize["assign_membership_on_login"] = o.AssignMembershipOnLogin
	}
	if !IsNil(o.ShowAsButton) {
		toSerialize["show_as_button"] = o.ShowAsButton
	}
	if !IsNil(o.IsSignupEnabled) {
		toSerialize["is_signup_enabled"] = o.IsSignupEnabled
	}
	if !IsNil(o.Connection) {
		toSerialize["connection"] = o.Connection
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PostOrganizations201ResponseEnabledConnectionsInner) UnmarshalJSON(data []byte) (err error) {
	varPostOrganizations201ResponseEnabledConnectionsInner := _PostOrganizations201ResponseEnabledConnectionsInner{}

	err = json.Unmarshal(data, &varPostOrganizations201ResponseEnabledConnectionsInner)

	if err != nil {
		return err
	}

	*o = PostOrganizations201ResponseEnabledConnectionsInner(varPostOrganizations201ResponseEnabledConnectionsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "connection_id")
		delete(additionalProperties, "assign_membership_on_login")
		delete(additionalProperties, "show_as_button")
		delete(additionalProperties, "is_signup_enabled")
		delete(additionalProperties, "connection")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePostOrganizations201ResponseEnabledConnectionsInner struct {
	value *PostOrganizations201ResponseEnabledConnectionsInner
	isSet bool
}

func (v NullablePostOrganizations201ResponseEnabledConnectionsInner) Get() *PostOrganizations201ResponseEnabledConnectionsInner {
	return v.value
}

func (v *NullablePostOrganizations201ResponseEnabledConnectionsInner) Set(val *PostOrganizations201ResponseEnabledConnectionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePostOrganizations201ResponseEnabledConnectionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePostOrganizations201ResponseEnabledConnectionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostOrganizations201ResponseEnabledConnectionsInner(val *PostOrganizations201ResponseEnabledConnectionsInner) *NullablePostOrganizations201ResponseEnabledConnectionsInner {
	return &NullablePostOrganizations201ResponseEnabledConnectionsInner{value: val, isSet: true}
}

func (v NullablePostOrganizations201ResponseEnabledConnectionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostOrganizations201ResponseEnabledConnectionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
