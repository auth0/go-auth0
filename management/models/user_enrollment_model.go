/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
)

// UserEnrollment struct for UserEnrollment
type UserEnrollment struct {
	// ID of this enrollment.
	Id     *string               `json:"id,omitempty"`
	Status *UserEnrollmentStatus `json:"status,omitempty"`
	// Type of enrollment.
	Type *string `json:"type,omitempty"`
	// Name of enrollment (usually phone number).
	Name *string `json:"name,omitempty"`
	// Device identifier (usually phone identifier) of this enrollment.
	Identifier *string `json:"identifier,omitempty"`
	// Phone number for this enrollment.
	PhoneNumber *string                   `json:"phone_number,omitempty"`
	AuthMethod  *UserEnrollmentAuthMethod `json:"auth_method,omitempty"`
	// Start date and time of this enrollment.
	EnrolledAt *time.Time `json:"enrolled_at,omitempty"`
	// Last authentication date and time of this enrollment.
	LastAuth             *time.Time `json:"last_auth,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UserEnrollment UserEnrollment

// GetId returns the Id field value if set, zero value otherwise.
func (o *UserEnrollment) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserEnrollment) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UserEnrollment) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UserEnrollment) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UserEnrollment) GetStatus() UserEnrollmentStatus {
	if o == nil || IsNil(o.Status) {
		var ret UserEnrollmentStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserEnrollment) GetStatusOk() (*UserEnrollmentStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UserEnrollment) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given UserEnrollmentStatus and assigns it to the Status field.
func (o *UserEnrollment) SetStatus(v UserEnrollmentStatus) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UserEnrollment) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserEnrollment) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UserEnrollment) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UserEnrollment) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UserEnrollment) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserEnrollment) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UserEnrollment) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UserEnrollment) SetName(v string) {
	o.Name = &v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *UserEnrollment) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier) {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserEnrollment) GetIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.Identifier) {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *UserEnrollment) HasIdentifier() bool {
	if o != nil && !IsNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *UserEnrollment) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *UserEnrollment) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserEnrollment) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *UserEnrollment) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *UserEnrollment) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetAuthMethod returns the AuthMethod field value if set, zero value otherwise.
func (o *UserEnrollment) GetAuthMethod() UserEnrollmentAuthMethod {
	if o == nil || IsNil(o.AuthMethod) {
		var ret UserEnrollmentAuthMethod
		return ret
	}
	return *o.AuthMethod
}

// GetAuthMethodOk returns a tuple with the AuthMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserEnrollment) GetAuthMethodOk() (*UserEnrollmentAuthMethod, bool) {
	if o == nil || IsNil(o.AuthMethod) {
		return nil, false
	}
	return o.AuthMethod, true
}

// HasAuthMethod returns a boolean if a field has been set.
func (o *UserEnrollment) HasAuthMethod() bool {
	if o != nil && !IsNil(o.AuthMethod) {
		return true
	}

	return false
}

// SetAuthMethod gets a reference to the given UserEnrollmentAuthMethod and assigns it to the AuthMethod field.
func (o *UserEnrollment) SetAuthMethod(v UserEnrollmentAuthMethod) {
	o.AuthMethod = &v
}

// GetEnrolledAt returns the EnrolledAt field value if set, zero value otherwise.
func (o *UserEnrollment) GetEnrolledAt() time.Time {
	if o == nil || IsNil(o.EnrolledAt) {
		var ret time.Time
		return ret
	}
	return *o.EnrolledAt
}

// GetEnrolledAtOk returns a tuple with the EnrolledAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserEnrollment) GetEnrolledAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EnrolledAt) {
		return nil, false
	}
	return o.EnrolledAt, true
}

// HasEnrolledAt returns a boolean if a field has been set.
func (o *UserEnrollment) HasEnrolledAt() bool {
	if o != nil && !IsNil(o.EnrolledAt) {
		return true
	}

	return false
}

// SetEnrolledAt gets a reference to the given time.Time and assigns it to the EnrolledAt field.
func (o *UserEnrollment) SetEnrolledAt(v time.Time) {
	o.EnrolledAt = &v
}

// GetLastAuth returns the LastAuth field value if set, zero value otherwise.
func (o *UserEnrollment) GetLastAuth() time.Time {
	if o == nil || IsNil(o.LastAuth) {
		var ret time.Time
		return ret
	}
	return *o.LastAuth
}

// GetLastAuthOk returns a tuple with the LastAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserEnrollment) GetLastAuthOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastAuth) {
		return nil, false
	}
	return o.LastAuth, true
}

// HasLastAuth returns a boolean if a field has been set.
func (o *UserEnrollment) HasLastAuth() bool {
	if o != nil && !IsNil(o.LastAuth) {
		return true
	}

	return false
}

// SetLastAuth gets a reference to the given time.Time and assigns it to the LastAuth field.
func (o *UserEnrollment) SetLastAuth(v time.Time) {
	o.LastAuth = &v
}

func (o UserEnrollment) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserEnrollment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Identifier) {
		toSerialize["identifier"] = o.Identifier
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.AuthMethod) {
		toSerialize["auth_method"] = o.AuthMethod
	}
	if !IsNil(o.EnrolledAt) {
		toSerialize["enrolled_at"] = o.EnrolledAt
	}
	if !IsNil(o.LastAuth) {
		toSerialize["last_auth"] = o.LastAuth
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UserEnrollment) UnmarshalJSON(data []byte) (err error) {
	varUserEnrollment := _UserEnrollment{}

	err = json.Unmarshal(data, &varUserEnrollment)

	if err != nil {
		return err
	}

	*o = UserEnrollment(varUserEnrollment)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "status")
		delete(additionalProperties, "type")
		delete(additionalProperties, "name")
		delete(additionalProperties, "identifier")
		delete(additionalProperties, "phone_number")
		delete(additionalProperties, "auth_method")
		delete(additionalProperties, "enrolled_at")
		delete(additionalProperties, "last_auth")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUserEnrollment struct {
	value *UserEnrollment
	isSet bool
}

func (v NullableUserEnrollment) Get() *UserEnrollment {
	return v.value
}

func (v *NullableUserEnrollment) Set(val *UserEnrollment) {
	v.value = val
	v.isSet = true
}

func (v NullableUserEnrollment) IsSet() bool {
	return v.isSet
}

func (v *NullableUserEnrollment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserEnrollment(val *UserEnrollment) *NullableUserEnrollment {
	return &NullableUserEnrollment{value: val, isSet: true}
}

func (v NullableUserEnrollment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserEnrollment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
