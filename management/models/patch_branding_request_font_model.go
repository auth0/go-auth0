/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PatchBrandingRequestFont Custom font settings.
type PatchBrandingRequestFont struct {
	// URL for the custom font. The URL must point to a font file and not a stylesheet. Must use HTTPS.
	Url NullableString `json:"url,omitempty"`
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchBrandingRequestFont) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchBrandingRequestFont) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *PatchBrandingRequestFont) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *PatchBrandingRequestFont) SetUrl(v string) {
	o.Url.Set(&v)
}

// SetUrlNil sets the value for Url to be an explicit nil
func (o *PatchBrandingRequestFont) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *PatchBrandingRequestFont) UnsetUrl() {
	o.Url.Unset()
}

func (o PatchBrandingRequestFont) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchBrandingRequestFont) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	return toSerialize, nil
}

type NullablePatchBrandingRequestFont struct {
	value *PatchBrandingRequestFont
	isSet bool
}

func (v NullablePatchBrandingRequestFont) Get() *PatchBrandingRequestFont {
	return v.value
}

func (v *NullablePatchBrandingRequestFont) Set(val *PatchBrandingRequestFont) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchBrandingRequestFont) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchBrandingRequestFont) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchBrandingRequestFont(val *PatchBrandingRequestFont) *NullablePatchBrandingRequestFont {
	return &NullablePatchBrandingRequestFont{value: val, isSet: true}
}

func (v NullablePatchBrandingRequestFont) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchBrandingRequestFont) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
