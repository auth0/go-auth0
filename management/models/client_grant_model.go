/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientGrant struct for ClientGrant
type ClientGrant struct {
	// ID of the client grant.
	Id *string `json:"id,omitempty"`
	// ID of the client.
	ClientId *string `json:"client_id,omitempty"`
	// The audience (API identifier) of this client grant.
	Audience *string `json:"audience,omitempty"`
	// Scopes allowed for this client grant.
	Scope             []string                      `json:"scope,omitempty"`
	OrganizationUsage *ClientGrantOrganizationUsage `json:"organization_usage,omitempty"`
	// If enabled, any organization can be used with this grant. If disabled (default), the grant must be explicitly assigned to the desired organizations.
	AllowAnyOrganization *bool `json:"allow_any_organization,omitempty"`
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClientGrant) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGrant) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClientGrant) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ClientGrant) SetId(v string) {
	o.Id = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *ClientGrant) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGrant) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *ClientGrant) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *ClientGrant) SetClientId(v string) {
	o.ClientId = &v
}

// GetAudience returns the Audience field value if set, zero value otherwise.
func (o *ClientGrant) GetAudience() string {
	if o == nil || IsNil(o.Audience) {
		var ret string
		return ret
	}
	return *o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGrant) GetAudienceOk() (*string, bool) {
	if o == nil || IsNil(o.Audience) {
		return nil, false
	}
	return o.Audience, true
}

// HasAudience returns a boolean if a field has been set.
func (o *ClientGrant) HasAudience() bool {
	if o != nil && !IsNil(o.Audience) {
		return true
	}

	return false
}

// SetAudience gets a reference to the given string and assigns it to the Audience field.
func (o *ClientGrant) SetAudience(v string) {
	o.Audience = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *ClientGrant) GetScope() []string {
	if o == nil || IsNil(o.Scope) {
		var ret []string
		return ret
	}
	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGrant) GetScopeOk() ([]string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *ClientGrant) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given []string and assigns it to the Scope field.
func (o *ClientGrant) SetScope(v []string) {
	o.Scope = v
}

// GetOrganizationUsage returns the OrganizationUsage field value if set, zero value otherwise.
func (o *ClientGrant) GetOrganizationUsage() ClientGrantOrganizationUsage {
	if o == nil || IsNil(o.OrganizationUsage) {
		var ret ClientGrantOrganizationUsage
		return ret
	}
	return *o.OrganizationUsage
}

// GetOrganizationUsageOk returns a tuple with the OrganizationUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGrant) GetOrganizationUsageOk() (*ClientGrantOrganizationUsage, bool) {
	if o == nil || IsNil(o.OrganizationUsage) {
		return nil, false
	}
	return o.OrganizationUsage, true
}

// HasOrganizationUsage returns a boolean if a field has been set.
func (o *ClientGrant) HasOrganizationUsage() bool {
	if o != nil && !IsNil(o.OrganizationUsage) {
		return true
	}

	return false
}

// SetOrganizationUsage gets a reference to the given ClientGrantOrganizationUsage and assigns it to the OrganizationUsage field.
func (o *ClientGrant) SetOrganizationUsage(v ClientGrantOrganizationUsage) {
	o.OrganizationUsage = &v
}

// GetAllowAnyOrganization returns the AllowAnyOrganization field value if set, zero value otherwise.
func (o *ClientGrant) GetAllowAnyOrganization() bool {
	if o == nil || IsNil(o.AllowAnyOrganization) {
		var ret bool
		return ret
	}
	return *o.AllowAnyOrganization
}

// GetAllowAnyOrganizationOk returns a tuple with the AllowAnyOrganization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGrant) GetAllowAnyOrganizationOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowAnyOrganization) {
		return nil, false
	}
	return o.AllowAnyOrganization, true
}

// HasAllowAnyOrganization returns a boolean if a field has been set.
func (o *ClientGrant) HasAllowAnyOrganization() bool {
	if o != nil && !IsNil(o.AllowAnyOrganization) {
		return true
	}

	return false
}

// SetAllowAnyOrganization gets a reference to the given bool and assigns it to the AllowAnyOrganization field.
func (o *ClientGrant) SetAllowAnyOrganization(v bool) {
	o.AllowAnyOrganization = &v
}

func (o ClientGrant) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientGrant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}
	if !IsNil(o.Audience) {
		toSerialize["audience"] = o.Audience
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	if !IsNil(o.OrganizationUsage) {
		toSerialize["organization_usage"] = o.OrganizationUsage
	}
	if !IsNil(o.AllowAnyOrganization) {
		toSerialize["allow_any_organization"] = o.AllowAnyOrganization
	}
	return toSerialize, nil
}

type NullableClientGrant struct {
	value *ClientGrant
	isSet bool
}

func (v NullableClientGrant) Get() *ClientGrant {
	return v.value
}

func (v *NullableClientGrant) Set(val *ClientGrant) {
	v.value = val
	v.isSet = true
}

func (v NullableClientGrant) IsSet() bool {
	return v.isSet
}

func (v *NullableClientGrant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientGrant(val *ClientGrant) *NullableClientGrant {
	return &NullableClientGrant{value: val, isSet: true}
}

func (v NullableClientGrant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientGrant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
