/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientMobile Additional configuration for native mobile apps.
type ClientMobile struct {
	Android              *ClientMobileAndroid `json:"android,omitempty"`
	Ios                  *ClientMobileIos     `json:"ios,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClientMobile ClientMobile

// GetAndroid returns the Android field value if set, zero value otherwise.
func (o *ClientMobile) GetAndroid() ClientMobileAndroid {
	if o == nil || IsNil(o.Android) {
		var ret ClientMobileAndroid
		return ret
	}
	return *o.Android
}

// GetAndroidOk returns a tuple with the Android field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientMobile) GetAndroidOk() (*ClientMobileAndroid, bool) {
	if o == nil || IsNil(o.Android) {
		return nil, false
	}
	return o.Android, true
}

// HasAndroid returns a boolean if a field has been set.
func (o *ClientMobile) HasAndroid() bool {
	if o != nil && !IsNil(o.Android) {
		return true
	}

	return false
}

// SetAndroid gets a reference to the given ClientMobileAndroid and assigns it to the Android field.
func (o *ClientMobile) SetAndroid(v ClientMobileAndroid) {
	o.Android = &v
}

// GetIos returns the Ios field value if set, zero value otherwise.
func (o *ClientMobile) GetIos() ClientMobileIos {
	if o == nil || IsNil(o.Ios) {
		var ret ClientMobileIos
		return ret
	}
	return *o.Ios
}

// GetIosOk returns a tuple with the Ios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientMobile) GetIosOk() (*ClientMobileIos, bool) {
	if o == nil || IsNil(o.Ios) {
		return nil, false
	}
	return o.Ios, true
}

// HasIos returns a boolean if a field has been set.
func (o *ClientMobile) HasIos() bool {
	if o != nil && !IsNil(o.Ios) {
		return true
	}

	return false
}

// SetIos gets a reference to the given ClientMobileIos and assigns it to the Ios field.
func (o *ClientMobile) SetIos(v ClientMobileIos) {
	o.Ios = &v
}

func (o ClientMobile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientMobile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Android) {
		toSerialize["android"] = o.Android
	}
	if !IsNil(o.Ios) {
		toSerialize["ios"] = o.Ios
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClientMobile) UnmarshalJSON(data []byte) (err error) {
	varClientMobile := _ClientMobile{}

	err = json.Unmarshal(data, &varClientMobile)

	if err != nil {
		return err
	}

	*o = ClientMobile(varClientMobile)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "android")
		delete(additionalProperties, "ios")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClientMobile struct {
	value *ClientMobile
	isSet bool
}

func (v NullableClientMobile) Get() *ClientMobile {
	return v.value
}

func (v *NullableClientMobile) Set(val *ClientMobile) {
	v.value = val
	v.isSet = true
}

func (v NullableClientMobile) IsSet() bool {
	return v.isSet
}

func (v *NullableClientMobile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientMobile(val *ClientMobile) *NullableClientMobile {
	return &NullableClientMobile{value: val, isSet: true}
}

func (v NullableClientMobile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientMobile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
