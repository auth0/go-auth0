/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetActions200ResponseActionsInnerSecretsInner struct for GetActions200ResponseActionsInnerSecretsInner
type GetActions200ResponseActionsInnerSecretsInner struct {
	// The name of the particular secret, e.g. API_KEY.
	Name string `json:"name"`
	// The time when the secret was last updated.
	UpdatedAt            string `json:"updated_at"`
	AdditionalProperties map[string]interface{}
}

type _GetActions200ResponseActionsInnerSecretsInner GetActions200ResponseActionsInnerSecretsInner

// GetName returns the Name field value
func (o *GetActions200ResponseActionsInnerSecretsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetActions200ResponseActionsInnerSecretsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetActions200ResponseActionsInnerSecretsInner) SetName(v string) {
	o.Name = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *GetActions200ResponseActionsInnerSecretsInner) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *GetActions200ResponseActionsInnerSecretsInner) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *GetActions200ResponseActionsInnerSecretsInner) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o GetActions200ResponseActionsInnerSecretsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetActions200ResponseActionsInnerSecretsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["updated_at"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetActions200ResponseActionsInnerSecretsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetActions200ResponseActionsInnerSecretsInner := _GetActions200ResponseActionsInnerSecretsInner{}

	err = json.Unmarshal(data, &varGetActions200ResponseActionsInnerSecretsInner)

	if err != nil {
		return err
	}

	*o = GetActions200ResponseActionsInnerSecretsInner(varGetActions200ResponseActionsInnerSecretsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetActions200ResponseActionsInnerSecretsInner struct {
	value *GetActions200ResponseActionsInnerSecretsInner
	isSet bool
}

func (v NullableGetActions200ResponseActionsInnerSecretsInner) Get() *GetActions200ResponseActionsInnerSecretsInner {
	return v.value
}

func (v *NullableGetActions200ResponseActionsInnerSecretsInner) Set(val *GetActions200ResponseActionsInnerSecretsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetActions200ResponseActionsInnerSecretsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetActions200ResponseActionsInnerSecretsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetActions200ResponseActionsInnerSecretsInner(val *GetActions200ResponseActionsInnerSecretsInner) *NullableGetActions200ResponseActionsInnerSecretsInner {
	return &NullableGetActions200ResponseActionsInnerSecretsInner{value: val, isSet: true}
}

func (v NullableGetActions200ResponseActionsInnerSecretsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetActions200ResponseActionsInnerSecretsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
