/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// ClientGrantCreate struct for ClientGrantCreate
type ClientGrantCreate struct {
	// ID of the client.
	ClientId string `json:"client_id"`
	// The audience (API identifier) of this client grant
	Audience          string                              `json:"audience"`
	OrganizationUsage *ClientGrantCreateOrganizationUsage `json:"organization_usage,omitempty"`
	// If enabled, any organization can be used with this grant. If disabled (default), the grant must be explicitly assigned to the desired organizations.
	AllowAnyOrganization *bool `json:"allow_any_organization,omitempty"`
	// Scopes allowed for this client grant.
	Scope []string `json:"scope"`
}

type _ClientGrantCreate ClientGrantCreate

// GetClientId returns the ClientId field value
func (o *ClientGrantCreate) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *ClientGrantCreate) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *ClientGrantCreate) SetClientId(v string) {
	o.ClientId = v
}

// GetAudience returns the Audience field value
func (o *ClientGrantCreate) GetAudience() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value
// and a boolean to check if the value has been set.
func (o *ClientGrantCreate) GetAudienceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Audience, true
}

// SetAudience sets field value
func (o *ClientGrantCreate) SetAudience(v string) {
	o.Audience = v
}

// GetOrganizationUsage returns the OrganizationUsage field value if set, zero value otherwise.
func (o *ClientGrantCreate) GetOrganizationUsage() ClientGrantCreateOrganizationUsage {
	if o == nil || IsNil(o.OrganizationUsage) {
		var ret ClientGrantCreateOrganizationUsage
		return ret
	}
	return *o.OrganizationUsage
}

// GetOrganizationUsageOk returns a tuple with the OrganizationUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGrantCreate) GetOrganizationUsageOk() (*ClientGrantCreateOrganizationUsage, bool) {
	if o == nil || IsNil(o.OrganizationUsage) {
		return nil, false
	}
	return o.OrganizationUsage, true
}

// HasOrganizationUsage returns a boolean if a field has been set.
func (o *ClientGrantCreate) HasOrganizationUsage() bool {
	if o != nil && !IsNil(o.OrganizationUsage) {
		return true
	}

	return false
}

// SetOrganizationUsage gets a reference to the given ClientGrantCreateOrganizationUsage and assigns it to the OrganizationUsage field.
func (o *ClientGrantCreate) SetOrganizationUsage(v ClientGrantCreateOrganizationUsage) {
	o.OrganizationUsage = &v
}

// GetAllowAnyOrganization returns the AllowAnyOrganization field value if set, zero value otherwise.
func (o *ClientGrantCreate) GetAllowAnyOrganization() bool {
	if o == nil || IsNil(o.AllowAnyOrganization) {
		var ret bool
		return ret
	}
	return *o.AllowAnyOrganization
}

// GetAllowAnyOrganizationOk returns a tuple with the AllowAnyOrganization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientGrantCreate) GetAllowAnyOrganizationOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowAnyOrganization) {
		return nil, false
	}
	return o.AllowAnyOrganization, true
}

// HasAllowAnyOrganization returns a boolean if a field has been set.
func (o *ClientGrantCreate) HasAllowAnyOrganization() bool {
	if o != nil && !IsNil(o.AllowAnyOrganization) {
		return true
	}

	return false
}

// SetAllowAnyOrganization gets a reference to the given bool and assigns it to the AllowAnyOrganization field.
func (o *ClientGrantCreate) SetAllowAnyOrganization(v bool) {
	o.AllowAnyOrganization = &v
}

// GetScope returns the Scope field value
func (o *ClientGrantCreate) GetScope() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *ClientGrantCreate) GetScopeOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scope, true
}

// SetScope sets field value
func (o *ClientGrantCreate) SetScope(v []string) {
	o.Scope = v
}

func (o ClientGrantCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientGrantCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["client_id"] = o.ClientId
	toSerialize["audience"] = o.Audience
	if !IsNil(o.OrganizationUsage) {
		toSerialize["organization_usage"] = o.OrganizationUsage
	}
	if !IsNil(o.AllowAnyOrganization) {
		toSerialize["allow_any_organization"] = o.AllowAnyOrganization
	}
	toSerialize["scope"] = o.Scope
	return toSerialize, nil
}

func (o *ClientGrantCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"client_id",
		"audience",
		"scope",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClientGrantCreate := _ClientGrantCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varClientGrantCreate)

	if err != nil {
		return err
	}

	*o = ClientGrantCreate(varClientGrantCreate)

	return err
}

type NullableClientGrantCreate struct {
	value *ClientGrantCreate
	isSet bool
}

func (v NullableClientGrantCreate) Get() *ClientGrantCreate {
	return v.value
}

func (v *NullableClientGrantCreate) Set(val *ClientGrantCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableClientGrantCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableClientGrantCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientGrantCreate(val *ClientGrantCreate) *NullableClientGrantCreate {
	return &NullableClientGrantCreate{value: val, isSet: true}
}

func (v NullableClientGrantCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientGrantCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
