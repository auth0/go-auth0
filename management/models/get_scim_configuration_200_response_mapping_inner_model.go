/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GetScimConfiguration200ResponseMappingInner struct for GetScimConfiguration200ResponseMappingInner
type GetScimConfiguration200ResponseMappingInner struct {
	// The field location in the auth0 schema
	Auth0 *string `json:"auth0,omitempty"`
	// The field location in the SCIM schema
	Scim                 *string `json:"scim,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetScimConfiguration200ResponseMappingInner GetScimConfiguration200ResponseMappingInner

// GetAuth0 returns the Auth0 field value if set, zero value otherwise.
func (o *GetScimConfiguration200ResponseMappingInner) GetAuth0() string {
	if o == nil || IsNil(o.Auth0) {
		var ret string
		return ret
	}
	return *o.Auth0
}

// GetAuth0Ok returns a tuple with the Auth0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScimConfiguration200ResponseMappingInner) GetAuth0Ok() (*string, bool) {
	if o == nil || IsNil(o.Auth0) {
		return nil, false
	}
	return o.Auth0, true
}

// HasAuth0 returns a boolean if a field has been set.
func (o *GetScimConfiguration200ResponseMappingInner) HasAuth0() bool {
	if o != nil && !IsNil(o.Auth0) {
		return true
	}

	return false
}

// SetAuth0 gets a reference to the given string and assigns it to the Auth0 field.
func (o *GetScimConfiguration200ResponseMappingInner) SetAuth0(v string) {
	o.Auth0 = &v
}

// GetScim returns the Scim field value if set, zero value otherwise.
func (o *GetScimConfiguration200ResponseMappingInner) GetScim() string {
	if o == nil || IsNil(o.Scim) {
		var ret string
		return ret
	}
	return *o.Scim
}

// GetScimOk returns a tuple with the Scim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScimConfiguration200ResponseMappingInner) GetScimOk() (*string, bool) {
	if o == nil || IsNil(o.Scim) {
		return nil, false
	}
	return o.Scim, true
}

// HasScim returns a boolean if a field has been set.
func (o *GetScimConfiguration200ResponseMappingInner) HasScim() bool {
	if o != nil && !IsNil(o.Scim) {
		return true
	}

	return false
}

// SetScim gets a reference to the given string and assigns it to the Scim field.
func (o *GetScimConfiguration200ResponseMappingInner) SetScim(v string) {
	o.Scim = &v
}

func (o GetScimConfiguration200ResponseMappingInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetScimConfiguration200ResponseMappingInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Auth0) {
		toSerialize["auth0"] = o.Auth0
	}
	if !IsNil(o.Scim) {
		toSerialize["scim"] = o.Scim
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetScimConfiguration200ResponseMappingInner) UnmarshalJSON(data []byte) (err error) {
	varGetScimConfiguration200ResponseMappingInner := _GetScimConfiguration200ResponseMappingInner{}

	err = json.Unmarshal(data, &varGetScimConfiguration200ResponseMappingInner)

	if err != nil {
		return err
	}

	*o = GetScimConfiguration200ResponseMappingInner(varGetScimConfiguration200ResponseMappingInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "auth0")
		delete(additionalProperties, "scim")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetScimConfiguration200ResponseMappingInner struct {
	value *GetScimConfiguration200ResponseMappingInner
	isSet bool
}

func (v NullableGetScimConfiguration200ResponseMappingInner) Get() *GetScimConfiguration200ResponseMappingInner {
	return v.value
}

func (v *NullableGetScimConfiguration200ResponseMappingInner) Set(val *GetScimConfiguration200ResponseMappingInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetScimConfiguration200ResponseMappingInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetScimConfiguration200ResponseMappingInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetScimConfiguration200ResponseMappingInner(val *GetScimConfiguration200ResponseMappingInner) *NullableGetScimConfiguration200ResponseMappingInner {
	return &NullableGetScimConfiguration200ResponseMappingInner{value: val, isSet: true}
}

func (v NullableGetScimConfiguration200ResponseMappingInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetScimConfiguration200ResponseMappingInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
