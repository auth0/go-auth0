/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ClientRefreshTokenRotationType Refresh token rotation types, one of: rotating, non-rotating
type ClientRefreshTokenRotationType string

// List of client_refresh_token_rotation_type
const (
	CLIENTREFRESHTOKENROTATIONTYPE_ROTATING     ClientRefreshTokenRotationType = "rotating"
	CLIENTREFRESHTOKENROTATIONTYPE_NON_ROTATING ClientRefreshTokenRotationType = "non-rotating"
)

// All allowed values of ClientRefreshTokenRotationType enum
var AllowedClientRefreshTokenRotationTypeEnumValues = []ClientRefreshTokenRotationType{
	"rotating",
	"non-rotating",
}

func (v *ClientRefreshTokenRotationType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ClientRefreshTokenRotationType(value)
	for _, existing := range AllowedClientRefreshTokenRotationTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ClientRefreshTokenRotationType", value)
}

// NewClientRefreshTokenRotationTypeFromValue returns a pointer to a valid ClientRefreshTokenRotationType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewClientRefreshTokenRotationTypeFromValue(v string) (*ClientRefreshTokenRotationType, error) {
	ev := ClientRefreshTokenRotationType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ClientRefreshTokenRotationType: valid values are %v", v, AllowedClientRefreshTokenRotationTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ClientRefreshTokenRotationType) IsValid() bool {
	for _, existing := range AllowedClientRefreshTokenRotationTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to client_refresh_token_rotation_type value
func (v ClientRefreshTokenRotationType) Ptr() *ClientRefreshTokenRotationType {
	return &v
}

type NullableClientRefreshTokenRotationType struct {
	value *ClientRefreshTokenRotationType
	isSet bool
}

func (v NullableClientRefreshTokenRotationType) Get() *ClientRefreshTokenRotationType {
	return v.value
}

func (v *NullableClientRefreshTokenRotationType) Set(val *ClientRefreshTokenRotationType) {
	v.value = val
	v.isSet = true
}

func (v NullableClientRefreshTokenRotationType) IsSet() bool {
	return v.isSet
}

func (v *NullableClientRefreshTokenRotationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientRefreshTokenRotationType(val *ClientRefreshTokenRotationType) *NullableClientRefreshTokenRotationType {
	return &NullableClientRefreshTokenRotationType{value: val, isSet: true}
}

func (v NullableClientRefreshTokenRotationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientRefreshTokenRotationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
