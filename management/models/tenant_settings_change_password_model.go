/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// TenantSettingsChangePassword Change Password page customization.
type TenantSettingsChangePassword struct {
	// Whether to use the custom change password HTML (true) or the default Auth0 page (false). Default is to use the Auth0 page.
	Enabled *bool `json:"enabled,omitempty"`
	// Custom change password HTML (<a href='https://github.com/Shopify/liquid/wiki/Liquid-for-Designers'>Liquid syntax</a> supported).
	Html *string `json:"html,omitempty"`
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *TenantSettingsChangePassword) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsChangePassword) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *TenantSettingsChangePassword) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *TenantSettingsChangePassword) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetHtml returns the Html field value if set, zero value otherwise.
func (o *TenantSettingsChangePassword) GetHtml() string {
	if o == nil || IsNil(o.Html) {
		var ret string
		return ret
	}
	return *o.Html
}

// GetHtmlOk returns a tuple with the Html field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsChangePassword) GetHtmlOk() (*string, bool) {
	if o == nil || IsNil(o.Html) {
		return nil, false
	}
	return o.Html, true
}

// HasHtml returns a boolean if a field has been set.
func (o *TenantSettingsChangePassword) HasHtml() bool {
	if o != nil && !IsNil(o.Html) {
		return true
	}

	return false
}

// SetHtml gets a reference to the given string and assigns it to the Html field.
func (o *TenantSettingsChangePassword) SetHtml(v string) {
	o.Html = &v
}

func (o TenantSettingsChangePassword) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantSettingsChangePassword) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Html) {
		toSerialize["html"] = o.Html
	}
	return toSerialize, nil
}

type NullableTenantSettingsChangePassword struct {
	value *TenantSettingsChangePassword
	isSet bool
}

func (v NullableTenantSettingsChangePassword) Get() *TenantSettingsChangePassword {
	return v.value
}

func (v *NullableTenantSettingsChangePassword) Set(val *TenantSettingsChangePassword) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantSettingsChangePassword) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantSettingsChangePassword) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantSettingsChangePassword(val *TenantSettingsChangePassword) *NullableTenantSettingsChangePassword {
	return &NullableTenantSettingsChangePassword{value: val, isSet: true}
}

func (v NullableTenantSettingsChangePassword) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantSettingsChangePassword) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
