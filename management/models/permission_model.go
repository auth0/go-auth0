/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// Permission struct for Permission
type Permission struct {
	// Resource server (API) identifier that this permission is for.
	ResourceServerIdentifier *string `json:"resource_server_identifier,omitempty"`
	// Name of this permission.
	PermissionName *string `json:"permission_name,omitempty"`
	// Resource server (API) name this permission is for.
	ResourceServerName *string `json:"resource_server_name,omitempty"`
	// Description of this permission.
	Description *string `json:"description,omitempty"`
}

// GetResourceServerIdentifier returns the ResourceServerIdentifier field value if set, zero value otherwise.
func (o *Permission) GetResourceServerIdentifier() string {
	if o == nil || IsNil(o.ResourceServerIdentifier) {
		var ret string
		return ret
	}
	return *o.ResourceServerIdentifier
}

// GetResourceServerIdentifierOk returns a tuple with the ResourceServerIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Permission) GetResourceServerIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceServerIdentifier) {
		return nil, false
	}
	return o.ResourceServerIdentifier, true
}

// HasResourceServerIdentifier returns a boolean if a field has been set.
func (o *Permission) HasResourceServerIdentifier() bool {
	if o != nil && !IsNil(o.ResourceServerIdentifier) {
		return true
	}

	return false
}

// SetResourceServerIdentifier gets a reference to the given string and assigns it to the ResourceServerIdentifier field.
func (o *Permission) SetResourceServerIdentifier(v string) {
	o.ResourceServerIdentifier = &v
}

// GetPermissionName returns the PermissionName field value if set, zero value otherwise.
func (o *Permission) GetPermissionName() string {
	if o == nil || IsNil(o.PermissionName) {
		var ret string
		return ret
	}
	return *o.PermissionName
}

// GetPermissionNameOk returns a tuple with the PermissionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Permission) GetPermissionNameOk() (*string, bool) {
	if o == nil || IsNil(o.PermissionName) {
		return nil, false
	}
	return o.PermissionName, true
}

// HasPermissionName returns a boolean if a field has been set.
func (o *Permission) HasPermissionName() bool {
	if o != nil && !IsNil(o.PermissionName) {
		return true
	}

	return false
}

// SetPermissionName gets a reference to the given string and assigns it to the PermissionName field.
func (o *Permission) SetPermissionName(v string) {
	o.PermissionName = &v
}

// GetResourceServerName returns the ResourceServerName field value if set, zero value otherwise.
func (o *Permission) GetResourceServerName() string {
	if o == nil || IsNil(o.ResourceServerName) {
		var ret string
		return ret
	}
	return *o.ResourceServerName
}

// GetResourceServerNameOk returns a tuple with the ResourceServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Permission) GetResourceServerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceServerName) {
		return nil, false
	}
	return o.ResourceServerName, true
}

// HasResourceServerName returns a boolean if a field has been set.
func (o *Permission) HasResourceServerName() bool {
	if o != nil && !IsNil(o.ResourceServerName) {
		return true
	}

	return false
}

// SetResourceServerName gets a reference to the given string and assigns it to the ResourceServerName field.
func (o *Permission) SetResourceServerName(v string) {
	o.ResourceServerName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Permission) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Permission) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Permission) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Permission) SetDescription(v string) {
	o.Description = &v
}

func (o Permission) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Permission) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ResourceServerIdentifier) {
		toSerialize["resource_server_identifier"] = o.ResourceServerIdentifier
	}
	if !IsNil(o.PermissionName) {
		toSerialize["permission_name"] = o.PermissionName
	}
	if !IsNil(o.ResourceServerName) {
		toSerialize["resource_server_name"] = o.ResourceServerName
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullablePermission struct {
	value *Permission
	isSet bool
}

func (v NullablePermission) Get() *Permission {
	return v.value
}

func (v *NullablePermission) Set(val *Permission) {
	v.value = val
	v.isSet = true
}

func (v NullablePermission) IsSet() bool {
	return v.isSet
}

func (v *NullablePermission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermission(val *Permission) *NullablePermission {
	return &NullablePermission{value: val, isSet: true}
}

func (v NullablePermission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
