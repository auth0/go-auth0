/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ConnectionCreateStrategy The identity provider identifier for the connection
type ConnectionCreateStrategy string

// List of connectionCreate_strategy
const (
	CONNECTIONCREATESTRATEGY_AD                   ConnectionCreateStrategy = "ad"
	CONNECTIONCREATESTRATEGY_ADFS                 ConnectionCreateStrategy = "adfs"
	CONNECTIONCREATESTRATEGY_AMAZON               ConnectionCreateStrategy = "amazon"
	CONNECTIONCREATESTRATEGY_APPLE                ConnectionCreateStrategy = "apple"
	CONNECTIONCREATESTRATEGY_DROPBOX              ConnectionCreateStrategy = "dropbox"
	CONNECTIONCREATESTRATEGY_BITBUCKET            ConnectionCreateStrategy = "bitbucket"
	CONNECTIONCREATESTRATEGY_AOL                  ConnectionCreateStrategy = "aol"
	CONNECTIONCREATESTRATEGY_AUTH0_OIDC           ConnectionCreateStrategy = "auth0-oidc"
	CONNECTIONCREATESTRATEGY_AUTH0                ConnectionCreateStrategy = "auth0"
	CONNECTIONCREATESTRATEGY_BAIDU                ConnectionCreateStrategy = "baidu"
	CONNECTIONCREATESTRATEGY_BITLY                ConnectionCreateStrategy = "bitly"
	CONNECTIONCREATESTRATEGY_BOX                  ConnectionCreateStrategy = "box"
	CONNECTIONCREATESTRATEGY_CUSTOM               ConnectionCreateStrategy = "custom"
	CONNECTIONCREATESTRATEGY_DACCOUNT             ConnectionCreateStrategy = "daccount"
	CONNECTIONCREATESTRATEGY_DWOLLA               ConnectionCreateStrategy = "dwolla"
	CONNECTIONCREATESTRATEGY_EMAIL                ConnectionCreateStrategy = "email"
	CONNECTIONCREATESTRATEGY_EVERNOTE_SANDBOX     ConnectionCreateStrategy = "evernote-sandbox"
	CONNECTIONCREATESTRATEGY_EVERNOTE             ConnectionCreateStrategy = "evernote"
	CONNECTIONCREATESTRATEGY_EXACT                ConnectionCreateStrategy = "exact"
	CONNECTIONCREATESTRATEGY_FACEBOOK             ConnectionCreateStrategy = "facebook"
	CONNECTIONCREATESTRATEGY_FITBIT               ConnectionCreateStrategy = "fitbit"
	CONNECTIONCREATESTRATEGY_FLICKR               ConnectionCreateStrategy = "flickr"
	CONNECTIONCREATESTRATEGY_GITHUB               ConnectionCreateStrategy = "github"
	CONNECTIONCREATESTRATEGY_GOOGLE_APPS          ConnectionCreateStrategy = "google-apps"
	CONNECTIONCREATESTRATEGY_GOOGLE_OAUTH2        ConnectionCreateStrategy = "google-oauth2"
	CONNECTIONCREATESTRATEGY_INSTAGRAM            ConnectionCreateStrategy = "instagram"
	CONNECTIONCREATESTRATEGY_IP                   ConnectionCreateStrategy = "ip"
	CONNECTIONCREATESTRATEGY_LINE                 ConnectionCreateStrategy = "line"
	CONNECTIONCREATESTRATEGY_LINKEDIN             ConnectionCreateStrategy = "linkedin"
	CONNECTIONCREATESTRATEGY_MIICARD              ConnectionCreateStrategy = "miicard"
	CONNECTIONCREATESTRATEGY_OAUTH1               ConnectionCreateStrategy = "oauth1"
	CONNECTIONCREATESTRATEGY_OAUTH2               ConnectionCreateStrategy = "oauth2"
	CONNECTIONCREATESTRATEGY_OFFICE365            ConnectionCreateStrategy = "office365"
	CONNECTIONCREATESTRATEGY_OIDC                 ConnectionCreateStrategy = "oidc"
	CONNECTIONCREATESTRATEGY_OKTA                 ConnectionCreateStrategy = "okta"
	CONNECTIONCREATESTRATEGY_PAYPAL               ConnectionCreateStrategy = "paypal"
	CONNECTIONCREATESTRATEGY_PAYPAL_SANDBOX       ConnectionCreateStrategy = "paypal-sandbox"
	CONNECTIONCREATESTRATEGY_PINGFEDERATE         ConnectionCreateStrategy = "pingfederate"
	CONNECTIONCREATESTRATEGY_PLANNINGCENTER       ConnectionCreateStrategy = "planningcenter"
	CONNECTIONCREATESTRATEGY_RENREN               ConnectionCreateStrategy = "renren"
	CONNECTIONCREATESTRATEGY_SALESFORCE_COMMUNITY ConnectionCreateStrategy = "salesforce-community"
	CONNECTIONCREATESTRATEGY_SALESFORCE_SANDBOX   ConnectionCreateStrategy = "salesforce-sandbox"
	CONNECTIONCREATESTRATEGY_SALESFORCE           ConnectionCreateStrategy = "salesforce"
	CONNECTIONCREATESTRATEGY_SAMLP                ConnectionCreateStrategy = "samlp"
	CONNECTIONCREATESTRATEGY_SHAREPOINT           ConnectionCreateStrategy = "sharepoint"
	CONNECTIONCREATESTRATEGY_SHOPIFY              ConnectionCreateStrategy = "shopify"
	CONNECTIONCREATESTRATEGY_SMS                  ConnectionCreateStrategy = "sms"
	CONNECTIONCREATESTRATEGY_SOUNDCLOUD           ConnectionCreateStrategy = "soundcloud"
	CONNECTIONCREATESTRATEGY_THECITY_SANDBOX      ConnectionCreateStrategy = "thecity-sandbox"
	CONNECTIONCREATESTRATEGY_THECITY              ConnectionCreateStrategy = "thecity"
	CONNECTIONCREATESTRATEGY_THIRTYSEVENSIGNALS   ConnectionCreateStrategy = "thirtysevensignals"
	CONNECTIONCREATESTRATEGY_TWITTER              ConnectionCreateStrategy = "twitter"
	CONNECTIONCREATESTRATEGY_UNTAPPD              ConnectionCreateStrategy = "untappd"
	CONNECTIONCREATESTRATEGY_VKONTAKTE            ConnectionCreateStrategy = "vkontakte"
	CONNECTIONCREATESTRATEGY_WAAD                 ConnectionCreateStrategy = "waad"
	CONNECTIONCREATESTRATEGY_WEIBO                ConnectionCreateStrategy = "weibo"
	CONNECTIONCREATESTRATEGY_WINDOWSLIVE          ConnectionCreateStrategy = "windowslive"
	CONNECTIONCREATESTRATEGY_WORDPRESS            ConnectionCreateStrategy = "wordpress"
	CONNECTIONCREATESTRATEGY_YAHOO                ConnectionCreateStrategy = "yahoo"
	CONNECTIONCREATESTRATEGY_YAMMER               ConnectionCreateStrategy = "yammer"
	CONNECTIONCREATESTRATEGY_YANDEX               ConnectionCreateStrategy = "yandex"
)

// All allowed values of ConnectionCreateStrategy enum
var AllowedConnectionCreateStrategyEnumValues = []ConnectionCreateStrategy{
	"ad",
	"adfs",
	"amazon",
	"apple",
	"dropbox",
	"bitbucket",
	"aol",
	"auth0-oidc",
	"auth0",
	"baidu",
	"bitly",
	"box",
	"custom",
	"daccount",
	"dwolla",
	"email",
	"evernote-sandbox",
	"evernote",
	"exact",
	"facebook",
	"fitbit",
	"flickr",
	"github",
	"google-apps",
	"google-oauth2",
	"instagram",
	"ip",
	"line",
	"linkedin",
	"miicard",
	"oauth1",
	"oauth2",
	"office365",
	"oidc",
	"okta",
	"paypal",
	"paypal-sandbox",
	"pingfederate",
	"planningcenter",
	"renren",
	"salesforce-community",
	"salesforce-sandbox",
	"salesforce",
	"samlp",
	"sharepoint",
	"shopify",
	"sms",
	"soundcloud",
	"thecity-sandbox",
	"thecity",
	"thirtysevensignals",
	"twitter",
	"untappd",
	"vkontakte",
	"waad",
	"weibo",
	"windowslive",
	"wordpress",
	"yahoo",
	"yammer",
	"yandex",
}

func (v *ConnectionCreateStrategy) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ConnectionCreateStrategy(value)
	for _, existing := range AllowedConnectionCreateStrategyEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ConnectionCreateStrategy", value)
}

// NewConnectionCreateStrategyFromValue returns a pointer to a valid ConnectionCreateStrategy
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewConnectionCreateStrategyFromValue(v string) (*ConnectionCreateStrategy, error) {
	ev := ConnectionCreateStrategy(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ConnectionCreateStrategy: valid values are %v", v, AllowedConnectionCreateStrategyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ConnectionCreateStrategy) IsValid() bool {
	for _, existing := range AllowedConnectionCreateStrategyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to connectionCreate_strategy value
func (v ConnectionCreateStrategy) Ptr() *ConnectionCreateStrategy {
	return &v
}

type NullableConnectionCreateStrategy struct {
	value *ConnectionCreateStrategy
	isSet bool
}

func (v NullableConnectionCreateStrategy) Get() *ConnectionCreateStrategy {
	return v.value
}

func (v *NullableConnectionCreateStrategy) Set(val *ConnectionCreateStrategy) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionCreateStrategy) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionCreateStrategy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionCreateStrategy(val *ConnectionCreateStrategy) *NullableConnectionCreateStrategy {
	return &NullableConnectionCreateStrategy{value: val, isSet: true}
}

func (v NullableConnectionCreateStrategy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionCreateStrategy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
