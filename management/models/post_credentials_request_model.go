/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PostCredentialsRequest struct for PostCredentialsRequest
type PostCredentialsRequest struct {
	CredentialType PostCredentialsRequestCredentialType `json:"credential_type"`
	// Friendly name for a credential.
	Name                 *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PostCredentialsRequest PostCredentialsRequest

// GetCredentialType returns the CredentialType field value
func (o *PostCredentialsRequest) GetCredentialType() PostCredentialsRequestCredentialType {
	if o == nil {
		var ret PostCredentialsRequestCredentialType
		return ret
	}

	return o.CredentialType
}

// GetCredentialTypeOk returns a tuple with the CredentialType field value
// and a boolean to check if the value has been set.
func (o *PostCredentialsRequest) GetCredentialTypeOk() (*PostCredentialsRequestCredentialType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CredentialType, true
}

// SetCredentialType sets field value
func (o *PostCredentialsRequest) SetCredentialType(v PostCredentialsRequestCredentialType) {
	o.CredentialType = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PostCredentialsRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCredentialsRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PostCredentialsRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PostCredentialsRequest) SetName(v string) {
	o.Name = &v
}

func (o PostCredentialsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostCredentialsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["credential_type"] = o.CredentialType
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PostCredentialsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"credential_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostCredentialsRequest := _PostCredentialsRequest{}

	err = json.Unmarshal(data, &varPostCredentialsRequest)

	if err != nil {
		return err
	}

	*o = PostCredentialsRequest(varPostCredentialsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "credential_type")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePostCredentialsRequest struct {
	value *PostCredentialsRequest
	isSet bool
}

func (v NullablePostCredentialsRequest) Get() *PostCredentialsRequest {
	return v.value
}

func (v *NullablePostCredentialsRequest) Set(val *PostCredentialsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostCredentialsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostCredentialsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostCredentialsRequest(val *PostCredentialsRequest) *NullablePostCredentialsRequest {
	return &NullablePostCredentialsRequest{value: val, isSet: true}
}

func (v NullablePostCredentialsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostCredentialsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
