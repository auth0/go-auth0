/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// PostOrganizationsRequest struct for PostOrganizationsRequest
type PostOrganizationsRequest struct {
	// The name of this organization.
	Name string `json:"name"`
	// Friendly name of this organization.
	DisplayName *string                                        `json:"display_name,omitempty"`
	Branding    *GetOrganizations200ResponseOneOfInnerBranding `json:"branding,omitempty"`
	// Metadata associated with the organization, in the form of an object with string values (max 255 chars). Maximum of 25 metadata properties allowed.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Connections that will be enabled for this organization. See POST enabled_connections endpoint for the object format. (Max of 10 connections allowed)
	EnabledConnections []PostOrganizationsRequestEnabledConnectionsInner `json:"enabled_connections,omitempty"`
}

type _PostOrganizationsRequest PostOrganizationsRequest

// GetName returns the Name field value
func (o *PostOrganizationsRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PostOrganizationsRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PostOrganizationsRequest) SetName(v string) {
	o.Name = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *PostOrganizationsRequest) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostOrganizationsRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *PostOrganizationsRequest) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *PostOrganizationsRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetBranding returns the Branding field value if set, zero value otherwise.
func (o *PostOrganizationsRequest) GetBranding() GetOrganizations200ResponseOneOfInnerBranding {
	if o == nil || IsNil(o.Branding) {
		var ret GetOrganizations200ResponseOneOfInnerBranding
		return ret
	}
	return *o.Branding
}

// GetBrandingOk returns a tuple with the Branding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostOrganizationsRequest) GetBrandingOk() (*GetOrganizations200ResponseOneOfInnerBranding, bool) {
	if o == nil || IsNil(o.Branding) {
		return nil, false
	}
	return o.Branding, true
}

// HasBranding returns a boolean if a field has been set.
func (o *PostOrganizationsRequest) HasBranding() bool {
	if o != nil && !IsNil(o.Branding) {
		return true
	}

	return false
}

// SetBranding gets a reference to the given GetOrganizations200ResponseOneOfInnerBranding and assigns it to the Branding field.
func (o *PostOrganizationsRequest) SetBranding(v GetOrganizations200ResponseOneOfInnerBranding) {
	o.Branding = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *PostOrganizationsRequest) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostOrganizationsRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PostOrganizationsRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *PostOrganizationsRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetEnabledConnections returns the EnabledConnections field value if set, zero value otherwise.
func (o *PostOrganizationsRequest) GetEnabledConnections() []PostOrganizationsRequestEnabledConnectionsInner {
	if o == nil || IsNil(o.EnabledConnections) {
		var ret []PostOrganizationsRequestEnabledConnectionsInner
		return ret
	}
	return o.EnabledConnections
}

// GetEnabledConnectionsOk returns a tuple with the EnabledConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostOrganizationsRequest) GetEnabledConnectionsOk() ([]PostOrganizationsRequestEnabledConnectionsInner, bool) {
	if o == nil || IsNil(o.EnabledConnections) {
		return nil, false
	}
	return o.EnabledConnections, true
}

// HasEnabledConnections returns a boolean if a field has been set.
func (o *PostOrganizationsRequest) HasEnabledConnections() bool {
	if o != nil && !IsNil(o.EnabledConnections) {
		return true
	}

	return false
}

// SetEnabledConnections gets a reference to the given []PostOrganizationsRequestEnabledConnectionsInner and assigns it to the EnabledConnections field.
func (o *PostOrganizationsRequest) SetEnabledConnections(v []PostOrganizationsRequestEnabledConnectionsInner) {
	o.EnabledConnections = v
}

func (o PostOrganizationsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostOrganizationsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.Branding) {
		toSerialize["branding"] = o.Branding
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.EnabledConnections) {
		toSerialize["enabled_connections"] = o.EnabledConnections
	}
	return toSerialize, nil
}

func (o *PostOrganizationsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostOrganizationsRequest := _PostOrganizationsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varPostOrganizationsRequest)

	if err != nil {
		return err
	}

	*o = PostOrganizationsRequest(varPostOrganizationsRequest)

	return err
}

type NullablePostOrganizationsRequest struct {
	value *PostOrganizationsRequest
	isSet bool
}

func (v NullablePostOrganizationsRequest) Get() *PostOrganizationsRequest {
	return v.value
}

func (v *NullablePostOrganizationsRequest) Set(val *PostOrganizationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostOrganizationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostOrganizationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostOrganizationsRequest(val *PostOrganizationsRequest) *NullablePostOrganizationsRequest {
	return &NullablePostOrganizationsRequest{value: val, isSet: true}
}

func (v NullablePostOrganizationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostOrganizationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
