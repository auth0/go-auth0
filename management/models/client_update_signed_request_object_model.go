/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientUpdateSignedRequestObject JWT-secured Authorization Requests (JAR) settings.
type ClientUpdateSignedRequestObject struct {
	// Indicates whether the JAR requests are mandatory
	Required    *bool                                                            `json:"required,omitempty"`
	Credentials []ClientClientAuthenticationMethodsPrivateKeyJwtCredentialsInner `json:"credentials,omitempty"`
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *ClientUpdateSignedRequestObject) GetRequired() bool {
	if o == nil || IsNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateSignedRequestObject) GetRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *ClientUpdateSignedRequestObject) HasRequired() bool {
	if o != nil && !IsNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *ClientUpdateSignedRequestObject) SetRequired(v bool) {
	o.Required = &v
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *ClientUpdateSignedRequestObject) GetCredentials() []ClientClientAuthenticationMethodsPrivateKeyJwtCredentialsInner {
	if o == nil || IsNil(o.Credentials) {
		var ret []ClientClientAuthenticationMethodsPrivateKeyJwtCredentialsInner
		return ret
	}
	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateSignedRequestObject) GetCredentialsOk() ([]ClientClientAuthenticationMethodsPrivateKeyJwtCredentialsInner, bool) {
	if o == nil || IsNil(o.Credentials) {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *ClientUpdateSignedRequestObject) HasCredentials() bool {
	if o != nil && !IsNil(o.Credentials) {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given []ClientClientAuthenticationMethodsPrivateKeyJwtCredentialsInner and assigns it to the Credentials field.
func (o *ClientUpdateSignedRequestObject) SetCredentials(v []ClientClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) {
	o.Credentials = v
}

func (o ClientUpdateSignedRequestObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientUpdateSignedRequestObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	if !IsNil(o.Credentials) {
		toSerialize["credentials"] = o.Credentials
	}
	return toSerialize, nil
}

type NullableClientUpdateSignedRequestObject struct {
	value *ClientUpdateSignedRequestObject
	isSet bool
}

func (v NullableClientUpdateSignedRequestObject) Get() *ClientUpdateSignedRequestObject {
	return v.value
}

func (v *NullableClientUpdateSignedRequestObject) Set(val *ClientUpdateSignedRequestObject) {
	v.value = val
	v.isSet = true
}

func (v NullableClientUpdateSignedRequestObject) IsSet() bool {
	return v.isSet
}

func (v *NullableClientUpdateSignedRequestObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientUpdateSignedRequestObject(val *ClientUpdateSignedRequestObject) *NullableClientUpdateSignedRequestObject {
	return &NullableClientUpdateSignedRequestObject{value: val, isSet: true}
}

func (v NullableClientUpdateSignedRequestObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientUpdateSignedRequestObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
