/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetLogStreams200ResponseInnerOneOfFiltersInnerName Category group name
type GetLogStreams200ResponseInnerOneOfFiltersInnerName string

// List of get_log_streams_200_response_inner_oneOf_filters_inner_name
const (
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_AUTH_ANCILLARY_FAIL         GetLogStreams200ResponseInnerOneOfFiltersInnerName = "auth.ancillary.fail"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_AUTH_ANCILLARY_SUCCESS      GetLogStreams200ResponseInnerOneOfFiltersInnerName = "auth.ancillary.success"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_AUTH_LOGIN_FAIL             GetLogStreams200ResponseInnerOneOfFiltersInnerName = "auth.login.fail"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_AUTH_LOGIN_NOTIFICATION     GetLogStreams200ResponseInnerOneOfFiltersInnerName = "auth.login.notification"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_AUTH_LOGIN_SUCCESS          GetLogStreams200ResponseInnerOneOfFiltersInnerName = "auth.login.success"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_AUTH_LOGOUT_FAIL            GetLogStreams200ResponseInnerOneOfFiltersInnerName = "auth.logout.fail"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_AUTH_LOGOUT_SUCCESS         GetLogStreams200ResponseInnerOneOfFiltersInnerName = "auth.logout.success"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_AUTH_SIGNUP_FAIL            GetLogStreams200ResponseInnerOneOfFiltersInnerName = "auth.signup.fail"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_AUTH_SIGNUP_SUCCESS         GetLogStreams200ResponseInnerOneOfFiltersInnerName = "auth.signup.success"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_AUTH_SILENT_AUTH_FAIL       GetLogStreams200ResponseInnerOneOfFiltersInnerName = "auth.silent_auth.fail"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_AUTH_SILENT_AUTH_SUCCESS    GetLogStreams200ResponseInnerOneOfFiltersInnerName = "auth.silent_auth.success"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_AUTH_TOKEN_EXCHANGE_FAIL    GetLogStreams200ResponseInnerOneOfFiltersInnerName = "auth.token_exchange.fail"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_AUTH_TOKEN_EXCHANGE_SUCCESS GetLogStreams200ResponseInnerOneOfFiltersInnerName = "auth.token_exchange.success"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_MANAGEMENT_FAIL             GetLogStreams200ResponseInnerOneOfFiltersInnerName = "management.fail"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_MANAGEMENT_SUCCESS          GetLogStreams200ResponseInnerOneOfFiltersInnerName = "management.success"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_SYSTEM_NOTIFICATION         GetLogStreams200ResponseInnerOneOfFiltersInnerName = "system.notification"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_USER_FAIL                   GetLogStreams200ResponseInnerOneOfFiltersInnerName = "user.fail"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_USER_NOTIFICATION           GetLogStreams200ResponseInnerOneOfFiltersInnerName = "user.notification"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_USER_SUCCESS                GetLogStreams200ResponseInnerOneOfFiltersInnerName = "user.success"
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERNAME_OTHER                       GetLogStreams200ResponseInnerOneOfFiltersInnerName = "other"
)

// All allowed values of GetLogStreams200ResponseInnerOneOfFiltersInnerName enum
var AllowedGetLogStreams200ResponseInnerOneOfFiltersInnerNameEnumValues = []GetLogStreams200ResponseInnerOneOfFiltersInnerName{
	"auth.ancillary.fail",
	"auth.ancillary.success",
	"auth.login.fail",
	"auth.login.notification",
	"auth.login.success",
	"auth.logout.fail",
	"auth.logout.success",
	"auth.signup.fail",
	"auth.signup.success",
	"auth.silent_auth.fail",
	"auth.silent_auth.success",
	"auth.token_exchange.fail",
	"auth.token_exchange.success",
	"management.fail",
	"management.success",
	"system.notification",
	"user.fail",
	"user.notification",
	"user.success",
	"other",
}

func (v *GetLogStreams200ResponseInnerOneOfFiltersInnerName) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetLogStreams200ResponseInnerOneOfFiltersInnerName(value)
	for _, existing := range AllowedGetLogStreams200ResponseInnerOneOfFiltersInnerNameEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetLogStreams200ResponseInnerOneOfFiltersInnerName", value)
}

// NewGetLogStreams200ResponseInnerOneOfFiltersInnerNameFromValue returns a pointer to a valid GetLogStreams200ResponseInnerOneOfFiltersInnerName
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetLogStreams200ResponseInnerOneOfFiltersInnerNameFromValue(v string) (*GetLogStreams200ResponseInnerOneOfFiltersInnerName, error) {
	ev := GetLogStreams200ResponseInnerOneOfFiltersInnerName(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetLogStreams200ResponseInnerOneOfFiltersInnerName: valid values are %v", v, AllowedGetLogStreams200ResponseInnerOneOfFiltersInnerNameEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetLogStreams200ResponseInnerOneOfFiltersInnerName) IsValid() bool {
	for _, existing := range AllowedGetLogStreams200ResponseInnerOneOfFiltersInnerNameEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to get_log_streams_200_response_inner_oneOf_filters_inner_name value
func (v GetLogStreams200ResponseInnerOneOfFiltersInnerName) Ptr() *GetLogStreams200ResponseInnerOneOfFiltersInnerName {
	return &v
}

type NullableGetLogStreams200ResponseInnerOneOfFiltersInnerName struct {
	value *GetLogStreams200ResponseInnerOneOfFiltersInnerName
	isSet bool
}

func (v NullableGetLogStreams200ResponseInnerOneOfFiltersInnerName) Get() *GetLogStreams200ResponseInnerOneOfFiltersInnerName {
	return v.value
}

func (v *NullableGetLogStreams200ResponseInnerOneOfFiltersInnerName) Set(val *GetLogStreams200ResponseInnerOneOfFiltersInnerName) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLogStreams200ResponseInnerOneOfFiltersInnerName) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLogStreams200ResponseInnerOneOfFiltersInnerName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLogStreams200ResponseInnerOneOfFiltersInnerName(val *GetLogStreams200ResponseInnerOneOfFiltersInnerName) *NullableGetLogStreams200ResponseInnerOneOfFiltersInnerName {
	return &NullableGetLogStreams200ResponseInnerOneOfFiltersInnerName{value: val, isSet: true}
}

func (v NullableGetLogStreams200ResponseInnerOneOfFiltersInnerName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLogStreams200ResponseInnerOneOfFiltersInnerName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
