/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PatchSuspiciousIpThrottlingRequest struct for PatchSuspiciousIpThrottlingRequest
type PatchSuspiciousIpThrottlingRequest struct {
	// Whether or not suspicious IP throttling attack protections are active.
	Enabled *bool `json:"enabled,omitempty"`
	// Action to take when a suspicious IP throttling threshold is violated.           Possible values: <code>block</code>, <code>admin_notification</code>.
	Shields []GetBreachedPasswordDetection200ResponseStagePreUserRegistrationShieldsInner `json:"shields,omitempty"`
	// List of trusted IP addresses that will not have attack protection enforced against them.
	Allowlist []GetBruteForceProtection200ResponseAllowlistInner `json:"allowlist,omitempty"`
	Stage     *GetSuspiciousIpThrottling200ResponseStage         `json:"stage,omitempty"`
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *PatchSuspiciousIpThrottlingRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchSuspiciousIpThrottlingRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *PatchSuspiciousIpThrottlingRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *PatchSuspiciousIpThrottlingRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetShields returns the Shields field value if set, zero value otherwise.
func (o *PatchSuspiciousIpThrottlingRequest) GetShields() []GetBreachedPasswordDetection200ResponseStagePreUserRegistrationShieldsInner {
	if o == nil || IsNil(o.Shields) {
		var ret []GetBreachedPasswordDetection200ResponseStagePreUserRegistrationShieldsInner
		return ret
	}
	return o.Shields
}

// GetShieldsOk returns a tuple with the Shields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchSuspiciousIpThrottlingRequest) GetShieldsOk() ([]GetBreachedPasswordDetection200ResponseStagePreUserRegistrationShieldsInner, bool) {
	if o == nil || IsNil(o.Shields) {
		return nil, false
	}
	return o.Shields, true
}

// HasShields returns a boolean if a field has been set.
func (o *PatchSuspiciousIpThrottlingRequest) HasShields() bool {
	if o != nil && !IsNil(o.Shields) {
		return true
	}

	return false
}

// SetShields gets a reference to the given []GetBreachedPasswordDetection200ResponseStagePreUserRegistrationShieldsInner and assigns it to the Shields field.
func (o *PatchSuspiciousIpThrottlingRequest) SetShields(v []GetBreachedPasswordDetection200ResponseStagePreUserRegistrationShieldsInner) {
	o.Shields = v
}

// GetAllowlist returns the Allowlist field value if set, zero value otherwise.
func (o *PatchSuspiciousIpThrottlingRequest) GetAllowlist() []GetBruteForceProtection200ResponseAllowlistInner {
	if o == nil || IsNil(o.Allowlist) {
		var ret []GetBruteForceProtection200ResponseAllowlistInner
		return ret
	}
	return o.Allowlist
}

// GetAllowlistOk returns a tuple with the Allowlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchSuspiciousIpThrottlingRequest) GetAllowlistOk() ([]GetBruteForceProtection200ResponseAllowlistInner, bool) {
	if o == nil || IsNil(o.Allowlist) {
		return nil, false
	}
	return o.Allowlist, true
}

// HasAllowlist returns a boolean if a field has been set.
func (o *PatchSuspiciousIpThrottlingRequest) HasAllowlist() bool {
	if o != nil && !IsNil(o.Allowlist) {
		return true
	}

	return false
}

// SetAllowlist gets a reference to the given []GetBruteForceProtection200ResponseAllowlistInner and assigns it to the Allowlist field.
func (o *PatchSuspiciousIpThrottlingRequest) SetAllowlist(v []GetBruteForceProtection200ResponseAllowlistInner) {
	o.Allowlist = v
}

// GetStage returns the Stage field value if set, zero value otherwise.
func (o *PatchSuspiciousIpThrottlingRequest) GetStage() GetSuspiciousIpThrottling200ResponseStage {
	if o == nil || IsNil(o.Stage) {
		var ret GetSuspiciousIpThrottling200ResponseStage
		return ret
	}
	return *o.Stage
}

// GetStageOk returns a tuple with the Stage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchSuspiciousIpThrottlingRequest) GetStageOk() (*GetSuspiciousIpThrottling200ResponseStage, bool) {
	if o == nil || IsNil(o.Stage) {
		return nil, false
	}
	return o.Stage, true
}

// HasStage returns a boolean if a field has been set.
func (o *PatchSuspiciousIpThrottlingRequest) HasStage() bool {
	if o != nil && !IsNil(o.Stage) {
		return true
	}

	return false
}

// SetStage gets a reference to the given GetSuspiciousIpThrottling200ResponseStage and assigns it to the Stage field.
func (o *PatchSuspiciousIpThrottlingRequest) SetStage(v GetSuspiciousIpThrottling200ResponseStage) {
	o.Stage = &v
}

func (o PatchSuspiciousIpThrottlingRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchSuspiciousIpThrottlingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Shields) {
		toSerialize["shields"] = o.Shields
	}
	if !IsNil(o.Allowlist) {
		toSerialize["allowlist"] = o.Allowlist
	}
	if !IsNil(o.Stage) {
		toSerialize["stage"] = o.Stage
	}
	return toSerialize, nil
}

type NullablePatchSuspiciousIpThrottlingRequest struct {
	value *PatchSuspiciousIpThrottlingRequest
	isSet bool
}

func (v NullablePatchSuspiciousIpThrottlingRequest) Get() *PatchSuspiciousIpThrottlingRequest {
	return v.value
}

func (v *NullablePatchSuspiciousIpThrottlingRequest) Set(val *PatchSuspiciousIpThrottlingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchSuspiciousIpThrottlingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchSuspiciousIpThrottlingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchSuspiciousIpThrottlingRequest(val *PatchSuspiciousIpThrottlingRequest) *NullablePatchSuspiciousIpThrottlingRequest {
	return &NullablePatchSuspiciousIpThrottlingRequest{value: val, isSet: true}
}

func (v NullablePatchSuspiciousIpThrottlingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchSuspiciousIpThrottlingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
