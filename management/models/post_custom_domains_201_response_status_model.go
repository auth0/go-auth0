/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PostCustomDomains201ResponseStatus Custom domain configuration status. Can be `disabled`, `pending`, `pending_verification`, or `ready`.
type PostCustomDomains201ResponseStatus string

// List of post_custom_domains_201_response_status
const (
	POSTCUSTOMDOMAINS201RESPONSESTATUS_DISABLED             PostCustomDomains201ResponseStatus = "disabled"
	POSTCUSTOMDOMAINS201RESPONSESTATUS_PENDING              PostCustomDomains201ResponseStatus = "pending"
	POSTCUSTOMDOMAINS201RESPONSESTATUS_PENDING_VERIFICATION PostCustomDomains201ResponseStatus = "pending_verification"
	POSTCUSTOMDOMAINS201RESPONSESTATUS_READY                PostCustomDomains201ResponseStatus = "ready"
)

// All allowed values of PostCustomDomains201ResponseStatus enum
var AllowedPostCustomDomains201ResponseStatusEnumValues = []PostCustomDomains201ResponseStatus{
	"disabled",
	"pending",
	"pending_verification",
	"ready",
}

func (v *PostCustomDomains201ResponseStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PostCustomDomains201ResponseStatus(value)
	for _, existing := range AllowedPostCustomDomains201ResponseStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PostCustomDomains201ResponseStatus", value)
}

// NewPostCustomDomains201ResponseStatusFromValue returns a pointer to a valid PostCustomDomains201ResponseStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPostCustomDomains201ResponseStatusFromValue(v string) (*PostCustomDomains201ResponseStatus, error) {
	ev := PostCustomDomains201ResponseStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PostCustomDomains201ResponseStatus: valid values are %v", v, AllowedPostCustomDomains201ResponseStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PostCustomDomains201ResponseStatus) IsValid() bool {
	for _, existing := range AllowedPostCustomDomains201ResponseStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to post_custom_domains_201_response_status value
func (v PostCustomDomains201ResponseStatus) Ptr() *PostCustomDomains201ResponseStatus {
	return &v
}

type NullablePostCustomDomains201ResponseStatus struct {
	value *PostCustomDomains201ResponseStatus
	isSet bool
}

func (v NullablePostCustomDomains201ResponseStatus) Get() *PostCustomDomains201ResponseStatus {
	return v.value
}

func (v *NullablePostCustomDomains201ResponseStatus) Set(val *PostCustomDomains201ResponseStatus) {
	v.value = val
	v.isSet = true
}

func (v NullablePostCustomDomains201ResponseStatus) IsSet() bool {
	return v.isSet
}

func (v *NullablePostCustomDomains201ResponseStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostCustomDomains201ResponseStatus(val *PostCustomDomains201ResponseStatus) *NullablePostCustomDomains201ResponseStatus {
	return &NullablePostCustomDomains201ResponseStatus{value: val, isSet: true}
}

func (v NullablePostCustomDomains201ResponseStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostCustomDomains201ResponseStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
