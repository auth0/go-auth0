/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PostScimTokenRequest SCIM Token
type PostScimTokenRequest struct {
	// The scopes of the scim token
	Scopes []string `json:"scopes,omitempty"`
	// Lifetime of the token in seconds. Must be greater than 900
	TokenLifetime NullableInt32 `json:"token_lifetime,omitempty"`
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *PostScimTokenRequest) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostScimTokenRequest) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *PostScimTokenRequest) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *PostScimTokenRequest) SetScopes(v []string) {
	o.Scopes = v
}

// GetTokenLifetime returns the TokenLifetime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PostScimTokenRequest) GetTokenLifetime() int32 {
	if o == nil || IsNil(o.TokenLifetime.Get()) {
		var ret int32
		return ret
	}
	return *o.TokenLifetime.Get()
}

// GetTokenLifetimeOk returns a tuple with the TokenLifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PostScimTokenRequest) GetTokenLifetimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenLifetime.Get(), o.TokenLifetime.IsSet()
}

// HasTokenLifetime returns a boolean if a field has been set.
func (o *PostScimTokenRequest) HasTokenLifetime() bool {
	if o != nil && o.TokenLifetime.IsSet() {
		return true
	}

	return false
}

// SetTokenLifetime gets a reference to the given NullableInt32 and assigns it to the TokenLifetime field.
func (o *PostScimTokenRequest) SetTokenLifetime(v int32) {
	o.TokenLifetime.Set(&v)
}

// SetTokenLifetimeNil sets the value for TokenLifetime to be an explicit nil
func (o *PostScimTokenRequest) SetTokenLifetimeNil() {
	o.TokenLifetime.Set(nil)
}

// UnsetTokenLifetime ensures that no value is present for TokenLifetime, not even an explicit nil
func (o *PostScimTokenRequest) UnsetTokenLifetime() {
	o.TokenLifetime.Unset()
}

func (o PostScimTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostScimTokenRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	if o.TokenLifetime.IsSet() {
		toSerialize["token_lifetime"] = o.TokenLifetime.Get()
	}
	return toSerialize, nil
}

type NullablePostScimTokenRequest struct {
	value *PostScimTokenRequest
	isSet bool
}

func (v NullablePostScimTokenRequest) Get() *PostScimTokenRequest {
	return v.value
}

func (v *NullablePostScimTokenRequest) Set(val *PostScimTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostScimTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostScimTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostScimTokenRequest(val *PostScimTokenRequest) *NullablePostScimTokenRequest {
	return &NullablePostScimTokenRequest{value: val, isSet: true}
}

func (v NullablePostScimTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostScimTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
