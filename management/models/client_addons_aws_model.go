/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientAddonsAws AWS addon configuration.
type ClientAddonsAws struct {
	// AWS principal ARN, e.g. `arn:aws:iam::010616021751:saml-provider/idpname`
	Principal *string `json:"principal,omitempty"`
	// AWS role ARN, e.g. `arn:aws:iam::010616021751:role/foo`
	Role *string `json:"role,omitempty"`
	// AWS token lifetime in seconds
	LifetimeInSeconds    *int32 `json:"lifetime_in_seconds,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClientAddonsAws ClientAddonsAws

// GetPrincipal returns the Principal field value if set, zero value otherwise.
func (o *ClientAddonsAws) GetPrincipal() string {
	if o == nil || IsNil(o.Principal) {
		var ret string
		return ret
	}
	return *o.Principal
}

// GetPrincipalOk returns a tuple with the Principal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAddonsAws) GetPrincipalOk() (*string, bool) {
	if o == nil || IsNil(o.Principal) {
		return nil, false
	}
	return o.Principal, true
}

// HasPrincipal returns a boolean if a field has been set.
func (o *ClientAddonsAws) HasPrincipal() bool {
	if o != nil && !IsNil(o.Principal) {
		return true
	}

	return false
}

// SetPrincipal gets a reference to the given string and assigns it to the Principal field.
func (o *ClientAddonsAws) SetPrincipal(v string) {
	o.Principal = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *ClientAddonsAws) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAddonsAws) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *ClientAddonsAws) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *ClientAddonsAws) SetRole(v string) {
	o.Role = &v
}

// GetLifetimeInSeconds returns the LifetimeInSeconds field value if set, zero value otherwise.
func (o *ClientAddonsAws) GetLifetimeInSeconds() int32 {
	if o == nil || IsNil(o.LifetimeInSeconds) {
		var ret int32
		return ret
	}
	return *o.LifetimeInSeconds
}

// GetLifetimeInSecondsOk returns a tuple with the LifetimeInSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAddonsAws) GetLifetimeInSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.LifetimeInSeconds) {
		return nil, false
	}
	return o.LifetimeInSeconds, true
}

// HasLifetimeInSeconds returns a boolean if a field has been set.
func (o *ClientAddonsAws) HasLifetimeInSeconds() bool {
	if o != nil && !IsNil(o.LifetimeInSeconds) {
		return true
	}

	return false
}

// SetLifetimeInSeconds gets a reference to the given int32 and assigns it to the LifetimeInSeconds field.
func (o *ClientAddonsAws) SetLifetimeInSeconds(v int32) {
	o.LifetimeInSeconds = &v
}

func (o ClientAddonsAws) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientAddonsAws) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Principal) {
		toSerialize["principal"] = o.Principal
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.LifetimeInSeconds) {
		toSerialize["lifetime_in_seconds"] = o.LifetimeInSeconds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClientAddonsAws) UnmarshalJSON(data []byte) (err error) {
	varClientAddonsAws := _ClientAddonsAws{}

	err = json.Unmarshal(data, &varClientAddonsAws)

	if err != nil {
		return err
	}

	*o = ClientAddonsAws(varClientAddonsAws)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "principal")
		delete(additionalProperties, "role")
		delete(additionalProperties, "lifetime_in_seconds")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClientAddonsAws struct {
	value *ClientAddonsAws
	isSet bool
}

func (v NullableClientAddonsAws) Get() *ClientAddonsAws {
	return v.value
}

func (v *NullableClientAddonsAws) Set(val *ClientAddonsAws) {
	v.value = val
	v.isSet = true
}

func (v NullableClientAddonsAws) IsSet() bool {
	return v.isSet
}

func (v *NullableClientAddonsAws) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientAddonsAws(val *ClientAddonsAws) *NullableClientAddonsAws {
	return &NullableClientAddonsAws{value: val, isSet: true}
}

func (v NullableClientAddonsAws) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientAddonsAws) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
