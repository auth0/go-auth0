/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ConnectionCreateOptionsAttributesEmailSignupStatus the model 'ConnectionCreateOptionsAttributesEmailSignupStatus'
type ConnectionCreateOptionsAttributesEmailSignupStatus string

// List of connectionCreate_options_attributes_email_signup_status
const (
	CONNECTIONCREATEOPTIONSATTRIBUTESEMAILSIGNUPSTATUS_REQUIRED ConnectionCreateOptionsAttributesEmailSignupStatus = "required"
	CONNECTIONCREATEOPTIONSATTRIBUTESEMAILSIGNUPSTATUS_OPTIONAL ConnectionCreateOptionsAttributesEmailSignupStatus = "optional"
	CONNECTIONCREATEOPTIONSATTRIBUTESEMAILSIGNUPSTATUS_INACTIVE ConnectionCreateOptionsAttributesEmailSignupStatus = "inactive"
)

// All allowed values of ConnectionCreateOptionsAttributesEmailSignupStatus enum
var AllowedConnectionCreateOptionsAttributesEmailSignupStatusEnumValues = []ConnectionCreateOptionsAttributesEmailSignupStatus{
	"required",
	"optional",
	"inactive",
}

func (v *ConnectionCreateOptionsAttributesEmailSignupStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ConnectionCreateOptionsAttributesEmailSignupStatus(value)
	for _, existing := range AllowedConnectionCreateOptionsAttributesEmailSignupStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ConnectionCreateOptionsAttributesEmailSignupStatus", value)
}

// NewConnectionCreateOptionsAttributesEmailSignupStatusFromValue returns a pointer to a valid ConnectionCreateOptionsAttributesEmailSignupStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewConnectionCreateOptionsAttributesEmailSignupStatusFromValue(v string) (*ConnectionCreateOptionsAttributesEmailSignupStatus, error) {
	ev := ConnectionCreateOptionsAttributesEmailSignupStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ConnectionCreateOptionsAttributesEmailSignupStatus: valid values are %v", v, AllowedConnectionCreateOptionsAttributesEmailSignupStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ConnectionCreateOptionsAttributesEmailSignupStatus) IsValid() bool {
	for _, existing := range AllowedConnectionCreateOptionsAttributesEmailSignupStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to connectionCreate_options_attributes_email_signup_status value
func (v ConnectionCreateOptionsAttributesEmailSignupStatus) Ptr() *ConnectionCreateOptionsAttributesEmailSignupStatus {
	return &v
}

type NullableConnectionCreateOptionsAttributesEmailSignupStatus struct {
	value *ConnectionCreateOptionsAttributesEmailSignupStatus
	isSet bool
}

func (v NullableConnectionCreateOptionsAttributesEmailSignupStatus) Get() *ConnectionCreateOptionsAttributesEmailSignupStatus {
	return v.value
}

func (v *NullableConnectionCreateOptionsAttributesEmailSignupStatus) Set(val *ConnectionCreateOptionsAttributesEmailSignupStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionCreateOptionsAttributesEmailSignupStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionCreateOptionsAttributesEmailSignupStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionCreateOptionsAttributesEmailSignupStatus(val *ConnectionCreateOptionsAttributesEmailSignupStatus) *NullableConnectionCreateOptionsAttributesEmailSignupStatus {
	return &NullableConnectionCreateOptionsAttributesEmailSignupStatus{value: val, isSet: true}
}

func (v NullableConnectionCreateOptionsAttributesEmailSignupStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionCreateOptionsAttributesEmailSignupStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
