/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
)

// ClientClientAuthenticationMethodsSelfSignedTlsClientAuth Defines `self_signed_tls_client_auth` client authentication method. If the property is defined, the client is configured to use mTLS authentication method utilizing self-signed certificate.
type ClientClientAuthenticationMethodsSelfSignedTlsClientAuth struct {
	// A list of unique and previously created credential IDs enabled on the client for mTLS authentication utilizing self-signed certificate.
	Credentials []ClientClientAuthenticationMethodsPrivateKeyJwtCredentialsInner `json:"credentials"`
}

type _ClientClientAuthenticationMethodsSelfSignedTlsClientAuth ClientClientAuthenticationMethodsSelfSignedTlsClientAuth

// GetCredentials returns the Credentials field value
func (o *ClientClientAuthenticationMethodsSelfSignedTlsClientAuth) GetCredentials() []ClientClientAuthenticationMethodsPrivateKeyJwtCredentialsInner {
	if o == nil {
		var ret []ClientClientAuthenticationMethodsPrivateKeyJwtCredentialsInner
		return ret
	}

	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value
// and a boolean to check if the value has been set.
func (o *ClientClientAuthenticationMethodsSelfSignedTlsClientAuth) GetCredentialsOk() ([]ClientClientAuthenticationMethodsPrivateKeyJwtCredentialsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Credentials, true
}

// SetCredentials sets field value
func (o *ClientClientAuthenticationMethodsSelfSignedTlsClientAuth) SetCredentials(v []ClientClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) {
	o.Credentials = v
}

func (o ClientClientAuthenticationMethodsSelfSignedTlsClientAuth) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientClientAuthenticationMethodsSelfSignedTlsClientAuth) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["credentials"] = o.Credentials
	return toSerialize, nil
}

func (o *ClientClientAuthenticationMethodsSelfSignedTlsClientAuth) UnmarshalJSON(data []byte) (err error) {
	varClientClientAuthenticationMethodsSelfSignedTlsClientAuth := _ClientClientAuthenticationMethodsSelfSignedTlsClientAuth{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClientClientAuthenticationMethodsSelfSignedTlsClientAuth)

	if err != nil {
		return err
	}

	*o = ClientClientAuthenticationMethodsSelfSignedTlsClientAuth(varClientClientAuthenticationMethodsSelfSignedTlsClientAuth)

	return err
}

type NullableClientClientAuthenticationMethodsSelfSignedTlsClientAuth struct {
	value *ClientClientAuthenticationMethodsSelfSignedTlsClientAuth
	isSet bool
}

func (v NullableClientClientAuthenticationMethodsSelfSignedTlsClientAuth) Get() *ClientClientAuthenticationMethodsSelfSignedTlsClientAuth {
	return v.value
}

func (v *NullableClientClientAuthenticationMethodsSelfSignedTlsClientAuth) Set(val *ClientClientAuthenticationMethodsSelfSignedTlsClientAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableClientClientAuthenticationMethodsSelfSignedTlsClientAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableClientClientAuthenticationMethodsSelfSignedTlsClientAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientClientAuthenticationMethodsSelfSignedTlsClientAuth(val *ClientClientAuthenticationMethodsSelfSignedTlsClientAuth) *NullableClientClientAuthenticationMethodsSelfSignedTlsClientAuth {
	return &NullableClientClientAuthenticationMethodsSelfSignedTlsClientAuth{value: val, isSet: true}
}

func (v NullableClientClientAuthenticationMethodsSelfSignedTlsClientAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientClientAuthenticationMethodsSelfSignedTlsClientAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
