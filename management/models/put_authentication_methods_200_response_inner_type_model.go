/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PutAuthenticationMethods200ResponseInnerType the model 'PutAuthenticationMethods200ResponseInnerType'
type PutAuthenticationMethods200ResponseInnerType string

// List of put_authentication_methods_200_response_inner_type
const (
	PUTAUTHENTICATIONMETHODS200RESPONSEINNERTYPE_PHONE            PutAuthenticationMethods200ResponseInnerType = "phone"
	PUTAUTHENTICATIONMETHODS200RESPONSEINNERTYPE_EMAIL            PutAuthenticationMethods200ResponseInnerType = "email"
	PUTAUTHENTICATIONMETHODS200RESPONSEINNERTYPE_TOTP             PutAuthenticationMethods200ResponseInnerType = "totp"
	PUTAUTHENTICATIONMETHODS200RESPONSEINNERTYPE_WEBAUTHN_ROAMING PutAuthenticationMethods200ResponseInnerType = "webauthn-roaming"
)

// All allowed values of PutAuthenticationMethods200ResponseInnerType enum
var AllowedPutAuthenticationMethods200ResponseInnerTypeEnumValues = []PutAuthenticationMethods200ResponseInnerType{
	"phone",
	"email",
	"totp",
	"webauthn-roaming",
}

func (v *PutAuthenticationMethods200ResponseInnerType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PutAuthenticationMethods200ResponseInnerType(value)
	for _, existing := range AllowedPutAuthenticationMethods200ResponseInnerTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PutAuthenticationMethods200ResponseInnerType", value)
}

// NewPutAuthenticationMethods200ResponseInnerTypeFromValue returns a pointer to a valid PutAuthenticationMethods200ResponseInnerType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPutAuthenticationMethods200ResponseInnerTypeFromValue(v string) (*PutAuthenticationMethods200ResponseInnerType, error) {
	ev := PutAuthenticationMethods200ResponseInnerType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PutAuthenticationMethods200ResponseInnerType: valid values are %v", v, AllowedPutAuthenticationMethods200ResponseInnerTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PutAuthenticationMethods200ResponseInnerType) IsValid() bool {
	for _, existing := range AllowedPutAuthenticationMethods200ResponseInnerTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to put_authentication_methods_200_response_inner_type value
func (v PutAuthenticationMethods200ResponseInnerType) Ptr() *PutAuthenticationMethods200ResponseInnerType {
	return &v
}

type NullablePutAuthenticationMethods200ResponseInnerType struct {
	value *PutAuthenticationMethods200ResponseInnerType
	isSet bool
}

func (v NullablePutAuthenticationMethods200ResponseInnerType) Get() *PutAuthenticationMethods200ResponseInnerType {
	return v.value
}

func (v *NullablePutAuthenticationMethods200ResponseInnerType) Set(val *PutAuthenticationMethods200ResponseInnerType) {
	v.value = val
	v.isSet = true
}

func (v NullablePutAuthenticationMethods200ResponseInnerType) IsSet() bool {
	return v.isSet
}

func (v *NullablePutAuthenticationMethods200ResponseInnerType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutAuthenticationMethods200ResponseInnerType(val *PutAuthenticationMethods200ResponseInnerType) *NullablePutAuthenticationMethods200ResponseInnerType {
	return &NullablePutAuthenticationMethods200ResponseInnerType{value: val, isSet: true}
}

func (v NullablePutAuthenticationMethods200ResponseInnerType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutAuthenticationMethods200ResponseInnerType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
