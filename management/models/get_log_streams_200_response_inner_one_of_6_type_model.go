/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetLogStreams200ResponseInnerOneOf6Type the model 'GetLogStreams200ResponseInnerOneOf6Type'
type GetLogStreams200ResponseInnerOneOf6Type string

// List of get_log_streams_200_response_inner_oneOf_6_type
const (
	GETLOGSTREAMS200RESPONSEINNERONEOF6TYPE_SEGMENT GetLogStreams200ResponseInnerOneOf6Type = "segment"
)

// All allowed values of GetLogStreams200ResponseInnerOneOf6Type enum
var AllowedGetLogStreams200ResponseInnerOneOf6TypeEnumValues = []GetLogStreams200ResponseInnerOneOf6Type{
	"segment",
}

func (v *GetLogStreams200ResponseInnerOneOf6Type) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetLogStreams200ResponseInnerOneOf6Type(value)
	for _, existing := range AllowedGetLogStreams200ResponseInnerOneOf6TypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetLogStreams200ResponseInnerOneOf6Type", value)
}

// NewGetLogStreams200ResponseInnerOneOf6TypeFromValue returns a pointer to a valid GetLogStreams200ResponseInnerOneOf6Type
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetLogStreams200ResponseInnerOneOf6TypeFromValue(v string) (*GetLogStreams200ResponseInnerOneOf6Type, error) {
	ev := GetLogStreams200ResponseInnerOneOf6Type(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetLogStreams200ResponseInnerOneOf6Type: valid values are %v", v, AllowedGetLogStreams200ResponseInnerOneOf6TypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetLogStreams200ResponseInnerOneOf6Type) IsValid() bool {
	for _, existing := range AllowedGetLogStreams200ResponseInnerOneOf6TypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to get_log_streams_200_response_inner_oneOf_6_type value
func (v GetLogStreams200ResponseInnerOneOf6Type) Ptr() *GetLogStreams200ResponseInnerOneOf6Type {
	return &v
}

type NullableGetLogStreams200ResponseInnerOneOf6Type struct {
	value *GetLogStreams200ResponseInnerOneOf6Type
	isSet bool
}

func (v NullableGetLogStreams200ResponseInnerOneOf6Type) Get() *GetLogStreams200ResponseInnerOneOf6Type {
	return v.value
}

func (v *NullableGetLogStreams200ResponseInnerOneOf6Type) Set(val *GetLogStreams200ResponseInnerOneOf6Type) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLogStreams200ResponseInnerOneOf6Type) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLogStreams200ResponseInnerOneOf6Type) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLogStreams200ResponseInnerOneOf6Type(val *GetLogStreams200ResponseInnerOneOf6Type) *NullableGetLogStreams200ResponseInnerOneOf6Type {
	return &NullableGetLogStreams200ResponseInnerOneOf6Type{value: val, isSet: true}
}

func (v NullableGetLogStreams200ResponseInnerOneOf6Type) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLogStreams200ResponseInnerOneOf6Type) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
