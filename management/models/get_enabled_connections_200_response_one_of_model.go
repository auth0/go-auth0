/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GetEnabledConnections200ResponseOneOf struct for GetEnabledConnections200ResponseOneOf
type GetEnabledConnections200ResponseOneOf struct {
	Start              *float32                                     `json:"start,omitempty"`
	Limit              *float32                                     `json:"limit,omitempty"`
	Total              *float32                                     `json:"total,omitempty"`
	EnabledConnections []GetEnabledConnections200ResponseOneOfInner `json:"enabled_connections,omitempty"`
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *GetEnabledConnections200ResponseOneOf) GetStart() float32 {
	if o == nil || IsNil(o.Start) {
		var ret float32
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnabledConnections200ResponseOneOf) GetStartOk() (*float32, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *GetEnabledConnections200ResponseOneOf) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given float32 and assigns it to the Start field.
func (o *GetEnabledConnections200ResponseOneOf) SetStart(v float32) {
	o.Start = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *GetEnabledConnections200ResponseOneOf) GetLimit() float32 {
	if o == nil || IsNil(o.Limit) {
		var ret float32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnabledConnections200ResponseOneOf) GetLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *GetEnabledConnections200ResponseOneOf) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given float32 and assigns it to the Limit field.
func (o *GetEnabledConnections200ResponseOneOf) SetLimit(v float32) {
	o.Limit = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetEnabledConnections200ResponseOneOf) GetTotal() float32 {
	if o == nil || IsNil(o.Total) {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnabledConnections200ResponseOneOf) GetTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetEnabledConnections200ResponseOneOf) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *GetEnabledConnections200ResponseOneOf) SetTotal(v float32) {
	o.Total = &v
}

// GetEnabledConnections returns the EnabledConnections field value if set, zero value otherwise.
func (o *GetEnabledConnections200ResponseOneOf) GetEnabledConnections() []GetEnabledConnections200ResponseOneOfInner {
	if o == nil || IsNil(o.EnabledConnections) {
		var ret []GetEnabledConnections200ResponseOneOfInner
		return ret
	}
	return o.EnabledConnections
}

// GetEnabledConnectionsOk returns a tuple with the EnabledConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnabledConnections200ResponseOneOf) GetEnabledConnectionsOk() ([]GetEnabledConnections200ResponseOneOfInner, bool) {
	if o == nil || IsNil(o.EnabledConnections) {
		return nil, false
	}
	return o.EnabledConnections, true
}

// HasEnabledConnections returns a boolean if a field has been set.
func (o *GetEnabledConnections200ResponseOneOf) HasEnabledConnections() bool {
	if o != nil && !IsNil(o.EnabledConnections) {
		return true
	}

	return false
}

// SetEnabledConnections gets a reference to the given []GetEnabledConnections200ResponseOneOfInner and assigns it to the EnabledConnections field.
func (o *GetEnabledConnections200ResponseOneOf) SetEnabledConnections(v []GetEnabledConnections200ResponseOneOfInner) {
	o.EnabledConnections = v
}

func (o GetEnabledConnections200ResponseOneOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEnabledConnections200ResponseOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.EnabledConnections) {
		toSerialize["enabled_connections"] = o.EnabledConnections
	}
	return toSerialize, nil
}

type NullableGetEnabledConnections200ResponseOneOf struct {
	value *GetEnabledConnections200ResponseOneOf
	isSet bool
}

func (v NullableGetEnabledConnections200ResponseOneOf) Get() *GetEnabledConnections200ResponseOneOf {
	return v.value
}

func (v *NullableGetEnabledConnections200ResponseOneOf) Set(val *GetEnabledConnections200ResponseOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEnabledConnections200ResponseOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEnabledConnections200ResponseOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEnabledConnections200ResponseOneOf(val *GetEnabledConnections200ResponseOneOf) *NullableGetEnabledConnections200ResponseOneOf {
	return &NullableGetEnabledConnections200ResponseOneOf{value: val, isSet: true}
}

func (v NullableGetEnabledConnections200ResponseOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEnabledConnections200ResponseOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
