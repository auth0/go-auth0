/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GetActionVersions200Response struct for GetActionVersions200Response
type GetActionVersions200Response struct {
	// The total result count.
	Total *float32 `json:"total,omitempty"`
	// Page index of the results being returned. First page is 0.
	Page *float32 `json:"page,omitempty"`
	// Number of results per page. Paging is disabled if parameter not sent.
	PerPage  *float32                                    `json:"per_page,omitempty"`
	Versions []GetActionVersions200ResponseVersionsInner `json:"versions,omitempty"`
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetActionVersions200Response) GetTotal() float32 {
	if o == nil || IsNil(o.Total) {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetActionVersions200Response) GetTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetActionVersions200Response) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *GetActionVersions200Response) SetTotal(v float32) {
	o.Total = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *GetActionVersions200Response) GetPage() float32 {
	if o == nil || IsNil(o.Page) {
		var ret float32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetActionVersions200Response) GetPageOk() (*float32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *GetActionVersions200Response) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given float32 and assigns it to the Page field.
func (o *GetActionVersions200Response) SetPage(v float32) {
	o.Page = &v
}

// GetPerPage returns the PerPage field value if set, zero value otherwise.
func (o *GetActionVersions200Response) GetPerPage() float32 {
	if o == nil || IsNil(o.PerPage) {
		var ret float32
		return ret
	}
	return *o.PerPage
}

// GetPerPageOk returns a tuple with the PerPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetActionVersions200Response) GetPerPageOk() (*float32, bool) {
	if o == nil || IsNil(o.PerPage) {
		return nil, false
	}
	return o.PerPage, true
}

// HasPerPage returns a boolean if a field has been set.
func (o *GetActionVersions200Response) HasPerPage() bool {
	if o != nil && !IsNil(o.PerPage) {
		return true
	}

	return false
}

// SetPerPage gets a reference to the given float32 and assigns it to the PerPage field.
func (o *GetActionVersions200Response) SetPerPage(v float32) {
	o.PerPage = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *GetActionVersions200Response) GetVersions() []GetActionVersions200ResponseVersionsInner {
	if o == nil || IsNil(o.Versions) {
		var ret []GetActionVersions200ResponseVersionsInner
		return ret
	}
	return o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetActionVersions200Response) GetVersionsOk() ([]GetActionVersions200ResponseVersionsInner, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *GetActionVersions200Response) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given []GetActionVersions200ResponseVersionsInner and assigns it to the Versions field.
func (o *GetActionVersions200Response) SetVersions(v []GetActionVersions200ResponseVersionsInner) {
	o.Versions = v
}

func (o GetActionVersions200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetActionVersions200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.PerPage) {
		toSerialize["per_page"] = o.PerPage
	}
	if !IsNil(o.Versions) {
		toSerialize["versions"] = o.Versions
	}
	return toSerialize, nil
}

type NullableGetActionVersions200Response struct {
	value *GetActionVersions200Response
	isSet bool
}

func (v NullableGetActionVersions200Response) Get() *GetActionVersions200Response {
	return v.value
}

func (v *NullableGetActionVersions200Response) Set(val *GetActionVersions200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetActionVersions200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetActionVersions200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetActionVersions200Response(val *GetActionVersions200Response) *NullableGetActionVersions200Response {
	return &NullableGetActionVersions200Response{value: val, isSet: true}
}

func (v NullableGetActionVersions200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetActionVersions200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
