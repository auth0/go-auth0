/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"

	"gopkg.in/validator.v2"
)

// GetLogStreams200ResponseInner - struct for GetLogStreams200ResponseInner
type GetLogStreams200ResponseInner struct {
	GetLogStreams200ResponseInnerOneOf  *GetLogStreams200ResponseInnerOneOf
	GetLogStreams200ResponseInnerOneOf1 *GetLogStreams200ResponseInnerOneOf1
	GetLogStreams200ResponseInnerOneOf2 *GetLogStreams200ResponseInnerOneOf2
	GetLogStreams200ResponseInnerOneOf3 *GetLogStreams200ResponseInnerOneOf3
	GetLogStreams200ResponseInnerOneOf4 *GetLogStreams200ResponseInnerOneOf4
	GetLogStreams200ResponseInnerOneOf5 *GetLogStreams200ResponseInnerOneOf5
	GetLogStreams200ResponseInnerOneOf6 *GetLogStreams200ResponseInnerOneOf6
	GetLogStreams200ResponseInnerOneOf7 *GetLogStreams200ResponseInnerOneOf7
}

// GetLogStreams200ResponseInnerOneOfAsGetLogStreams200ResponseInner is a convenience function that returns GetLogStreams200ResponseInnerOneOf wrapped in GetLogStreams200ResponseInner
func GetLogStreams200ResponseInnerOneOfAsGetLogStreams200ResponseInner(v *GetLogStreams200ResponseInnerOneOf) GetLogStreams200ResponseInner {
	return GetLogStreams200ResponseInner{
		GetLogStreams200ResponseInnerOneOf: v,
	}
}

// GetLogStreams200ResponseInnerOneOf1AsGetLogStreams200ResponseInner is a convenience function that returns GetLogStreams200ResponseInnerOneOf1 wrapped in GetLogStreams200ResponseInner
func GetLogStreams200ResponseInnerOneOf1AsGetLogStreams200ResponseInner(v *GetLogStreams200ResponseInnerOneOf1) GetLogStreams200ResponseInner {
	return GetLogStreams200ResponseInner{
		GetLogStreams200ResponseInnerOneOf1: v,
	}
}

// GetLogStreams200ResponseInnerOneOf2AsGetLogStreams200ResponseInner is a convenience function that returns GetLogStreams200ResponseInnerOneOf2 wrapped in GetLogStreams200ResponseInner
func GetLogStreams200ResponseInnerOneOf2AsGetLogStreams200ResponseInner(v *GetLogStreams200ResponseInnerOneOf2) GetLogStreams200ResponseInner {
	return GetLogStreams200ResponseInner{
		GetLogStreams200ResponseInnerOneOf2: v,
	}
}

// GetLogStreams200ResponseInnerOneOf3AsGetLogStreams200ResponseInner is a convenience function that returns GetLogStreams200ResponseInnerOneOf3 wrapped in GetLogStreams200ResponseInner
func GetLogStreams200ResponseInnerOneOf3AsGetLogStreams200ResponseInner(v *GetLogStreams200ResponseInnerOneOf3) GetLogStreams200ResponseInner {
	return GetLogStreams200ResponseInner{
		GetLogStreams200ResponseInnerOneOf3: v,
	}
}

// GetLogStreams200ResponseInnerOneOf4AsGetLogStreams200ResponseInner is a convenience function that returns GetLogStreams200ResponseInnerOneOf4 wrapped in GetLogStreams200ResponseInner
func GetLogStreams200ResponseInnerOneOf4AsGetLogStreams200ResponseInner(v *GetLogStreams200ResponseInnerOneOf4) GetLogStreams200ResponseInner {
	return GetLogStreams200ResponseInner{
		GetLogStreams200ResponseInnerOneOf4: v,
	}
}

// GetLogStreams200ResponseInnerOneOf5AsGetLogStreams200ResponseInner is a convenience function that returns GetLogStreams200ResponseInnerOneOf5 wrapped in GetLogStreams200ResponseInner
func GetLogStreams200ResponseInnerOneOf5AsGetLogStreams200ResponseInner(v *GetLogStreams200ResponseInnerOneOf5) GetLogStreams200ResponseInner {
	return GetLogStreams200ResponseInner{
		GetLogStreams200ResponseInnerOneOf5: v,
	}
}

// GetLogStreams200ResponseInnerOneOf6AsGetLogStreams200ResponseInner is a convenience function that returns GetLogStreams200ResponseInnerOneOf6 wrapped in GetLogStreams200ResponseInner
func GetLogStreams200ResponseInnerOneOf6AsGetLogStreams200ResponseInner(v *GetLogStreams200ResponseInnerOneOf6) GetLogStreams200ResponseInner {
	return GetLogStreams200ResponseInner{
		GetLogStreams200ResponseInnerOneOf6: v,
	}
}

// GetLogStreams200ResponseInnerOneOf7AsGetLogStreams200ResponseInner is a convenience function that returns GetLogStreams200ResponseInnerOneOf7 wrapped in GetLogStreams200ResponseInner
func GetLogStreams200ResponseInnerOneOf7AsGetLogStreams200ResponseInner(v *GetLogStreams200ResponseInnerOneOf7) GetLogStreams200ResponseInner {
	return GetLogStreams200ResponseInner{
		GetLogStreams200ResponseInnerOneOf7: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetLogStreams200ResponseInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetLogStreams200ResponseInnerOneOf
	err = newStrictDecoder(data).Decode(&dst.GetLogStreams200ResponseInnerOneOf)
	if err == nil {
		jsonGetLogStreams200ResponseInnerOneOf, _ := json.Marshal(dst.GetLogStreams200ResponseInnerOneOf)
		if string(jsonGetLogStreams200ResponseInnerOneOf) == "{}" { // empty struct
			dst.GetLogStreams200ResponseInnerOneOf = nil
		} else {
			if err = validator.Validate(dst.GetLogStreams200ResponseInnerOneOf); err != nil {
				dst.GetLogStreams200ResponseInnerOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetLogStreams200ResponseInnerOneOf = nil
	}

	// try to unmarshal data into GetLogStreams200ResponseInnerOneOf1
	err = newStrictDecoder(data).Decode(&dst.GetLogStreams200ResponseInnerOneOf1)
	if err == nil {
		jsonGetLogStreams200ResponseInnerOneOf1, _ := json.Marshal(dst.GetLogStreams200ResponseInnerOneOf1)
		if string(jsonGetLogStreams200ResponseInnerOneOf1) == "{}" { // empty struct
			dst.GetLogStreams200ResponseInnerOneOf1 = nil
		} else {
			if err = validator.Validate(dst.GetLogStreams200ResponseInnerOneOf1); err != nil {
				dst.GetLogStreams200ResponseInnerOneOf1 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetLogStreams200ResponseInnerOneOf1 = nil
	}

	// try to unmarshal data into GetLogStreams200ResponseInnerOneOf2
	err = newStrictDecoder(data).Decode(&dst.GetLogStreams200ResponseInnerOneOf2)
	if err == nil {
		jsonGetLogStreams200ResponseInnerOneOf2, _ := json.Marshal(dst.GetLogStreams200ResponseInnerOneOf2)
		if string(jsonGetLogStreams200ResponseInnerOneOf2) == "{}" { // empty struct
			dst.GetLogStreams200ResponseInnerOneOf2 = nil
		} else {
			if err = validator.Validate(dst.GetLogStreams200ResponseInnerOneOf2); err != nil {
				dst.GetLogStreams200ResponseInnerOneOf2 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetLogStreams200ResponseInnerOneOf2 = nil
	}

	// try to unmarshal data into GetLogStreams200ResponseInnerOneOf3
	err = newStrictDecoder(data).Decode(&dst.GetLogStreams200ResponseInnerOneOf3)
	if err == nil {
		jsonGetLogStreams200ResponseInnerOneOf3, _ := json.Marshal(dst.GetLogStreams200ResponseInnerOneOf3)
		if string(jsonGetLogStreams200ResponseInnerOneOf3) == "{}" { // empty struct
			dst.GetLogStreams200ResponseInnerOneOf3 = nil
		} else {
			if err = validator.Validate(dst.GetLogStreams200ResponseInnerOneOf3); err != nil {
				dst.GetLogStreams200ResponseInnerOneOf3 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetLogStreams200ResponseInnerOneOf3 = nil
	}

	// try to unmarshal data into GetLogStreams200ResponseInnerOneOf4
	err = newStrictDecoder(data).Decode(&dst.GetLogStreams200ResponseInnerOneOf4)
	if err == nil {
		jsonGetLogStreams200ResponseInnerOneOf4, _ := json.Marshal(dst.GetLogStreams200ResponseInnerOneOf4)
		if string(jsonGetLogStreams200ResponseInnerOneOf4) == "{}" { // empty struct
			dst.GetLogStreams200ResponseInnerOneOf4 = nil
		} else {
			if err = validator.Validate(dst.GetLogStreams200ResponseInnerOneOf4); err != nil {
				dst.GetLogStreams200ResponseInnerOneOf4 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetLogStreams200ResponseInnerOneOf4 = nil
	}

	// try to unmarshal data into GetLogStreams200ResponseInnerOneOf5
	err = newStrictDecoder(data).Decode(&dst.GetLogStreams200ResponseInnerOneOf5)
	if err == nil {
		jsonGetLogStreams200ResponseInnerOneOf5, _ := json.Marshal(dst.GetLogStreams200ResponseInnerOneOf5)
		if string(jsonGetLogStreams200ResponseInnerOneOf5) == "{}" { // empty struct
			dst.GetLogStreams200ResponseInnerOneOf5 = nil
		} else {
			if err = validator.Validate(dst.GetLogStreams200ResponseInnerOneOf5); err != nil {
				dst.GetLogStreams200ResponseInnerOneOf5 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetLogStreams200ResponseInnerOneOf5 = nil
	}

	// try to unmarshal data into GetLogStreams200ResponseInnerOneOf6
	err = newStrictDecoder(data).Decode(&dst.GetLogStreams200ResponseInnerOneOf6)
	if err == nil {
		jsonGetLogStreams200ResponseInnerOneOf6, _ := json.Marshal(dst.GetLogStreams200ResponseInnerOneOf6)
		if string(jsonGetLogStreams200ResponseInnerOneOf6) == "{}" { // empty struct
			dst.GetLogStreams200ResponseInnerOneOf6 = nil
		} else {
			if err = validator.Validate(dst.GetLogStreams200ResponseInnerOneOf6); err != nil {
				dst.GetLogStreams200ResponseInnerOneOf6 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetLogStreams200ResponseInnerOneOf6 = nil
	}

	// try to unmarshal data into GetLogStreams200ResponseInnerOneOf7
	err = newStrictDecoder(data).Decode(&dst.GetLogStreams200ResponseInnerOneOf7)
	if err == nil {
		jsonGetLogStreams200ResponseInnerOneOf7, _ := json.Marshal(dst.GetLogStreams200ResponseInnerOneOf7)
		if string(jsonGetLogStreams200ResponseInnerOneOf7) == "{}" { // empty struct
			dst.GetLogStreams200ResponseInnerOneOf7 = nil
		} else {
			if err = validator.Validate(dst.GetLogStreams200ResponseInnerOneOf7); err != nil {
				dst.GetLogStreams200ResponseInnerOneOf7 = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetLogStreams200ResponseInnerOneOf7 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetLogStreams200ResponseInnerOneOf = nil
		dst.GetLogStreams200ResponseInnerOneOf1 = nil
		dst.GetLogStreams200ResponseInnerOneOf2 = nil
		dst.GetLogStreams200ResponseInnerOneOf3 = nil
		dst.GetLogStreams200ResponseInnerOneOf4 = nil
		dst.GetLogStreams200ResponseInnerOneOf5 = nil
		dst.GetLogStreams200ResponseInnerOneOf6 = nil
		dst.GetLogStreams200ResponseInnerOneOf7 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetLogStreams200ResponseInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetLogStreams200ResponseInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetLogStreams200ResponseInner) MarshalJSON() ([]byte, error) {
	if src.GetLogStreams200ResponseInnerOneOf != nil {
		return json.Marshal(&src.GetLogStreams200ResponseInnerOneOf)
	}

	if src.GetLogStreams200ResponseInnerOneOf1 != nil {
		return json.Marshal(&src.GetLogStreams200ResponseInnerOneOf1)
	}

	if src.GetLogStreams200ResponseInnerOneOf2 != nil {
		return json.Marshal(&src.GetLogStreams200ResponseInnerOneOf2)
	}

	if src.GetLogStreams200ResponseInnerOneOf3 != nil {
		return json.Marshal(&src.GetLogStreams200ResponseInnerOneOf3)
	}

	if src.GetLogStreams200ResponseInnerOneOf4 != nil {
		return json.Marshal(&src.GetLogStreams200ResponseInnerOneOf4)
	}

	if src.GetLogStreams200ResponseInnerOneOf5 != nil {
		return json.Marshal(&src.GetLogStreams200ResponseInnerOneOf5)
	}

	if src.GetLogStreams200ResponseInnerOneOf6 != nil {
		return json.Marshal(&src.GetLogStreams200ResponseInnerOneOf6)
	}

	if src.GetLogStreams200ResponseInnerOneOf7 != nil {
		return json.Marshal(&src.GetLogStreams200ResponseInnerOneOf7)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetLogStreams200ResponseInner) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetLogStreams200ResponseInnerOneOf != nil {
		return obj.GetLogStreams200ResponseInnerOneOf
	}

	if obj.GetLogStreams200ResponseInnerOneOf1 != nil {
		return obj.GetLogStreams200ResponseInnerOneOf1
	}

	if obj.GetLogStreams200ResponseInnerOneOf2 != nil {
		return obj.GetLogStreams200ResponseInnerOneOf2
	}

	if obj.GetLogStreams200ResponseInnerOneOf3 != nil {
		return obj.GetLogStreams200ResponseInnerOneOf3
	}

	if obj.GetLogStreams200ResponseInnerOneOf4 != nil {
		return obj.GetLogStreams200ResponseInnerOneOf4
	}

	if obj.GetLogStreams200ResponseInnerOneOf5 != nil {
		return obj.GetLogStreams200ResponseInnerOneOf5
	}

	if obj.GetLogStreams200ResponseInnerOneOf6 != nil {
		return obj.GetLogStreams200ResponseInnerOneOf6
	}

	if obj.GetLogStreams200ResponseInnerOneOf7 != nil {
		return obj.GetLogStreams200ResponseInnerOneOf7
	}

	// all schemas are nil
	return nil
}

type NullableGetLogStreams200ResponseInner struct {
	value *GetLogStreams200ResponseInner
	isSet bool
}

func (v NullableGetLogStreams200ResponseInner) Get() *GetLogStreams200ResponseInner {
	return v.value
}

func (v *NullableGetLogStreams200ResponseInner) Set(val *GetLogStreams200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLogStreams200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLogStreams200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLogStreams200ResponseInner(val *GetLogStreams200ResponseInner) *NullableGetLogStreams200ResponseInner {
	return &NullableGetLogStreams200ResponseInner{value: val, isSet: true}
}

func (v NullableGetLogStreams200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLogStreams200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
