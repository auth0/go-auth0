/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetLogStreams200ResponseInnerOneOfStatus The status of the log stream. Possible values: `active`, `paused`, `suspended`
type GetLogStreams200ResponseInnerOneOfStatus string

// List of get_log_streams_200_response_inner_oneOf_status
const (
	GETLOGSTREAMS200RESPONSEINNERONEOFSTATUS_ACTIVE    GetLogStreams200ResponseInnerOneOfStatus = "active"
	GETLOGSTREAMS200RESPONSEINNERONEOFSTATUS_PAUSED    GetLogStreams200ResponseInnerOneOfStatus = "paused"
	GETLOGSTREAMS200RESPONSEINNERONEOFSTATUS_SUSPENDED GetLogStreams200ResponseInnerOneOfStatus = "suspended"
)

// All allowed values of GetLogStreams200ResponseInnerOneOfStatus enum
var AllowedGetLogStreams200ResponseInnerOneOfStatusEnumValues = []GetLogStreams200ResponseInnerOneOfStatus{
	"active",
	"paused",
	"suspended",
}

func (v *GetLogStreams200ResponseInnerOneOfStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetLogStreams200ResponseInnerOneOfStatus(value)
	for _, existing := range AllowedGetLogStreams200ResponseInnerOneOfStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetLogStreams200ResponseInnerOneOfStatus", value)
}

// NewGetLogStreams200ResponseInnerOneOfStatusFromValue returns a pointer to a valid GetLogStreams200ResponseInnerOneOfStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetLogStreams200ResponseInnerOneOfStatusFromValue(v string) (*GetLogStreams200ResponseInnerOneOfStatus, error) {
	ev := GetLogStreams200ResponseInnerOneOfStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetLogStreams200ResponseInnerOneOfStatus: valid values are %v", v, AllowedGetLogStreams200ResponseInnerOneOfStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetLogStreams200ResponseInnerOneOfStatus) IsValid() bool {
	for _, existing := range AllowedGetLogStreams200ResponseInnerOneOfStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to get_log_streams_200_response_inner_oneOf_status value
func (v GetLogStreams200ResponseInnerOneOfStatus) Ptr() *GetLogStreams200ResponseInnerOneOfStatus {
	return &v
}

type NullableGetLogStreams200ResponseInnerOneOfStatus struct {
	value *GetLogStreams200ResponseInnerOneOfStatus
	isSet bool
}

func (v NullableGetLogStreams200ResponseInnerOneOfStatus) Get() *GetLogStreams200ResponseInnerOneOfStatus {
	return v.value
}

func (v *NullableGetLogStreams200ResponseInnerOneOfStatus) Set(val *GetLogStreams200ResponseInnerOneOfStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLogStreams200ResponseInnerOneOfStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLogStreams200ResponseInnerOneOfStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLogStreams200ResponseInnerOneOfStatus(val *GetLogStreams200ResponseInnerOneOfStatus) *NullableGetLogStreams200ResponseInnerOneOfStatus {
	return &NullableGetLogStreams200ResponseInnerOneOfStatus{value: val, isSet: true}
}

func (v NullableGetLogStreams200ResponseInnerOneOfStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLogStreams200ResponseInnerOneOfStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
