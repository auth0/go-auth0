/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PostBrandingThemeRequestBordersButtonsStyle Buttons style
type PostBrandingThemeRequestBordersButtonsStyle string

// List of post_branding_theme_request_borders_buttons_style
const (
	POSTBRANDINGTHEMEREQUESTBORDERSBUTTONSSTYLE_PILL    PostBrandingThemeRequestBordersButtonsStyle = "pill"
	POSTBRANDINGTHEMEREQUESTBORDERSBUTTONSSTYLE_ROUNDED PostBrandingThemeRequestBordersButtonsStyle = "rounded"
	POSTBRANDINGTHEMEREQUESTBORDERSBUTTONSSTYLE_SHARP   PostBrandingThemeRequestBordersButtonsStyle = "sharp"
)

// All allowed values of PostBrandingThemeRequestBordersButtonsStyle enum
var AllowedPostBrandingThemeRequestBordersButtonsStyleEnumValues = []PostBrandingThemeRequestBordersButtonsStyle{
	"pill",
	"rounded",
	"sharp",
}

func (v *PostBrandingThemeRequestBordersButtonsStyle) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PostBrandingThemeRequestBordersButtonsStyle(value)
	for _, existing := range AllowedPostBrandingThemeRequestBordersButtonsStyleEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PostBrandingThemeRequestBordersButtonsStyle", value)
}

// NewPostBrandingThemeRequestBordersButtonsStyleFromValue returns a pointer to a valid PostBrandingThemeRequestBordersButtonsStyle
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPostBrandingThemeRequestBordersButtonsStyleFromValue(v string) (*PostBrandingThemeRequestBordersButtonsStyle, error) {
	ev := PostBrandingThemeRequestBordersButtonsStyle(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PostBrandingThemeRequestBordersButtonsStyle: valid values are %v", v, AllowedPostBrandingThemeRequestBordersButtonsStyleEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PostBrandingThemeRequestBordersButtonsStyle) IsValid() bool {
	for _, existing := range AllowedPostBrandingThemeRequestBordersButtonsStyleEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to post_branding_theme_request_borders_buttons_style value
func (v PostBrandingThemeRequestBordersButtonsStyle) Ptr() *PostBrandingThemeRequestBordersButtonsStyle {
	return &v
}

type NullablePostBrandingThemeRequestBordersButtonsStyle struct {
	value *PostBrandingThemeRequestBordersButtonsStyle
	isSet bool
}

func (v NullablePostBrandingThemeRequestBordersButtonsStyle) Get() *PostBrandingThemeRequestBordersButtonsStyle {
	return v.value
}

func (v *NullablePostBrandingThemeRequestBordersButtonsStyle) Set(val *PostBrandingThemeRequestBordersButtonsStyle) {
	v.value = val
	v.isSet = true
}

func (v NullablePostBrandingThemeRequestBordersButtonsStyle) IsSet() bool {
	return v.isSet
}

func (v *NullablePostBrandingThemeRequestBordersButtonsStyle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostBrandingThemeRequestBordersButtonsStyle(val *PostBrandingThemeRequestBordersButtonsStyle) *NullablePostBrandingThemeRequestBordersButtonsStyle {
	return &NullablePostBrandingThemeRequestBordersButtonsStyle{value: val, isSet: true}
}

func (v NullablePostBrandingThemeRequestBordersButtonsStyle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostBrandingThemeRequestBordersButtonsStyle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
