/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ClientJwtConfigurationAlg Algorithm used to sign JWTs. Can be `HS256` or `RS256`. `PS256` available via addon.
type ClientJwtConfigurationAlg string

// List of client_jwt_configuration_alg
const (
	CLIENTJWTCONFIGURATIONALG_HS256 ClientJwtConfigurationAlg = "HS256"
	CLIENTJWTCONFIGURATIONALG_RS256 ClientJwtConfigurationAlg = "RS256"
	CLIENTJWTCONFIGURATIONALG_PS256 ClientJwtConfigurationAlg = "PS256"
)

// All allowed values of ClientJwtConfigurationAlg enum
var AllowedClientJwtConfigurationAlgEnumValues = []ClientJwtConfigurationAlg{
	"HS256",
	"RS256",
	"PS256",
}

func (v *ClientJwtConfigurationAlg) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ClientJwtConfigurationAlg(value)
	for _, existing := range AllowedClientJwtConfigurationAlgEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ClientJwtConfigurationAlg", value)
}

// NewClientJwtConfigurationAlgFromValue returns a pointer to a valid ClientJwtConfigurationAlg
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewClientJwtConfigurationAlgFromValue(v string) (*ClientJwtConfigurationAlg, error) {
	ev := ClientJwtConfigurationAlg(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ClientJwtConfigurationAlg: valid values are %v", v, AllowedClientJwtConfigurationAlgEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ClientJwtConfigurationAlg) IsValid() bool {
	for _, existing := range AllowedClientJwtConfigurationAlgEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to client_jwt_configuration_alg value
func (v ClientJwtConfigurationAlg) Ptr() *ClientJwtConfigurationAlg {
	return &v
}

type NullableClientJwtConfigurationAlg struct {
	value *ClientJwtConfigurationAlg
	isSet bool
}

func (v NullableClientJwtConfigurationAlg) Get() *ClientJwtConfigurationAlg {
	return v.value
}

func (v *NullableClientJwtConfigurationAlg) Set(val *ClientJwtConfigurationAlg) {
	v.value = val
	v.isSet = true
}

func (v NullableClientJwtConfigurationAlg) IsSet() bool {
	return v.isSet
}

func (v *NullableClientJwtConfigurationAlg) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientJwtConfigurationAlg(val *ClientJwtConfigurationAlg) *NullableClientJwtConfigurationAlg {
	return &NullableClientJwtConfigurationAlg{value: val, isSet: true}
}

func (v NullableClientJwtConfigurationAlg) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientJwtConfigurationAlg) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
