/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ClientUpdateAppType The type of application this client represents
type ClientUpdateAppType string

// List of clientUpdate_app_type
const (
	CLIENTUPDATEAPPTYPE_NATIVE          ClientUpdateAppType = "native"
	CLIENTUPDATEAPPTYPE_SPA             ClientUpdateAppType = "spa"
	CLIENTUPDATEAPPTYPE_REGULAR_WEB     ClientUpdateAppType = "regular_web"
	CLIENTUPDATEAPPTYPE_NON_INTERACTIVE ClientUpdateAppType = "non_interactive"
	CLIENTUPDATEAPPTYPE_RMS             ClientUpdateAppType = "rms"
	CLIENTUPDATEAPPTYPE_BOX             ClientUpdateAppType = "box"
	CLIENTUPDATEAPPTYPE_CLOUDBEES       ClientUpdateAppType = "cloudbees"
	CLIENTUPDATEAPPTYPE_CONCUR          ClientUpdateAppType = "concur"
	CLIENTUPDATEAPPTYPE_DROPBOX         ClientUpdateAppType = "dropbox"
	CLIENTUPDATEAPPTYPE_MSCRM           ClientUpdateAppType = "mscrm"
	CLIENTUPDATEAPPTYPE_ECHOSIGN        ClientUpdateAppType = "echosign"
	CLIENTUPDATEAPPTYPE_EGNYTE          ClientUpdateAppType = "egnyte"
	CLIENTUPDATEAPPTYPE_NEWRELIC        ClientUpdateAppType = "newrelic"
	CLIENTUPDATEAPPTYPE_OFFICE365       ClientUpdateAppType = "office365"
	CLIENTUPDATEAPPTYPE_SALESFORCE      ClientUpdateAppType = "salesforce"
	CLIENTUPDATEAPPTYPE_SENTRY          ClientUpdateAppType = "sentry"
	CLIENTUPDATEAPPTYPE_SHAREPOINT      ClientUpdateAppType = "sharepoint"
	CLIENTUPDATEAPPTYPE_SLACK           ClientUpdateAppType = "slack"
	CLIENTUPDATEAPPTYPE_SPRINGCM        ClientUpdateAppType = "springcm"
	CLIENTUPDATEAPPTYPE_ZENDESK         ClientUpdateAppType = "zendesk"
	CLIENTUPDATEAPPTYPE_ZOOM            ClientUpdateAppType = "zoom"
	CLIENTUPDATEAPPTYPE_SSO_INTEGRATION ClientUpdateAppType = "sso_integration"
	CLIENTUPDATEAPPTYPE_OAG             ClientUpdateAppType = "oag"
)

// All allowed values of ClientUpdateAppType enum
var AllowedClientUpdateAppTypeEnumValues = []ClientUpdateAppType{
	"native",
	"spa",
	"regular_web",
	"non_interactive",
	"rms",
	"box",
	"cloudbees",
	"concur",
	"dropbox",
	"mscrm",
	"echosign",
	"egnyte",
	"newrelic",
	"office365",
	"salesforce",
	"sentry",
	"sharepoint",
	"slack",
	"springcm",
	"zendesk",
	"zoom",
	"sso_integration",
	"oag",
}

func (v *ClientUpdateAppType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ClientUpdateAppType(value)
	for _, existing := range AllowedClientUpdateAppTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ClientUpdateAppType", value)
}

// NewClientUpdateAppTypeFromValue returns a pointer to a valid ClientUpdateAppType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewClientUpdateAppTypeFromValue(v string) (*ClientUpdateAppType, error) {
	ev := ClientUpdateAppType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ClientUpdateAppType: valid values are %v", v, AllowedClientUpdateAppTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ClientUpdateAppType) IsValid() bool {
	for _, existing := range AllowedClientUpdateAppTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to clientUpdate_app_type value
func (v ClientUpdateAppType) Ptr() *ClientUpdateAppType {
	return &v
}

type NullableClientUpdateAppType struct {
	value *ClientUpdateAppType
	isSet bool
}

func (v NullableClientUpdateAppType) Get() *ClientUpdateAppType {
	return v.value
}

func (v *NullableClientUpdateAppType) Set(val *ClientUpdateAppType) {
	v.value = val
	v.isSet = true
}

func (v NullableClientUpdateAppType) IsSet() bool {
	return v.isSet
}

func (v *NullableClientUpdateAppType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientUpdateAppType(val *ClientUpdateAppType) *NullableClientUpdateAppType {
	return &NullableClientUpdateAppType{value: val, isSet: true}
}

func (v NullableClientUpdateAppType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientUpdateAppType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
