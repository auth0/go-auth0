/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientUpdateMobileIos Configuration related to iOS native apps
type ClientUpdateMobileIos struct {
	// Identifier assigned to the account that signs and upload the app to the store
	TeamId *string `json:"team_id,omitempty"`
	// Assigned by the developer to the app as its unique identifier inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>
	AppBundleIdentifier *string `json:"app_bundle_identifier,omitempty"`
}

// GetTeamId returns the TeamId field value if set, zero value otherwise.
func (o *ClientUpdateMobileIos) GetTeamId() string {
	if o == nil || IsNil(o.TeamId) {
		var ret string
		return ret
	}
	return *o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateMobileIos) GetTeamIdOk() (*string, bool) {
	if o == nil || IsNil(o.TeamId) {
		return nil, false
	}
	return o.TeamId, true
}

// HasTeamId returns a boolean if a field has been set.
func (o *ClientUpdateMobileIos) HasTeamId() bool {
	if o != nil && !IsNil(o.TeamId) {
		return true
	}

	return false
}

// SetTeamId gets a reference to the given string and assigns it to the TeamId field.
func (o *ClientUpdateMobileIos) SetTeamId(v string) {
	o.TeamId = &v
}

// GetAppBundleIdentifier returns the AppBundleIdentifier field value if set, zero value otherwise.
func (o *ClientUpdateMobileIos) GetAppBundleIdentifier() string {
	if o == nil || IsNil(o.AppBundleIdentifier) {
		var ret string
		return ret
	}
	return *o.AppBundleIdentifier
}

// GetAppBundleIdentifierOk returns a tuple with the AppBundleIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateMobileIos) GetAppBundleIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.AppBundleIdentifier) {
		return nil, false
	}
	return o.AppBundleIdentifier, true
}

// HasAppBundleIdentifier returns a boolean if a field has been set.
func (o *ClientUpdateMobileIos) HasAppBundleIdentifier() bool {
	if o != nil && !IsNil(o.AppBundleIdentifier) {
		return true
	}

	return false
}

// SetAppBundleIdentifier gets a reference to the given string and assigns it to the AppBundleIdentifier field.
func (o *ClientUpdateMobileIos) SetAppBundleIdentifier(v string) {
	o.AppBundleIdentifier = &v
}

func (o ClientUpdateMobileIos) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientUpdateMobileIos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TeamId) {
		toSerialize["team_id"] = o.TeamId
	}
	if !IsNil(o.AppBundleIdentifier) {
		toSerialize["app_bundle_identifier"] = o.AppBundleIdentifier
	}
	return toSerialize, nil
}

type NullableClientUpdateMobileIos struct {
	value *ClientUpdateMobileIos
	isSet bool
}

func (v NullableClientUpdateMobileIos) Get() *ClientUpdateMobileIos {
	return v.value
}

func (v *NullableClientUpdateMobileIos) Set(val *ClientUpdateMobileIos) {
	v.value = val
	v.isSet = true
}

func (v NullableClientUpdateMobileIos) IsSet() bool {
	return v.isSet
}

func (v *NullableClientUpdateMobileIos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientUpdateMobileIos(val *ClientUpdateMobileIos) *NullableClientUpdateMobileIos {
	return &NullableClientUpdateMobileIos{value: val, isSet: true}
}

func (v NullableClientUpdateMobileIos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientUpdateMobileIos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
