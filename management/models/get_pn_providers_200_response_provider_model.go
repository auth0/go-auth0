/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetPnProviders200ResponseProvider the model 'GetPnProviders200ResponseProvider'
type GetPnProviders200ResponseProvider string

// List of get_pn_providers_200_response_provider
const (
	GETPNPROVIDERS200RESPONSEPROVIDER_GUARDIAN GetPnProviders200ResponseProvider = "guardian"
	GETPNPROVIDERS200RESPONSEPROVIDER_SNS      GetPnProviders200ResponseProvider = "sns"
	GETPNPROVIDERS200RESPONSEPROVIDER_DIRECT   GetPnProviders200ResponseProvider = "direct"
)

// All allowed values of GetPnProviders200ResponseProvider enum
var AllowedGetPnProviders200ResponseProviderEnumValues = []GetPnProviders200ResponseProvider{
	"guardian",
	"sns",
	"direct",
}

func (v *GetPnProviders200ResponseProvider) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetPnProviders200ResponseProvider(value)
	for _, existing := range AllowedGetPnProviders200ResponseProviderEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetPnProviders200ResponseProvider", value)
}

// NewGetPnProviders200ResponseProviderFromValue returns a pointer to a valid GetPnProviders200ResponseProvider
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetPnProviders200ResponseProviderFromValue(v string) (*GetPnProviders200ResponseProvider, error) {
	ev := GetPnProviders200ResponseProvider(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetPnProviders200ResponseProvider: valid values are %v", v, AllowedGetPnProviders200ResponseProviderEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetPnProviders200ResponseProvider) IsValid() bool {
	for _, existing := range AllowedGetPnProviders200ResponseProviderEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to get_pn_providers_200_response_provider value
func (v GetPnProviders200ResponseProvider) Ptr() *GetPnProviders200ResponseProvider {
	return &v
}

type NullableGetPnProviders200ResponseProvider struct {
	value *GetPnProviders200ResponseProvider
	isSet bool
}

func (v NullableGetPnProviders200ResponseProvider) Get() *GetPnProviders200ResponseProvider {
	return v.value
}

func (v *NullableGetPnProviders200ResponseProvider) Set(val *GetPnProviders200ResponseProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPnProviders200ResponseProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPnProviders200ResponseProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPnProviders200ResponseProvider(val *GetPnProviders200ResponseProvider) *NullableGetPnProviders200ResponseProvider {
	return &NullableGetPnProviders200ResponseProvider{value: val, isSet: true}
}

func (v NullableGetPnProviders200ResponseProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPnProviders200ResponseProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
