/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientMobileAndroid Android native app configuration.
type ClientMobileAndroid struct {
	// App package name found in AndroidManifest.xml.
	AppPackageName *string `json:"app_package_name,omitempty"`
	// SHA256 fingerprints of the app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds.
	Sha256CertFingerprints []string `json:"sha256_cert_fingerprints,omitempty"`
	AdditionalProperties   map[string]interface{}
}

type _ClientMobileAndroid ClientMobileAndroid

// GetAppPackageName returns the AppPackageName field value if set, zero value otherwise.
func (o *ClientMobileAndroid) GetAppPackageName() string {
	if o == nil || IsNil(o.AppPackageName) {
		var ret string
		return ret
	}
	return *o.AppPackageName
}

// GetAppPackageNameOk returns a tuple with the AppPackageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientMobileAndroid) GetAppPackageNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppPackageName) {
		return nil, false
	}
	return o.AppPackageName, true
}

// HasAppPackageName returns a boolean if a field has been set.
func (o *ClientMobileAndroid) HasAppPackageName() bool {
	if o != nil && !IsNil(o.AppPackageName) {
		return true
	}

	return false
}

// SetAppPackageName gets a reference to the given string and assigns it to the AppPackageName field.
func (o *ClientMobileAndroid) SetAppPackageName(v string) {
	o.AppPackageName = &v
}

// GetSha256CertFingerprints returns the Sha256CertFingerprints field value if set, zero value otherwise.
func (o *ClientMobileAndroid) GetSha256CertFingerprints() []string {
	if o == nil || IsNil(o.Sha256CertFingerprints) {
		var ret []string
		return ret
	}
	return o.Sha256CertFingerprints
}

// GetSha256CertFingerprintsOk returns a tuple with the Sha256CertFingerprints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientMobileAndroid) GetSha256CertFingerprintsOk() ([]string, bool) {
	if o == nil || IsNil(o.Sha256CertFingerprints) {
		return nil, false
	}
	return o.Sha256CertFingerprints, true
}

// HasSha256CertFingerprints returns a boolean if a field has been set.
func (o *ClientMobileAndroid) HasSha256CertFingerprints() bool {
	if o != nil && !IsNil(o.Sha256CertFingerprints) {
		return true
	}

	return false
}

// SetSha256CertFingerprints gets a reference to the given []string and assigns it to the Sha256CertFingerprints field.
func (o *ClientMobileAndroid) SetSha256CertFingerprints(v []string) {
	o.Sha256CertFingerprints = v
}

func (o ClientMobileAndroid) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientMobileAndroid) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppPackageName) {
		toSerialize["app_package_name"] = o.AppPackageName
	}
	if !IsNil(o.Sha256CertFingerprints) {
		toSerialize["sha256_cert_fingerprints"] = o.Sha256CertFingerprints
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClientMobileAndroid) UnmarshalJSON(data []byte) (err error) {
	varClientMobileAndroid := _ClientMobileAndroid{}

	err = json.Unmarshal(data, &varClientMobileAndroid)

	if err != nil {
		return err
	}

	*o = ClientMobileAndroid(varClientMobileAndroid)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "app_package_name")
		delete(additionalProperties, "sha256_cert_fingerprints")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClientMobileAndroid struct {
	value *ClientMobileAndroid
	isSet bool
}

func (v NullableClientMobileAndroid) Get() *ClientMobileAndroid {
	return v.value
}

func (v *NullableClientMobileAndroid) Set(val *ClientMobileAndroid) {
	v.value = val
	v.isSet = true
}

func (v NullableClientMobileAndroid) IsSet() bool {
	return v.isSet
}

func (v *NullableClientMobileAndroid) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientMobileAndroid(val *ClientMobileAndroid) *NullableClientMobileAndroid {
	return &NullableClientMobileAndroid{value: val, isSet: true}
}

func (v NullableClientMobileAndroid) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientMobileAndroid) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
