/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// EmailProviderUpdateCredentialsAnyOf1 struct for EmailProviderUpdateCredentialsAnyOf1
type EmailProviderUpdateCredentialsAnyOf1 struct {
	// AWS Access Key ID.
	AccessKeyId *string `json:"accessKeyId,omitempty"`
	// AWS Secret Access Key.
	SecretAccessKey *string `json:"secretAccessKey,omitempty"`
	// AWS region.
	Region *string `json:"region,omitempty"`
}

// GetAccessKeyId returns the AccessKeyId field value if set, zero value otherwise.
func (o *EmailProviderUpdateCredentialsAnyOf1) GetAccessKeyId() string {
	if o == nil || IsNil(o.AccessKeyId) {
		var ret string
		return ret
	}
	return *o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailProviderUpdateCredentialsAnyOf1) GetAccessKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKeyId) {
		return nil, false
	}
	return o.AccessKeyId, true
}

// HasAccessKeyId returns a boolean if a field has been set.
func (o *EmailProviderUpdateCredentialsAnyOf1) HasAccessKeyId() bool {
	if o != nil && !IsNil(o.AccessKeyId) {
		return true
	}

	return false
}

// SetAccessKeyId gets a reference to the given string and assigns it to the AccessKeyId field.
func (o *EmailProviderUpdateCredentialsAnyOf1) SetAccessKeyId(v string) {
	o.AccessKeyId = &v
}

// GetSecretAccessKey returns the SecretAccessKey field value if set, zero value otherwise.
func (o *EmailProviderUpdateCredentialsAnyOf1) GetSecretAccessKey() string {
	if o == nil || IsNil(o.SecretAccessKey) {
		var ret string
		return ret
	}
	return *o.SecretAccessKey
}

// GetSecretAccessKeyOk returns a tuple with the SecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailProviderUpdateCredentialsAnyOf1) GetSecretAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretAccessKey) {
		return nil, false
	}
	return o.SecretAccessKey, true
}

// HasSecretAccessKey returns a boolean if a field has been set.
func (o *EmailProviderUpdateCredentialsAnyOf1) HasSecretAccessKey() bool {
	if o != nil && !IsNil(o.SecretAccessKey) {
		return true
	}

	return false
}

// SetSecretAccessKey gets a reference to the given string and assigns it to the SecretAccessKey field.
func (o *EmailProviderUpdateCredentialsAnyOf1) SetSecretAccessKey(v string) {
	o.SecretAccessKey = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *EmailProviderUpdateCredentialsAnyOf1) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailProviderUpdateCredentialsAnyOf1) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *EmailProviderUpdateCredentialsAnyOf1) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *EmailProviderUpdateCredentialsAnyOf1) SetRegion(v string) {
	o.Region = &v
}

func (o EmailProviderUpdateCredentialsAnyOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailProviderUpdateCredentialsAnyOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessKeyId) {
		toSerialize["accessKeyId"] = o.AccessKeyId
	}
	if !IsNil(o.SecretAccessKey) {
		toSerialize["secretAccessKey"] = o.SecretAccessKey
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return toSerialize, nil
}

type NullableEmailProviderUpdateCredentialsAnyOf1 struct {
	value *EmailProviderUpdateCredentialsAnyOf1
	isSet bool
}

func (v NullableEmailProviderUpdateCredentialsAnyOf1) Get() *EmailProviderUpdateCredentialsAnyOf1 {
	return v.value
}

func (v *NullableEmailProviderUpdateCredentialsAnyOf1) Set(val *EmailProviderUpdateCredentialsAnyOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailProviderUpdateCredentialsAnyOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailProviderUpdateCredentialsAnyOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailProviderUpdateCredentialsAnyOf1(val *EmailProviderUpdateCredentialsAnyOf1) *NullableEmailProviderUpdateCredentialsAnyOf1 {
	return &NullableEmailProviderUpdateCredentialsAnyOf1{value: val, isSet: true}
}

func (v NullableEmailProviderUpdateCredentialsAnyOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailProviderUpdateCredentialsAnyOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
