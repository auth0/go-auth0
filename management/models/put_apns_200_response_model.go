/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PutApns200Response struct for PutApns200Response
type PutApns200Response struct {
	Sandbox  *bool          `json:"sandbox,omitempty"`
	BundleId NullableString `json:"bundle_id,omitempty"`
}

// GetSandbox returns the Sandbox field value if set, zero value otherwise.
func (o *PutApns200Response) GetSandbox() bool {
	if o == nil || IsNil(o.Sandbox) {
		var ret bool
		return ret
	}
	return *o.Sandbox
}

// GetSandboxOk returns a tuple with the Sandbox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutApns200Response) GetSandboxOk() (*bool, bool) {
	if o == nil || IsNil(o.Sandbox) {
		return nil, false
	}
	return o.Sandbox, true
}

// HasSandbox returns a boolean if a field has been set.
func (o *PutApns200Response) HasSandbox() bool {
	if o != nil && !IsNil(o.Sandbox) {
		return true
	}

	return false
}

// SetSandbox gets a reference to the given bool and assigns it to the Sandbox field.
func (o *PutApns200Response) SetSandbox(v bool) {
	o.Sandbox = &v
}

// GetBundleId returns the BundleId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PutApns200Response) GetBundleId() string {
	if o == nil || IsNil(o.BundleId.Get()) {
		var ret string
		return ret
	}
	return *o.BundleId.Get()
}

// GetBundleIdOk returns a tuple with the BundleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PutApns200Response) GetBundleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BundleId.Get(), o.BundleId.IsSet()
}

// HasBundleId returns a boolean if a field has been set.
func (o *PutApns200Response) HasBundleId() bool {
	if o != nil && o.BundleId.IsSet() {
		return true
	}

	return false
}

// SetBundleId gets a reference to the given NullableString and assigns it to the BundleId field.
func (o *PutApns200Response) SetBundleId(v string) {
	o.BundleId.Set(&v)
}

// SetBundleIdNil sets the value for BundleId to be an explicit nil
func (o *PutApns200Response) SetBundleIdNil() {
	o.BundleId.Set(nil)
}

// UnsetBundleId ensures that no value is present for BundleId, not even an explicit nil
func (o *PutApns200Response) UnsetBundleId() {
	o.BundleId.Unset()
}

func (o PutApns200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutApns200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sandbox) {
		toSerialize["sandbox"] = o.Sandbox
	}
	if o.BundleId.IsSet() {
		toSerialize["bundle_id"] = o.BundleId.Get()
	}
	return toSerialize, nil
}

type NullablePutApns200Response struct {
	value *PutApns200Response
	isSet bool
}

func (v NullablePutApns200Response) Get() *PutApns200Response {
	return v.value
}

func (v *NullablePutApns200Response) Set(val *PutApns200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePutApns200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePutApns200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutApns200Response(val *PutApns200Response) *NullablePutApns200Response {
	return &NullablePutApns200Response{value: val, isSet: true}
}

func (v NullablePutApns200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutApns200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
