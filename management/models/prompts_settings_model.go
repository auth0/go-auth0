/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PromptsSettings struct for PromptsSettings
type PromptsSettings struct {
	UniversalLoginExperience *PromptsSettingsUniversalLoginExperience `json:"universal_login_experience,omitempty"`
	// Whether identifier first is enabled or not
	IdentifierFirst *bool `json:"identifier_first,omitempty"`
	// Use WebAuthn with Device Biometrics as the first authentication factor
	WebauthnPlatformFirstFactor *bool `json:"webauthn_platform_first_factor,omitempty"`
	AdditionalProperties        map[string]interface{}
}

type _PromptsSettings PromptsSettings

// GetUniversalLoginExperience returns the UniversalLoginExperience field value if set, zero value otherwise.
func (o *PromptsSettings) GetUniversalLoginExperience() PromptsSettingsUniversalLoginExperience {
	if o == nil || IsNil(o.UniversalLoginExperience) {
		var ret PromptsSettingsUniversalLoginExperience
		return ret
	}
	return *o.UniversalLoginExperience
}

// GetUniversalLoginExperienceOk returns a tuple with the UniversalLoginExperience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromptsSettings) GetUniversalLoginExperienceOk() (*PromptsSettingsUniversalLoginExperience, bool) {
	if o == nil || IsNil(o.UniversalLoginExperience) {
		return nil, false
	}
	return o.UniversalLoginExperience, true
}

// HasUniversalLoginExperience returns a boolean if a field has been set.
func (o *PromptsSettings) HasUniversalLoginExperience() bool {
	if o != nil && !IsNil(o.UniversalLoginExperience) {
		return true
	}

	return false
}

// SetUniversalLoginExperience gets a reference to the given PromptsSettingsUniversalLoginExperience and assigns it to the UniversalLoginExperience field.
func (o *PromptsSettings) SetUniversalLoginExperience(v PromptsSettingsUniversalLoginExperience) {
	o.UniversalLoginExperience = &v
}

// GetIdentifierFirst returns the IdentifierFirst field value if set, zero value otherwise.
func (o *PromptsSettings) GetIdentifierFirst() bool {
	if o == nil || IsNil(o.IdentifierFirst) {
		var ret bool
		return ret
	}
	return *o.IdentifierFirst
}

// GetIdentifierFirstOk returns a tuple with the IdentifierFirst field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromptsSettings) GetIdentifierFirstOk() (*bool, bool) {
	if o == nil || IsNil(o.IdentifierFirst) {
		return nil, false
	}
	return o.IdentifierFirst, true
}

// HasIdentifierFirst returns a boolean if a field has been set.
func (o *PromptsSettings) HasIdentifierFirst() bool {
	if o != nil && !IsNil(o.IdentifierFirst) {
		return true
	}

	return false
}

// SetIdentifierFirst gets a reference to the given bool and assigns it to the IdentifierFirst field.
func (o *PromptsSettings) SetIdentifierFirst(v bool) {
	o.IdentifierFirst = &v
}

// GetWebauthnPlatformFirstFactor returns the WebauthnPlatformFirstFactor field value if set, zero value otherwise.
func (o *PromptsSettings) GetWebauthnPlatformFirstFactor() bool {
	if o == nil || IsNil(o.WebauthnPlatformFirstFactor) {
		var ret bool
		return ret
	}
	return *o.WebauthnPlatformFirstFactor
}

// GetWebauthnPlatformFirstFactorOk returns a tuple with the WebauthnPlatformFirstFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromptsSettings) GetWebauthnPlatformFirstFactorOk() (*bool, bool) {
	if o == nil || IsNil(o.WebauthnPlatformFirstFactor) {
		return nil, false
	}
	return o.WebauthnPlatformFirstFactor, true
}

// HasWebauthnPlatformFirstFactor returns a boolean if a field has been set.
func (o *PromptsSettings) HasWebauthnPlatformFirstFactor() bool {
	if o != nil && !IsNil(o.WebauthnPlatformFirstFactor) {
		return true
	}

	return false
}

// SetWebauthnPlatformFirstFactor gets a reference to the given bool and assigns it to the WebauthnPlatformFirstFactor field.
func (o *PromptsSettings) SetWebauthnPlatformFirstFactor(v bool) {
	o.WebauthnPlatformFirstFactor = &v
}

func (o PromptsSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PromptsSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UniversalLoginExperience) {
		toSerialize["universal_login_experience"] = o.UniversalLoginExperience
	}
	if !IsNil(o.IdentifierFirst) {
		toSerialize["identifier_first"] = o.IdentifierFirst
	}
	if !IsNil(o.WebauthnPlatformFirstFactor) {
		toSerialize["webauthn_platform_first_factor"] = o.WebauthnPlatformFirstFactor
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PromptsSettings) UnmarshalJSON(data []byte) (err error) {
	varPromptsSettings := _PromptsSettings{}

	err = json.Unmarshal(data, &varPromptsSettings)

	if err != nil {
		return err
	}

	*o = PromptsSettings(varPromptsSettings)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "universal_login_experience")
		delete(additionalProperties, "identifier_first")
		delete(additionalProperties, "webauthn_platform_first_factor")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePromptsSettings struct {
	value *PromptsSettings
	isSet bool
}

func (v NullablePromptsSettings) Get() *PromptsSettings {
	return v.value
}

func (v *NullablePromptsSettings) Set(val *PromptsSettings) {
	v.value = val
	v.isSet = true
}

func (v NullablePromptsSettings) IsSet() bool {
	return v.isSet
}

func (v *NullablePromptsSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromptsSettings(val *PromptsSettings) *NullablePromptsSettings {
	return &NullablePromptsSettings{value: val, isSet: true}
}

func (v NullablePromptsSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromptsSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
