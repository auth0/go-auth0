/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientUpdateOidcLogout Configuration for OIDC backchannel logout
type ClientUpdateOidcLogout struct {
	// Comma-separated list of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.
	BackchannelLogoutUrls []string `json:"backchannel_logout_urls,omitempty"`
}

// GetBackchannelLogoutUrls returns the BackchannelLogoutUrls field value if set, zero value otherwise.
func (o *ClientUpdateOidcLogout) GetBackchannelLogoutUrls() []string {
	if o == nil || IsNil(o.BackchannelLogoutUrls) {
		var ret []string
		return ret
	}
	return o.BackchannelLogoutUrls
}

// GetBackchannelLogoutUrlsOk returns a tuple with the BackchannelLogoutUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateOidcLogout) GetBackchannelLogoutUrlsOk() ([]string, bool) {
	if o == nil || IsNil(o.BackchannelLogoutUrls) {
		return nil, false
	}
	return o.BackchannelLogoutUrls, true
}

// HasBackchannelLogoutUrls returns a boolean if a field has been set.
func (o *ClientUpdateOidcLogout) HasBackchannelLogoutUrls() bool {
	if o != nil && !IsNil(o.BackchannelLogoutUrls) {
		return true
	}

	return false
}

// SetBackchannelLogoutUrls gets a reference to the given []string and assigns it to the BackchannelLogoutUrls field.
func (o *ClientUpdateOidcLogout) SetBackchannelLogoutUrls(v []string) {
	o.BackchannelLogoutUrls = v
}

func (o ClientUpdateOidcLogout) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientUpdateOidcLogout) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackchannelLogoutUrls) {
		toSerialize["backchannel_logout_urls"] = o.BackchannelLogoutUrls
	}
	return toSerialize, nil
}

type NullableClientUpdateOidcLogout struct {
	value *ClientUpdateOidcLogout
	isSet bool
}

func (v NullableClientUpdateOidcLogout) Get() *ClientUpdateOidcLogout {
	return v.value
}

func (v *NullableClientUpdateOidcLogout) Set(val *ClientUpdateOidcLogout) {
	v.value = val
	v.isSet = true
}

func (v NullableClientUpdateOidcLogout) IsSet() bool {
	return v.isSet
}

func (v *NullableClientUpdateOidcLogout) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientUpdateOidcLogout(val *ClientUpdateOidcLogout) *NullableClientUpdateOidcLogout {
	return &NullableClientUpdateOidcLogout{value: val, isSet: true}
}

func (v NullableClientUpdateOidcLogout) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientUpdateOidcLogout) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
