/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"

	"gopkg.in/validator.v2"
)

// GetOrganizationMemberRoles200Response - struct for GetOrganizationMemberRoles200Response
type GetOrganizationMemberRoles200Response struct {
	GetOrganizationMemberRoles200ResponseOneOf             *GetOrganizationMemberRoles200ResponseOneOf
	ArrayOfGetOrganizationMemberRoles200ResponseOneOfInner *[]GetOrganizationMemberRoles200ResponseOneOfInner
}

// GetOrganizationMemberRoles200ResponseOneOfAsGetOrganizationMemberRoles200Response is a convenience function that returns GetOrganizationMemberRoles200ResponseOneOf wrapped in GetOrganizationMemberRoles200Response
func GetOrganizationMemberRoles200ResponseOneOfAsGetOrganizationMemberRoles200Response(v *GetOrganizationMemberRoles200ResponseOneOf) GetOrganizationMemberRoles200Response {
	return GetOrganizationMemberRoles200Response{
		GetOrganizationMemberRoles200ResponseOneOf: v,
	}
}

// []GetOrganizationMemberRoles200ResponseOneOfInnerAsGetOrganizationMemberRoles200Response is a convenience function that returns []GetOrganizationMemberRoles200ResponseOneOfInner wrapped in GetOrganizationMemberRoles200Response
func ArrayOfGetOrganizationMemberRoles200ResponseOneOfInnerAsGetOrganizationMemberRoles200Response(v *[]GetOrganizationMemberRoles200ResponseOneOfInner) GetOrganizationMemberRoles200Response {
	return GetOrganizationMemberRoles200Response{
		ArrayOfGetOrganizationMemberRoles200ResponseOneOfInner: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetOrganizationMemberRoles200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GetOrganizationMemberRoles200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.GetOrganizationMemberRoles200ResponseOneOf)
	if err == nil {
		jsonGetOrganizationMemberRoles200ResponseOneOf, _ := json.Marshal(dst.GetOrganizationMemberRoles200ResponseOneOf)
		if string(jsonGetOrganizationMemberRoles200ResponseOneOf) == "{}" { // empty struct
			dst.GetOrganizationMemberRoles200ResponseOneOf = nil
		} else {
			if err = validator.Validate(dst.GetOrganizationMemberRoles200ResponseOneOf); err != nil {
				dst.GetOrganizationMemberRoles200ResponseOneOf = nil
			} else {
				match++
			}
		}
	} else {
		dst.GetOrganizationMemberRoles200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfGetOrganizationMemberRoles200ResponseOneOfInner
	err = newStrictDecoder(data).Decode(&dst.ArrayOfGetOrganizationMemberRoles200ResponseOneOfInner)
	if err == nil {
		jsonArrayOfGetOrganizationMemberRoles200ResponseOneOfInner, _ := json.Marshal(dst.ArrayOfGetOrganizationMemberRoles200ResponseOneOfInner)
		if string(jsonArrayOfGetOrganizationMemberRoles200ResponseOneOfInner) == "{}" { // empty struct
			dst.ArrayOfGetOrganizationMemberRoles200ResponseOneOfInner = nil
		} else {
			if err = validator.Validate(dst.ArrayOfGetOrganizationMemberRoles200ResponseOneOfInner); err != nil {
				dst.ArrayOfGetOrganizationMemberRoles200ResponseOneOfInner = nil
			} else {
				match++
			}
		}
	} else {
		dst.ArrayOfGetOrganizationMemberRoles200ResponseOneOfInner = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GetOrganizationMemberRoles200ResponseOneOf = nil
		dst.ArrayOfGetOrganizationMemberRoles200ResponseOneOfInner = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetOrganizationMemberRoles200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetOrganizationMemberRoles200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetOrganizationMemberRoles200Response) MarshalJSON() ([]byte, error) {
	if src.GetOrganizationMemberRoles200ResponseOneOf != nil {
		return json.Marshal(&src.GetOrganizationMemberRoles200ResponseOneOf)
	}

	if src.ArrayOfGetOrganizationMemberRoles200ResponseOneOfInner != nil {
		return json.Marshal(&src.ArrayOfGetOrganizationMemberRoles200ResponseOneOfInner)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetOrganizationMemberRoles200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GetOrganizationMemberRoles200ResponseOneOf != nil {
		return obj.GetOrganizationMemberRoles200ResponseOneOf
	}

	if obj.ArrayOfGetOrganizationMemberRoles200ResponseOneOfInner != nil {
		return obj.ArrayOfGetOrganizationMemberRoles200ResponseOneOfInner
	}

	// all schemas are nil
	return nil
}

type NullableGetOrganizationMemberRoles200Response struct {
	value *GetOrganizationMemberRoles200Response
	isSet bool
}

func (v NullableGetOrganizationMemberRoles200Response) Get() *GetOrganizationMemberRoles200Response {
	return v.value
}

func (v *NullableGetOrganizationMemberRoles200Response) Set(val *GetOrganizationMemberRoles200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrganizationMemberRoles200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrganizationMemberRoles200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrganizationMemberRoles200Response(val *GetOrganizationMemberRoles200Response) *NullableGetOrganizationMemberRoles200Response {
	return &NullableGetOrganizationMemberRoles200Response{value: val, isSet: true}
}

func (v NullableGetOrganizationMemberRoles200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrganizationMemberRoles200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
