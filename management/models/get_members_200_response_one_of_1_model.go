/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetMembers200ResponseOneOf1 struct for GetMembers200ResponseOneOf1
type GetMembers200ResponseOneOf1 struct {
	Next                 string                            `json:"next"`
	Members              []GetMembers200ResponseOneOfInner `json:"members"`
	AdditionalProperties map[string]interface{}
}

type _GetMembers200ResponseOneOf1 GetMembers200ResponseOneOf1

// GetNext returns the Next field value
func (o *GetMembers200ResponseOneOf1) GetNext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Next
}

// GetNextOk returns a tuple with the Next field value
// and a boolean to check if the value has been set.
func (o *GetMembers200ResponseOneOf1) GetNextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Next, true
}

// SetNext sets field value
func (o *GetMembers200ResponseOneOf1) SetNext(v string) {
	o.Next = v
}

// GetMembers returns the Members field value
func (o *GetMembers200ResponseOneOf1) GetMembers() []GetMembers200ResponseOneOfInner {
	if o == nil {
		var ret []GetMembers200ResponseOneOfInner
		return ret
	}

	return o.Members
}

// GetMembersOk returns a tuple with the Members field value
// and a boolean to check if the value has been set.
func (o *GetMembers200ResponseOneOf1) GetMembersOk() ([]GetMembers200ResponseOneOfInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Members, true
}

// SetMembers sets field value
func (o *GetMembers200ResponseOneOf1) SetMembers(v []GetMembers200ResponseOneOfInner) {
	o.Members = v
}

func (o GetMembers200ResponseOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMembers200ResponseOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["next"] = o.Next
	toSerialize["members"] = o.Members

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetMembers200ResponseOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"next",
		"members",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetMembers200ResponseOneOf1 := _GetMembers200ResponseOneOf1{}

	err = json.Unmarshal(data, &varGetMembers200ResponseOneOf1)

	if err != nil {
		return err
	}

	*o = GetMembers200ResponseOneOf1(varGetMembers200ResponseOneOf1)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "next")
		delete(additionalProperties, "members")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetMembers200ResponseOneOf1 struct {
	value *GetMembers200ResponseOneOf1
	isSet bool
}

func (v NullableGetMembers200ResponseOneOf1) Get() *GetMembers200ResponseOneOf1 {
	return v.value
}

func (v *NullableGetMembers200ResponseOneOf1) Set(val *GetMembers200ResponseOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMembers200ResponseOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMembers200ResponseOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMembers200ResponseOneOf1(val *GetMembers200ResponseOneOf1) *NullableGetMembers200ResponseOneOf1 {
	return &NullableGetMembers200ResponseOneOf1{value: val, isSet: true}
}

func (v NullableGetMembers200ResponseOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMembers200ResponseOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
