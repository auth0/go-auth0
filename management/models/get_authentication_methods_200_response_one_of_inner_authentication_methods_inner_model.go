/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner struct for GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner
type GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner struct {
	Type                 *GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInnerType `json:"type,omitempty"`
	Id                   *string                                                                      `json:"id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) GetType() GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInnerType {
	if o == nil || IsNil(o.Type) {
		var ret GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInnerType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) GetTypeOk() (*GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInnerType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInnerType and assigns it to the Type field.
func (o *GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) SetType(v GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInnerType) {
	o.Type = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) SetId(v string) {
	o.Id = &v
}

func (o GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) UnmarshalJSON(data []byte) (err error) {
	varGetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner := _GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner{}

	err = json.Unmarshal(data, &varGetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner)

	if err != nil {
		return err
	}

	*o = GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner(varGetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner struct {
	value *GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner
	isSet bool
}

func (v NullableGetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) Get() *GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner {
	return v.value
}

func (v *NullableGetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) Set(val *GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner(val *GetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) *NullableGetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner {
	return &NullableGetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner{value: val, isSet: true}
}

func (v NullableGetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAuthenticationMethods200ResponseOneOfInnerAuthenticationMethodsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
