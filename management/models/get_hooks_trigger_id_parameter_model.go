/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetHooksTriggerIdParameter the model 'GetHooksTriggerIdParameter'
type GetHooksTriggerIdParameter string

// List of get_hooks_triggerId_parameter
const (
	GETHOOKSTRIGGERIDPARAMETER_CREDENTIALS_EXCHANGE   GetHooksTriggerIdParameter = "credentials-exchange"
	GETHOOKSTRIGGERIDPARAMETER_PRE_USER_REGISTRATION  GetHooksTriggerIdParameter = "pre-user-registration"
	GETHOOKSTRIGGERIDPARAMETER_POST_USER_REGISTRATION GetHooksTriggerIdParameter = "post-user-registration"
	GETHOOKSTRIGGERIDPARAMETER_POST_CHANGE_PASSWORD   GetHooksTriggerIdParameter = "post-change-password"
	GETHOOKSTRIGGERIDPARAMETER_SEND_PHONE_MESSAGE     GetHooksTriggerIdParameter = "send-phone-message"
)

// All allowed values of GetHooksTriggerIdParameter enum
var AllowedGetHooksTriggerIdParameterEnumValues = []GetHooksTriggerIdParameter{
	"credentials-exchange",
	"pre-user-registration",
	"post-user-registration",
	"post-change-password",
	"send-phone-message",
}

func (v *GetHooksTriggerIdParameter) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetHooksTriggerIdParameter(value)
	for _, existing := range AllowedGetHooksTriggerIdParameterEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetHooksTriggerIdParameter", value)
}

// NewGetHooksTriggerIdParameterFromValue returns a pointer to a valid GetHooksTriggerIdParameter
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetHooksTriggerIdParameterFromValue(v string) (*GetHooksTriggerIdParameter, error) {
	ev := GetHooksTriggerIdParameter(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetHooksTriggerIdParameter: valid values are %v", v, AllowedGetHooksTriggerIdParameterEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetHooksTriggerIdParameter) IsValid() bool {
	for _, existing := range AllowedGetHooksTriggerIdParameterEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to get_hooks_triggerId_parameter value
func (v GetHooksTriggerIdParameter) Ptr() *GetHooksTriggerIdParameter {
	return &v
}

type NullableGetHooksTriggerIdParameter struct {
	value *GetHooksTriggerIdParameter
	isSet bool
}

func (v NullableGetHooksTriggerIdParameter) Get() *GetHooksTriggerIdParameter {
	return v.value
}

func (v *NullableGetHooksTriggerIdParameter) Set(val *GetHooksTriggerIdParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableGetHooksTriggerIdParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableGetHooksTriggerIdParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetHooksTriggerIdParameter(val *GetHooksTriggerIdParameter) *NullableGetHooksTriggerIdParameter {
	return &NullableGetHooksTriggerIdParameter{value: val, isSet: true}
}

func (v NullableGetHooksTriggerIdParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetHooksTriggerIdParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
