/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ClientOrganizationUsage Defines how to proceed during an authentication transaction with regards an organization. Can be `deny` (default), `allow` or `require`.
type ClientOrganizationUsage string

// List of client_organization_usage
const (
	CLIENTORGANIZATIONUSAGE_DENY    ClientOrganizationUsage = "deny"
	CLIENTORGANIZATIONUSAGE_ALLOW   ClientOrganizationUsage = "allow"
	CLIENTORGANIZATIONUSAGE_REQUIRE ClientOrganizationUsage = "require"
)

// All allowed values of ClientOrganizationUsage enum
var AllowedClientOrganizationUsageEnumValues = []ClientOrganizationUsage{
	"deny",
	"allow",
	"require",
}

func (v *ClientOrganizationUsage) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ClientOrganizationUsage(value)
	for _, existing := range AllowedClientOrganizationUsageEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ClientOrganizationUsage", value)
}

// NewClientOrganizationUsageFromValue returns a pointer to a valid ClientOrganizationUsage
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewClientOrganizationUsageFromValue(v string) (*ClientOrganizationUsage, error) {
	ev := ClientOrganizationUsage(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ClientOrganizationUsage: valid values are %v", v, AllowedClientOrganizationUsageEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ClientOrganizationUsage) IsValid() bool {
	for _, existing := range AllowedClientOrganizationUsageEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to client_organization_usage value
func (v ClientOrganizationUsage) Ptr() *ClientOrganizationUsage {
	return &v
}

type NullableClientOrganizationUsage struct {
	value *ClientOrganizationUsage
	isSet bool
}

func (v NullableClientOrganizationUsage) Get() *ClientOrganizationUsage {
	return v.value
}

func (v *NullableClientOrganizationUsage) Set(val *ClientOrganizationUsage) {
	v.value = val
	v.isSet = true
}

func (v NullableClientOrganizationUsage) IsSet() bool {
	return v.isSet
}

func (v *NullableClientOrganizationUsage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientOrganizationUsage(val *ClientOrganizationUsage) *NullableClientOrganizationUsage {
	return &NullableClientOrganizationUsage{value: val, isSet: true}
}

func (v NullableClientOrganizationUsage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientOrganizationUsage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
