/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientOidcLogoutBackchannelLogoutInitiators Configuration for OIDC backchannel logout initiators
type ClientOidcLogoutBackchannelLogoutInitiators struct {
	Mode                 *ClientOidcLogoutBackchannelLogoutInitiatorsMode                     `json:"mode,omitempty"`
	SelectedInitiators   []ClientOidcLogoutBackchannelLogoutInitiatorsSelectedInitiatorsInner `json:"selected_initiators,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClientOidcLogoutBackchannelLogoutInitiators ClientOidcLogoutBackchannelLogoutInitiators

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *ClientOidcLogoutBackchannelLogoutInitiators) GetMode() ClientOidcLogoutBackchannelLogoutInitiatorsMode {
	if o == nil || IsNil(o.Mode) {
		var ret ClientOidcLogoutBackchannelLogoutInitiatorsMode
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientOidcLogoutBackchannelLogoutInitiators) GetModeOk() (*ClientOidcLogoutBackchannelLogoutInitiatorsMode, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *ClientOidcLogoutBackchannelLogoutInitiators) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given ClientOidcLogoutBackchannelLogoutInitiatorsMode and assigns it to the Mode field.
func (o *ClientOidcLogoutBackchannelLogoutInitiators) SetMode(v ClientOidcLogoutBackchannelLogoutInitiatorsMode) {
	o.Mode = &v
}

// GetSelectedInitiators returns the SelectedInitiators field value if set, zero value otherwise.
func (o *ClientOidcLogoutBackchannelLogoutInitiators) GetSelectedInitiators() []ClientOidcLogoutBackchannelLogoutInitiatorsSelectedInitiatorsInner {
	if o == nil || IsNil(o.SelectedInitiators) {
		var ret []ClientOidcLogoutBackchannelLogoutInitiatorsSelectedInitiatorsInner
		return ret
	}
	return o.SelectedInitiators
}

// GetSelectedInitiatorsOk returns a tuple with the SelectedInitiators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientOidcLogoutBackchannelLogoutInitiators) GetSelectedInitiatorsOk() ([]ClientOidcLogoutBackchannelLogoutInitiatorsSelectedInitiatorsInner, bool) {
	if o == nil || IsNil(o.SelectedInitiators) {
		return nil, false
	}
	return o.SelectedInitiators, true
}

// HasSelectedInitiators returns a boolean if a field has been set.
func (o *ClientOidcLogoutBackchannelLogoutInitiators) HasSelectedInitiators() bool {
	if o != nil && !IsNil(o.SelectedInitiators) {
		return true
	}

	return false
}

// SetSelectedInitiators gets a reference to the given []ClientOidcLogoutBackchannelLogoutInitiatorsSelectedInitiatorsInner and assigns it to the SelectedInitiators field.
func (o *ClientOidcLogoutBackchannelLogoutInitiators) SetSelectedInitiators(v []ClientOidcLogoutBackchannelLogoutInitiatorsSelectedInitiatorsInner) {
	o.SelectedInitiators = v
}

func (o ClientOidcLogoutBackchannelLogoutInitiators) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientOidcLogoutBackchannelLogoutInitiators) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.SelectedInitiators) {
		toSerialize["selected_initiators"] = o.SelectedInitiators
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClientOidcLogoutBackchannelLogoutInitiators) UnmarshalJSON(data []byte) (err error) {
	varClientOidcLogoutBackchannelLogoutInitiators := _ClientOidcLogoutBackchannelLogoutInitiators{}

	err = json.Unmarshal(data, &varClientOidcLogoutBackchannelLogoutInitiators)

	if err != nil {
		return err
	}

	*o = ClientOidcLogoutBackchannelLogoutInitiators(varClientOidcLogoutBackchannelLogoutInitiators)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "mode")
		delete(additionalProperties, "selected_initiators")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClientOidcLogoutBackchannelLogoutInitiators struct {
	value *ClientOidcLogoutBackchannelLogoutInitiators
	isSet bool
}

func (v NullableClientOidcLogoutBackchannelLogoutInitiators) Get() *ClientOidcLogoutBackchannelLogoutInitiators {
	return v.value
}

func (v *NullableClientOidcLogoutBackchannelLogoutInitiators) Set(val *ClientOidcLogoutBackchannelLogoutInitiators) {
	v.value = val
	v.isSet = true
}

func (v NullableClientOidcLogoutBackchannelLogoutInitiators) IsSet() bool {
	return v.isSet
}

func (v *NullableClientOidcLogoutBackchannelLogoutInitiators) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientOidcLogoutBackchannelLogoutInitiators(val *ClientOidcLogoutBackchannelLogoutInitiators) *NullableClientOidcLogoutBackchannelLogoutInitiators {
	return &NullableClientOidcLogoutBackchannelLogoutInitiators{value: val, isSet: true}
}

func (v NullableClientOidcLogoutBackchannelLogoutInitiators) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientOidcLogoutBackchannelLogoutInitiators) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
