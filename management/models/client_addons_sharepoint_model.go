/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientAddonsSharepoint SharePoint SSO configuration.
type ClientAddonsSharepoint struct {
	// Internal SharePoint application URL.
	Url                  string                            `json:"url"`
	ExternalUrl          ClientAddonsSharepointExternalUrl `json:"external_url"`
	AdditionalProperties map[string]interface{}
}

type _ClientAddonsSharepoint ClientAddonsSharepoint

// GetUrl returns the Url field value
func (o *ClientAddonsSharepoint) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsSharepoint) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ClientAddonsSharepoint) SetUrl(v string) {
	o.Url = v
}

// GetExternalUrl returns the ExternalUrl field value
func (o *ClientAddonsSharepoint) GetExternalUrl() ClientAddonsSharepointExternalUrl {
	if o == nil {
		var ret ClientAddonsSharepointExternalUrl
		return ret
	}

	return o.ExternalUrl
}

// GetExternalUrlOk returns a tuple with the ExternalUrl field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsSharepoint) GetExternalUrlOk() (*ClientAddonsSharepointExternalUrl, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalUrl, true
}

// SetExternalUrl sets field value
func (o *ClientAddonsSharepoint) SetExternalUrl(v ClientAddonsSharepointExternalUrl) {
	o.ExternalUrl = v
}

func (o ClientAddonsSharepoint) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientAddonsSharepoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["external_url"] = o.ExternalUrl

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClientAddonsSharepoint) UnmarshalJSON(data []byte) (err error) {
	varClientAddonsSharepoint := _ClientAddonsSharepoint{}

	err = json.Unmarshal(data, &varClientAddonsSharepoint)

	if err != nil {
		return err
	}

	*o = ClientAddonsSharepoint(varClientAddonsSharepoint)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "url")
		delete(additionalProperties, "external_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClientAddonsSharepoint struct {
	value *ClientAddonsSharepoint
	isSet bool
}

func (v NullableClientAddonsSharepoint) Get() *ClientAddonsSharepoint {
	return v.value
}

func (v *NullableClientAddonsSharepoint) Set(val *ClientAddonsSharepoint) {
	v.value = val
	v.isSet = true
}

func (v NullableClientAddonsSharepoint) IsSet() bool {
	return v.isSet
}

func (v *NullableClientAddonsSharepoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientAddonsSharepoint(val *ClientAddonsSharepoint) *NullableClientAddonsSharepoint {
	return &NullableClientAddonsSharepoint{value: val, isSet: true}
}

func (v NullableClientAddonsSharepoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientAddonsSharepoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
