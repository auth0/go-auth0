/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PostCustomDomainsRequestCustomClientIpHeader HTTP header to fetch client IP header. Ex: CF-Connecting-IP, X-Forwarded-For or True-Client-IP.
type PostCustomDomainsRequestCustomClientIpHeader string

// List of post_custom_domains_request_custom_client_ip_header
const (
	POSTCUSTOMDOMAINSREQUESTCUSTOMCLIENTIPHEADER_TRUE_CLIENT_IP   PostCustomDomainsRequestCustomClientIpHeader = "true-client-ip"
	POSTCUSTOMDOMAINSREQUESTCUSTOMCLIENTIPHEADER_CF_CONNECTING_IP PostCustomDomainsRequestCustomClientIpHeader = "cf-connecting-ip"
	POSTCUSTOMDOMAINSREQUESTCUSTOMCLIENTIPHEADER_X_FORWARDED_FOR  PostCustomDomainsRequestCustomClientIpHeader = "x-forwarded-for"
	POSTCUSTOMDOMAINSREQUESTCUSTOMCLIENTIPHEADER_X_AZURE_CLIENTIP PostCustomDomainsRequestCustomClientIpHeader = "x-azure-clientip"
)

// All allowed values of PostCustomDomainsRequestCustomClientIpHeader enum
var AllowedPostCustomDomainsRequestCustomClientIpHeaderEnumValues = []PostCustomDomainsRequestCustomClientIpHeader{
	"true-client-ip",
	"cf-connecting-ip",
	"x-forwarded-for",
	"x-azure-clientip",
}

func (v *PostCustomDomainsRequestCustomClientIpHeader) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PostCustomDomainsRequestCustomClientIpHeader(value)
	for _, existing := range AllowedPostCustomDomainsRequestCustomClientIpHeaderEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PostCustomDomainsRequestCustomClientIpHeader", value)
}

// NewPostCustomDomainsRequestCustomClientIpHeaderFromValue returns a pointer to a valid PostCustomDomainsRequestCustomClientIpHeader
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPostCustomDomainsRequestCustomClientIpHeaderFromValue(v string) (*PostCustomDomainsRequestCustomClientIpHeader, error) {
	ev := PostCustomDomainsRequestCustomClientIpHeader(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PostCustomDomainsRequestCustomClientIpHeader: valid values are %v", v, AllowedPostCustomDomainsRequestCustomClientIpHeaderEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PostCustomDomainsRequestCustomClientIpHeader) IsValid() bool {
	for _, existing := range AllowedPostCustomDomainsRequestCustomClientIpHeaderEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to post_custom_domains_request_custom_client_ip_header value
func (v PostCustomDomainsRequestCustomClientIpHeader) Ptr() *PostCustomDomainsRequestCustomClientIpHeader {
	return &v
}

type NullablePostCustomDomainsRequestCustomClientIpHeader struct {
	value *PostCustomDomainsRequestCustomClientIpHeader
	isSet bool
}

func (v NullablePostCustomDomainsRequestCustomClientIpHeader) Get() *PostCustomDomainsRequestCustomClientIpHeader {
	return v.value
}

func (v *NullablePostCustomDomainsRequestCustomClientIpHeader) Set(val *PostCustomDomainsRequestCustomClientIpHeader) {
	v.value = val
	v.isSet = true
}

func (v NullablePostCustomDomainsRequestCustomClientIpHeader) IsSet() bool {
	return v.isSet
}

func (v *NullablePostCustomDomainsRequestCustomClientIpHeader) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostCustomDomainsRequestCustomClientIpHeader(val *PostCustomDomainsRequestCustomClientIpHeader) *NullablePostCustomDomainsRequestCustomClientIpHeader {
	return &NullablePostCustomDomainsRequestCustomClientIpHeader{value: val, isSet: true}
}

func (v NullablePostCustomDomainsRequestCustomClientIpHeader) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostCustomDomainsRequestCustomClientIpHeader) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
