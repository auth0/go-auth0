/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetExecution200ResponseStatus The overall status of an execution.
type GetExecution200ResponseStatus string

// List of get_execution_200_response_status
const (
	GETEXECUTION200RESPONSESTATUS_UNSPECIFIED GetExecution200ResponseStatus = "unspecified"
	GETEXECUTION200RESPONSESTATUS_PENDING     GetExecution200ResponseStatus = "pending"
	GETEXECUTION200RESPONSESTATUS_FINAL       GetExecution200ResponseStatus = "final"
	GETEXECUTION200RESPONSESTATUS_PARTIAL     GetExecution200ResponseStatus = "partial"
	GETEXECUTION200RESPONSESTATUS_CANCELED    GetExecution200ResponseStatus = "canceled"
	GETEXECUTION200RESPONSESTATUS_SUSPENDED   GetExecution200ResponseStatus = "suspended"
)

// All allowed values of GetExecution200ResponseStatus enum
var AllowedGetExecution200ResponseStatusEnumValues = []GetExecution200ResponseStatus{
	"unspecified",
	"pending",
	"final",
	"partial",
	"canceled",
	"suspended",
}

func (v *GetExecution200ResponseStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetExecution200ResponseStatus(value)
	for _, existing := range AllowedGetExecution200ResponseStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetExecution200ResponseStatus", value)
}

// NewGetExecution200ResponseStatusFromValue returns a pointer to a valid GetExecution200ResponseStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetExecution200ResponseStatusFromValue(v string) (*GetExecution200ResponseStatus, error) {
	ev := GetExecution200ResponseStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetExecution200ResponseStatus: valid values are %v", v, AllowedGetExecution200ResponseStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetExecution200ResponseStatus) IsValid() bool {
	for _, existing := range AllowedGetExecution200ResponseStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to get_execution_200_response_status value
func (v GetExecution200ResponseStatus) Ptr() *GetExecution200ResponseStatus {
	return &v
}

type NullableGetExecution200ResponseStatus struct {
	value *GetExecution200ResponseStatus
	isSet bool
}

func (v NullableGetExecution200ResponseStatus) Get() *GetExecution200ResponseStatus {
	return v.value
}

func (v *NullableGetExecution200ResponseStatus) Set(val *GetExecution200ResponseStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableGetExecution200ResponseStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableGetExecution200ResponseStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetExecution200ResponseStatus(val *GetExecution200ResponseStatus) *NullableGetExecution200ResponseStatus {
	return &NullableGetExecution200ResponseStatus{value: val, isSet: true}
}

func (v NullableGetExecution200ResponseStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetExecution200ResponseStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
