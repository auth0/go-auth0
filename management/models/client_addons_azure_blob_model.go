/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientAddonsAzureBlob Azure Blob Storage addon configuration.
type ClientAddonsAzureBlob struct {
	// Your Azure storage account name. Usually first segment in your Azure storage URL. e.g. `https://acme-org.blob.core.windows.net` would be the account name `acme-org`.
	AccountName string `json:"accountName"`
	// Access key associated with this storage account.
	StorageAccessKey string `json:"storageAccessKey"`
	// Container to request a token for. e.g. `my-container`.
	ContainerName string `json:"containerName"`
	// Entity to request a token for. e.g. `my-blob`. If blank the computed SAS will apply to the entire storage container.
	BlobName string `json:"blobName"`
	// Expiration in minutes for the generated token (default of 5 minutes).
	Expiration int32 `json:"expiration"`
	// Shared access policy identifier defined in your storage account resource.
	SignedIdentifier string `json:"signedIdentifier"`
	// Indicates if the issued token has permission to read the content, properties, metadata and block list. Use the blob as the source of a copy operation.
	BlobRead bool `json:"blob_read"`
	// Indicates if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account.
	BlobWrite bool `json:"blob_write"`
	// Indicates if the issued token has permission to delete the blob.
	BlobDelete bool `json:"blob_delete"`
	// Indicates if the issued token has permission to read the content, properties, metadata or block list of any blob in the container. Use any blob in the container as the source of a copy operation
	ContainerRead bool `json:"container_read"`
	// Indicates that for any blob in the container if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account.
	ContainerWrite bool `json:"container_write"`
	// Indicates if issued token has permission to delete any blob in the container.
	ContainerDelete bool `json:"container_delete"`
	// Indicates if the issued token has permission to list blobs in the container.
	ContainerList        bool `json:"container_list"`
	AdditionalProperties map[string]interface{}
}

type _ClientAddonsAzureBlob ClientAddonsAzureBlob

// GetAccountName returns the AccountName field value
func (o *ClientAddonsAzureBlob) GetAccountName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsAzureBlob) GetAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountName, true
}

// SetAccountName sets field value
func (o *ClientAddonsAzureBlob) SetAccountName(v string) {
	o.AccountName = v
}

// GetStorageAccessKey returns the StorageAccessKey field value
func (o *ClientAddonsAzureBlob) GetStorageAccessKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StorageAccessKey
}

// GetStorageAccessKeyOk returns a tuple with the StorageAccessKey field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsAzureBlob) GetStorageAccessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageAccessKey, true
}

// SetStorageAccessKey sets field value
func (o *ClientAddonsAzureBlob) SetStorageAccessKey(v string) {
	o.StorageAccessKey = v
}

// GetContainerName returns the ContainerName field value
func (o *ClientAddonsAzureBlob) GetContainerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContainerName
}

// GetContainerNameOk returns a tuple with the ContainerName field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsAzureBlob) GetContainerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContainerName, true
}

// SetContainerName sets field value
func (o *ClientAddonsAzureBlob) SetContainerName(v string) {
	o.ContainerName = v
}

// GetBlobName returns the BlobName field value
func (o *ClientAddonsAzureBlob) GetBlobName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BlobName
}

// GetBlobNameOk returns a tuple with the BlobName field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsAzureBlob) GetBlobNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlobName, true
}

// SetBlobName sets field value
func (o *ClientAddonsAzureBlob) SetBlobName(v string) {
	o.BlobName = v
}

// GetExpiration returns the Expiration field value
func (o *ClientAddonsAzureBlob) GetExpiration() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsAzureBlob) GetExpirationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expiration, true
}

// SetExpiration sets field value
func (o *ClientAddonsAzureBlob) SetExpiration(v int32) {
	o.Expiration = v
}

// GetSignedIdentifier returns the SignedIdentifier field value
func (o *ClientAddonsAzureBlob) GetSignedIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignedIdentifier
}

// GetSignedIdentifierOk returns a tuple with the SignedIdentifier field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsAzureBlob) GetSignedIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignedIdentifier, true
}

// SetSignedIdentifier sets field value
func (o *ClientAddonsAzureBlob) SetSignedIdentifier(v string) {
	o.SignedIdentifier = v
}

// GetBlobRead returns the BlobRead field value
func (o *ClientAddonsAzureBlob) GetBlobRead() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BlobRead
}

// GetBlobReadOk returns a tuple with the BlobRead field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsAzureBlob) GetBlobReadOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlobRead, true
}

// SetBlobRead sets field value
func (o *ClientAddonsAzureBlob) SetBlobRead(v bool) {
	o.BlobRead = v
}

// GetBlobWrite returns the BlobWrite field value
func (o *ClientAddonsAzureBlob) GetBlobWrite() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BlobWrite
}

// GetBlobWriteOk returns a tuple with the BlobWrite field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsAzureBlob) GetBlobWriteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlobWrite, true
}

// SetBlobWrite sets field value
func (o *ClientAddonsAzureBlob) SetBlobWrite(v bool) {
	o.BlobWrite = v
}

// GetBlobDelete returns the BlobDelete field value
func (o *ClientAddonsAzureBlob) GetBlobDelete() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BlobDelete
}

// GetBlobDeleteOk returns a tuple with the BlobDelete field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsAzureBlob) GetBlobDeleteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlobDelete, true
}

// SetBlobDelete sets field value
func (o *ClientAddonsAzureBlob) SetBlobDelete(v bool) {
	o.BlobDelete = v
}

// GetContainerRead returns the ContainerRead field value
func (o *ClientAddonsAzureBlob) GetContainerRead() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ContainerRead
}

// GetContainerReadOk returns a tuple with the ContainerRead field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsAzureBlob) GetContainerReadOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContainerRead, true
}

// SetContainerRead sets field value
func (o *ClientAddonsAzureBlob) SetContainerRead(v bool) {
	o.ContainerRead = v
}

// GetContainerWrite returns the ContainerWrite field value
func (o *ClientAddonsAzureBlob) GetContainerWrite() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ContainerWrite
}

// GetContainerWriteOk returns a tuple with the ContainerWrite field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsAzureBlob) GetContainerWriteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContainerWrite, true
}

// SetContainerWrite sets field value
func (o *ClientAddonsAzureBlob) SetContainerWrite(v bool) {
	o.ContainerWrite = v
}

// GetContainerDelete returns the ContainerDelete field value
func (o *ClientAddonsAzureBlob) GetContainerDelete() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ContainerDelete
}

// GetContainerDeleteOk returns a tuple with the ContainerDelete field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsAzureBlob) GetContainerDeleteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContainerDelete, true
}

// SetContainerDelete sets field value
func (o *ClientAddonsAzureBlob) SetContainerDelete(v bool) {
	o.ContainerDelete = v
}

// GetContainerList returns the ContainerList field value
func (o *ClientAddonsAzureBlob) GetContainerList() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ContainerList
}

// GetContainerListOk returns a tuple with the ContainerList field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsAzureBlob) GetContainerListOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContainerList, true
}

// SetContainerList sets field value
func (o *ClientAddonsAzureBlob) SetContainerList(v bool) {
	o.ContainerList = v
}

func (o ClientAddonsAzureBlob) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientAddonsAzureBlob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountName"] = o.AccountName
	toSerialize["storageAccessKey"] = o.StorageAccessKey
	toSerialize["containerName"] = o.ContainerName
	toSerialize["blobName"] = o.BlobName
	toSerialize["expiration"] = o.Expiration
	toSerialize["signedIdentifier"] = o.SignedIdentifier
	toSerialize["blob_read"] = o.BlobRead
	toSerialize["blob_write"] = o.BlobWrite
	toSerialize["blob_delete"] = o.BlobDelete
	toSerialize["container_read"] = o.ContainerRead
	toSerialize["container_write"] = o.ContainerWrite
	toSerialize["container_delete"] = o.ContainerDelete
	toSerialize["container_list"] = o.ContainerList

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClientAddonsAzureBlob) UnmarshalJSON(data []byte) (err error) {
	varClientAddonsAzureBlob := _ClientAddonsAzureBlob{}

	err = json.Unmarshal(data, &varClientAddonsAzureBlob)

	if err != nil {
		return err
	}

	*o = ClientAddonsAzureBlob(varClientAddonsAzureBlob)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountName")
		delete(additionalProperties, "storageAccessKey")
		delete(additionalProperties, "containerName")
		delete(additionalProperties, "blobName")
		delete(additionalProperties, "expiration")
		delete(additionalProperties, "signedIdentifier")
		delete(additionalProperties, "blob_read")
		delete(additionalProperties, "blob_write")
		delete(additionalProperties, "blob_delete")
		delete(additionalProperties, "container_read")
		delete(additionalProperties, "container_write")
		delete(additionalProperties, "container_delete")
		delete(additionalProperties, "container_list")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClientAddonsAzureBlob struct {
	value *ClientAddonsAzureBlob
	isSet bool
}

func (v NullableClientAddonsAzureBlob) Get() *ClientAddonsAzureBlob {
	return v.value
}

func (v *NullableClientAddonsAzureBlob) Set(val *ClientAddonsAzureBlob) {
	v.value = val
	v.isSet = true
}

func (v NullableClientAddonsAzureBlob) IsSet() bool {
	return v.isSet
}

func (v *NullableClientAddonsAzureBlob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientAddonsAzureBlob(val *ClientAddonsAzureBlob) *NullableClientAddonsAzureBlob {
	return &NullableClientAddonsAzureBlob{value: val, isSet: true}
}

func (v NullableClientAddonsAzureBlob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientAddonsAzureBlob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
