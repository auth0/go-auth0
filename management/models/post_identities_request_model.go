/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PostIdentitiesRequest struct for PostIdentitiesRequest
type PostIdentitiesRequest struct {
	Provider *PostIdentitiesRequestProvider `json:"provider,omitempty"`
	// connection_id of the secondary user account being linked when more than one `auth0` database provider exists.
	ConnectionId *string                      `json:"connection_id,omitempty"`
	UserId       *PostIdentitiesRequestUserId `json:"user_id,omitempty"`
	// JWT for the secondary account being linked. If sending this parameter, `provider`, `user_id`, and `connection_id` must not be sent.
	LinkWith *string `json:"link_with,omitempty"`
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *PostIdentitiesRequest) GetProvider() PostIdentitiesRequestProvider {
	if o == nil || IsNil(o.Provider) {
		var ret PostIdentitiesRequestProvider
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostIdentitiesRequest) GetProviderOk() (*PostIdentitiesRequestProvider, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *PostIdentitiesRequest) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given PostIdentitiesRequestProvider and assigns it to the Provider field.
func (o *PostIdentitiesRequest) SetProvider(v PostIdentitiesRequestProvider) {
	o.Provider = &v
}

// GetConnectionId returns the ConnectionId field value if set, zero value otherwise.
func (o *PostIdentitiesRequest) GetConnectionId() string {
	if o == nil || IsNil(o.ConnectionId) {
		var ret string
		return ret
	}
	return *o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostIdentitiesRequest) GetConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionId) {
		return nil, false
	}
	return o.ConnectionId, true
}

// HasConnectionId returns a boolean if a field has been set.
func (o *PostIdentitiesRequest) HasConnectionId() bool {
	if o != nil && !IsNil(o.ConnectionId) {
		return true
	}

	return false
}

// SetConnectionId gets a reference to the given string and assigns it to the ConnectionId field.
func (o *PostIdentitiesRequest) SetConnectionId(v string) {
	o.ConnectionId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *PostIdentitiesRequest) GetUserId() PostIdentitiesRequestUserId {
	if o == nil || IsNil(o.UserId) {
		var ret PostIdentitiesRequestUserId
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostIdentitiesRequest) GetUserIdOk() (*PostIdentitiesRequestUserId, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *PostIdentitiesRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given PostIdentitiesRequestUserId and assigns it to the UserId field.
func (o *PostIdentitiesRequest) SetUserId(v PostIdentitiesRequestUserId) {
	o.UserId = &v
}

// GetLinkWith returns the LinkWith field value if set, zero value otherwise.
func (o *PostIdentitiesRequest) GetLinkWith() string {
	if o == nil || IsNil(o.LinkWith) {
		var ret string
		return ret
	}
	return *o.LinkWith
}

// GetLinkWithOk returns a tuple with the LinkWith field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostIdentitiesRequest) GetLinkWithOk() (*string, bool) {
	if o == nil || IsNil(o.LinkWith) {
		return nil, false
	}
	return o.LinkWith, true
}

// HasLinkWith returns a boolean if a field has been set.
func (o *PostIdentitiesRequest) HasLinkWith() bool {
	if o != nil && !IsNil(o.LinkWith) {
		return true
	}

	return false
}

// SetLinkWith gets a reference to the given string and assigns it to the LinkWith field.
func (o *PostIdentitiesRequest) SetLinkWith(v string) {
	o.LinkWith = &v
}

func (o PostIdentitiesRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostIdentitiesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.ConnectionId) {
		toSerialize["connection_id"] = o.ConnectionId
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.LinkWith) {
		toSerialize["link_with"] = o.LinkWith
	}
	return toSerialize, nil
}

type NullablePostIdentitiesRequest struct {
	value *PostIdentitiesRequest
	isSet bool
}

func (v NullablePostIdentitiesRequest) Get() *PostIdentitiesRequest {
	return v.value
}

func (v *NullablePostIdentitiesRequest) Set(val *PostIdentitiesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostIdentitiesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostIdentitiesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostIdentitiesRequest(val *PostIdentitiesRequest) *NullablePostIdentitiesRequest {
	return &NullablePostIdentitiesRequest{value: val, isSet: true}
}

func (v NullablePostIdentitiesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostIdentitiesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
