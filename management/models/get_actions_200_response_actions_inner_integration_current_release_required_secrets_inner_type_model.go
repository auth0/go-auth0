/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType the model 'GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType'
type GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType string

// List of get_actions_200_response_actions_inner_integration_current_release_required_secrets_inner_type
const (
	GETACTIONS200RESPONSEACTIONSINNERINTEGRATIONCURRENTRELEASEREQUIREDSECRETSINNERTYPE_UNSPECIFIED GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType = "UNSPECIFIED"
	GETACTIONS200RESPONSEACTIONSINNERINTEGRATIONCURRENTRELEASEREQUIREDSECRETSINNERTYPE_STRING      GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType = "STRING"
)

// All allowed values of GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType enum
var AllowedGetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerTypeEnumValues = []GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType{
	"UNSPECIFIED",
	"STRING",
}

func (v *GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType(value)
	for _, existing := range AllowedGetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType", value)
}

// NewGetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerTypeFromValue returns a pointer to a valid GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerTypeFromValue(v string) (*GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType, error) {
	ev := GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType: valid values are %v", v, AllowedGetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType) IsValid() bool {
	for _, existing := range AllowedGetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to get_actions_200_response_actions_inner_integration_current_release_required_secrets_inner_type value
func (v GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType) Ptr() *GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType {
	return &v
}

type NullableGetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType struct {
	value *GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType
	isSet bool
}

func (v NullableGetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType) Get() *GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType {
	return v.value
}

func (v *NullableGetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType) Set(val *GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType) {
	v.value = val
	v.isSet = true
}

func (v NullableGetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType) IsSet() bool {
	return v.isSet
}

func (v *NullableGetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType(val *GetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType) *NullableGetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType {
	return &NullableGetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType{value: val, isSet: true}
}

func (v NullableGetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetActions200ResponseActionsInnerIntegrationCurrentReleaseRequiredSecretsInnerType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
