/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ClientComplianceLevel Defines the compliance level for this client, which may restrict it's capabilities
type ClientComplianceLevel string

// List of client_compliance_level
const (
	CLIENTCOMPLIANCELEVEL_NONE               ClientComplianceLevel = "none"
	CLIENTCOMPLIANCELEVEL_FAPI1_ADV_PKJ_PAR  ClientComplianceLevel = "fapi1_adv_pkj_par"
	CLIENTCOMPLIANCELEVEL_FAPI1_ADV_MTLS_PAR ClientComplianceLevel = "fapi1_adv_mtls_par"
)

// All allowed values of ClientComplianceLevel enum
var AllowedClientComplianceLevelEnumValues = []ClientComplianceLevel{
	"none",
	"fapi1_adv_pkj_par",
	"fapi1_adv_mtls_par",
}

func (v *ClientComplianceLevel) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ClientComplianceLevel(value)
	for _, existing := range AllowedClientComplianceLevelEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ClientComplianceLevel", value)
}

// NewClientComplianceLevelFromValue returns a pointer to a valid ClientComplianceLevel
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewClientComplianceLevelFromValue(v string) (*ClientComplianceLevel, error) {
	ev := ClientComplianceLevel(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ClientComplianceLevel: valid values are %v", v, AllowedClientComplianceLevelEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ClientComplianceLevel) IsValid() bool {
	for _, existing := range AllowedClientComplianceLevelEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to client_compliance_level value
func (v ClientComplianceLevel) Ptr() *ClientComplianceLevel {
	return &v
}

type NullableClientComplianceLevel struct {
	value *ClientComplianceLevel
	isSet bool
}

func (v NullableClientComplianceLevel) Get() *ClientComplianceLevel {
	return v.value
}

func (v *NullableClientComplianceLevel) Set(val *ClientComplianceLevel) {
	v.value = val
	v.isSet = true
}

func (v NullableClientComplianceLevel) IsSet() bool {
	return v.isSet
}

func (v *NullableClientComplianceLevel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientComplianceLevel(val *ClientComplianceLevel) *NullableClientComplianceLevel {
	return &NullableClientComplianceLevel{value: val, isSet: true}
}

func (v NullableClientComplianceLevel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientComplianceLevel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
