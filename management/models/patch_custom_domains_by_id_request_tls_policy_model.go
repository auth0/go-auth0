/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PatchCustomDomainsByIdRequestTlsPolicy recommended includes TLS 1.2
type PatchCustomDomainsByIdRequestTlsPolicy string

// List of patch_custom_domains_by_id_request_tls_policy
const (
	PATCHCUSTOMDOMAINSBYIDREQUESTTLSPOLICY_RECOMMENDED PatchCustomDomainsByIdRequestTlsPolicy = "recommended"
)

// All allowed values of PatchCustomDomainsByIdRequestTlsPolicy enum
var AllowedPatchCustomDomainsByIdRequestTlsPolicyEnumValues = []PatchCustomDomainsByIdRequestTlsPolicy{
	"recommended",
}

func (v *PatchCustomDomainsByIdRequestTlsPolicy) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PatchCustomDomainsByIdRequestTlsPolicy(value)
	for _, existing := range AllowedPatchCustomDomainsByIdRequestTlsPolicyEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PatchCustomDomainsByIdRequestTlsPolicy", value)
}

// NewPatchCustomDomainsByIdRequestTlsPolicyFromValue returns a pointer to a valid PatchCustomDomainsByIdRequestTlsPolicy
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPatchCustomDomainsByIdRequestTlsPolicyFromValue(v string) (*PatchCustomDomainsByIdRequestTlsPolicy, error) {
	ev := PatchCustomDomainsByIdRequestTlsPolicy(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PatchCustomDomainsByIdRequestTlsPolicy: valid values are %v", v, AllowedPatchCustomDomainsByIdRequestTlsPolicyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PatchCustomDomainsByIdRequestTlsPolicy) IsValid() bool {
	for _, existing := range AllowedPatchCustomDomainsByIdRequestTlsPolicyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to patch_custom_domains_by_id_request_tls_policy value
func (v PatchCustomDomainsByIdRequestTlsPolicy) Ptr() *PatchCustomDomainsByIdRequestTlsPolicy {
	return &v
}

type NullablePatchCustomDomainsByIdRequestTlsPolicy struct {
	value *PatchCustomDomainsByIdRequestTlsPolicy
	isSet bool
}

func (v NullablePatchCustomDomainsByIdRequestTlsPolicy) Get() *PatchCustomDomainsByIdRequestTlsPolicy {
	return v.value
}

func (v *NullablePatchCustomDomainsByIdRequestTlsPolicy) Set(val *PatchCustomDomainsByIdRequestTlsPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchCustomDomainsByIdRequestTlsPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchCustomDomainsByIdRequestTlsPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchCustomDomainsByIdRequestTlsPolicy(val *PatchCustomDomainsByIdRequestTlsPolicy) *NullablePatchCustomDomainsByIdRequestTlsPolicy {
	return &NullablePatchCustomDomainsByIdRequestTlsPolicy{value: val, isSet: true}
}

func (v NullablePatchCustomDomainsByIdRequestTlsPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchCustomDomainsByIdRequestTlsPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
