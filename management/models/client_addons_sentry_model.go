/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientAddonsSentry Sentry SSO configuration.
type ClientAddonsSentry struct {
	// Generated slug for your Sentry organization. Found in your Sentry URL. e.g. `https://sentry.acme.com/acme-org/` would be `acme-org`.
	OrgSlug *string `json:"org_slug,omitempty"`
	// URL prefix only if running Sentry Community Edition, otherwise leave should be blank.
	BaseUrl              *string `json:"base_url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClientAddonsSentry ClientAddonsSentry

// GetOrgSlug returns the OrgSlug field value if set, zero value otherwise.
func (o *ClientAddonsSentry) GetOrgSlug() string {
	if o == nil || IsNil(o.OrgSlug) {
		var ret string
		return ret
	}
	return *o.OrgSlug
}

// GetOrgSlugOk returns a tuple with the OrgSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAddonsSentry) GetOrgSlugOk() (*string, bool) {
	if o == nil || IsNil(o.OrgSlug) {
		return nil, false
	}
	return o.OrgSlug, true
}

// HasOrgSlug returns a boolean if a field has been set.
func (o *ClientAddonsSentry) HasOrgSlug() bool {
	if o != nil && !IsNil(o.OrgSlug) {
		return true
	}

	return false
}

// SetOrgSlug gets a reference to the given string and assigns it to the OrgSlug field.
func (o *ClientAddonsSentry) SetOrgSlug(v string) {
	o.OrgSlug = &v
}

// GetBaseUrl returns the BaseUrl field value if set, zero value otherwise.
func (o *ClientAddonsSentry) GetBaseUrl() string {
	if o == nil || IsNil(o.BaseUrl) {
		var ret string
		return ret
	}
	return *o.BaseUrl
}

// GetBaseUrlOk returns a tuple with the BaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAddonsSentry) GetBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BaseUrl) {
		return nil, false
	}
	return o.BaseUrl, true
}

// HasBaseUrl returns a boolean if a field has been set.
func (o *ClientAddonsSentry) HasBaseUrl() bool {
	if o != nil && !IsNil(o.BaseUrl) {
		return true
	}

	return false
}

// SetBaseUrl gets a reference to the given string and assigns it to the BaseUrl field.
func (o *ClientAddonsSentry) SetBaseUrl(v string) {
	o.BaseUrl = &v
}

func (o ClientAddonsSentry) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientAddonsSentry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrgSlug) {
		toSerialize["org_slug"] = o.OrgSlug
	}
	if !IsNil(o.BaseUrl) {
		toSerialize["base_url"] = o.BaseUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClientAddonsSentry) UnmarshalJSON(data []byte) (err error) {
	varClientAddonsSentry := _ClientAddonsSentry{}

	err = json.Unmarshal(data, &varClientAddonsSentry)

	if err != nil {
		return err
	}

	*o = ClientAddonsSentry(varClientAddonsSentry)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "org_slug")
		delete(additionalProperties, "base_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClientAddonsSentry struct {
	value *ClientAddonsSentry
	isSet bool
}

func (v NullableClientAddonsSentry) Get() *ClientAddonsSentry {
	return v.value
}

func (v *NullableClientAddonsSentry) Set(val *ClientAddonsSentry) {
	v.value = val
	v.isSet = true
}

func (v NullableClientAddonsSentry) IsSet() bool {
	return v.isSet
}

func (v *NullableClientAddonsSentry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientAddonsSentry(val *ClientAddonsSentry) *NullableClientAddonsSentry {
	return &NullableClientAddonsSentry{value: val, isSet: true}
}

func (v NullableClientAddonsSentry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientAddonsSentry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
