/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
)

// GetActionVersions200ResponseVersionsInnerAction The action to which this version belongs.
type GetActionVersions200ResponseVersionsInnerAction struct {
	// The unique ID of the action.
	Id *string `json:"id,omitempty"`
	// The name of an action.
	Name *string `json:"name,omitempty"`
	// The list of triggers that this action supports. At this time, an action can only target a single trigger at a time.
	SupportedTriggers []GetActions200ResponseActionsInnerSupportedTriggersInner `json:"supported_triggers,omitempty"`
	// True if all of an Action's contents have been deployed.
	AllChangesDeployed *bool `json:"all_changes_deployed,omitempty"`
	// The time when this action was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The time when this action was updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetActionVersions200ResponseVersionsInnerAction) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetActionVersions200ResponseVersionsInnerAction) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetActionVersions200ResponseVersionsInnerAction) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetActionVersions200ResponseVersionsInnerAction) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetActionVersions200ResponseVersionsInnerAction) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetActionVersions200ResponseVersionsInnerAction) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetActionVersions200ResponseVersionsInnerAction) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetActionVersions200ResponseVersionsInnerAction) SetName(v string) {
	o.Name = &v
}

// GetSupportedTriggers returns the SupportedTriggers field value if set, zero value otherwise.
func (o *GetActionVersions200ResponseVersionsInnerAction) GetSupportedTriggers() []GetActions200ResponseActionsInnerSupportedTriggersInner {
	if o == nil || IsNil(o.SupportedTriggers) {
		var ret []GetActions200ResponseActionsInnerSupportedTriggersInner
		return ret
	}
	return o.SupportedTriggers
}

// GetSupportedTriggersOk returns a tuple with the SupportedTriggers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetActionVersions200ResponseVersionsInnerAction) GetSupportedTriggersOk() ([]GetActions200ResponseActionsInnerSupportedTriggersInner, bool) {
	if o == nil || IsNil(o.SupportedTriggers) {
		return nil, false
	}
	return o.SupportedTriggers, true
}

// HasSupportedTriggers returns a boolean if a field has been set.
func (o *GetActionVersions200ResponseVersionsInnerAction) HasSupportedTriggers() bool {
	if o != nil && !IsNil(o.SupportedTriggers) {
		return true
	}

	return false
}

// SetSupportedTriggers gets a reference to the given []GetActions200ResponseActionsInnerSupportedTriggersInner and assigns it to the SupportedTriggers field.
func (o *GetActionVersions200ResponseVersionsInnerAction) SetSupportedTriggers(v []GetActions200ResponseActionsInnerSupportedTriggersInner) {
	o.SupportedTriggers = v
}

// GetAllChangesDeployed returns the AllChangesDeployed field value if set, zero value otherwise.
func (o *GetActionVersions200ResponseVersionsInnerAction) GetAllChangesDeployed() bool {
	if o == nil || IsNil(o.AllChangesDeployed) {
		var ret bool
		return ret
	}
	return *o.AllChangesDeployed
}

// GetAllChangesDeployedOk returns a tuple with the AllChangesDeployed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetActionVersions200ResponseVersionsInnerAction) GetAllChangesDeployedOk() (*bool, bool) {
	if o == nil || IsNil(o.AllChangesDeployed) {
		return nil, false
	}
	return o.AllChangesDeployed, true
}

// HasAllChangesDeployed returns a boolean if a field has been set.
func (o *GetActionVersions200ResponseVersionsInnerAction) HasAllChangesDeployed() bool {
	if o != nil && !IsNil(o.AllChangesDeployed) {
		return true
	}

	return false
}

// SetAllChangesDeployed gets a reference to the given bool and assigns it to the AllChangesDeployed field.
func (o *GetActionVersions200ResponseVersionsInnerAction) SetAllChangesDeployed(v bool) {
	o.AllChangesDeployed = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GetActionVersions200ResponseVersionsInnerAction) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetActionVersions200ResponseVersionsInnerAction) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GetActionVersions200ResponseVersionsInnerAction) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *GetActionVersions200ResponseVersionsInnerAction) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GetActionVersions200ResponseVersionsInnerAction) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetActionVersions200ResponseVersionsInnerAction) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GetActionVersions200ResponseVersionsInnerAction) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *GetActionVersions200ResponseVersionsInnerAction) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o GetActionVersions200ResponseVersionsInnerAction) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetActionVersions200ResponseVersionsInnerAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SupportedTriggers) {
		toSerialize["supported_triggers"] = o.SupportedTriggers
	}
	if !IsNil(o.AllChangesDeployed) {
		toSerialize["all_changes_deployed"] = o.AllChangesDeployed
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableGetActionVersions200ResponseVersionsInnerAction struct {
	value *GetActionVersions200ResponseVersionsInnerAction
	isSet bool
}

func (v NullableGetActionVersions200ResponseVersionsInnerAction) Get() *GetActionVersions200ResponseVersionsInnerAction {
	return v.value
}

func (v *NullableGetActionVersions200ResponseVersionsInnerAction) Set(val *GetActionVersions200ResponseVersionsInnerAction) {
	v.value = val
	v.isSet = true
}

func (v NullableGetActionVersions200ResponseVersionsInnerAction) IsSet() bool {
	return v.isSet
}

func (v *NullableGetActionVersions200ResponseVersionsInnerAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetActionVersions200ResponseVersionsInnerAction(val *GetActionVersions200ResponseVersionsInnerAction) *NullableGetActionVersions200ResponseVersionsInnerAction {
	return &NullableGetActionVersions200ResponseVersionsInnerAction{value: val, isSet: true}
}

func (v NullableGetActionVersions200ResponseVersionsInnerAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetActionVersions200ResponseVersionsInnerAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
