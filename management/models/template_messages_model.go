/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// TemplateMessages struct for TemplateMessages
type TemplateMessages struct {
	// Message sent to the user when they are invited to enroll with a phone number.
	EnrollmentMessage string `json:"enrollment_message"`
	// Message sent to the user when they are prompted to verify their account.
	VerificationMessage string `json:"verification_message"`
}

type _TemplateMessages TemplateMessages

// GetEnrollmentMessage returns the EnrollmentMessage field value
func (o *TemplateMessages) GetEnrollmentMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnrollmentMessage
}

// GetEnrollmentMessageOk returns a tuple with the EnrollmentMessage field value
// and a boolean to check if the value has been set.
func (o *TemplateMessages) GetEnrollmentMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnrollmentMessage, true
}

// SetEnrollmentMessage sets field value
func (o *TemplateMessages) SetEnrollmentMessage(v string) {
	o.EnrollmentMessage = v
}

// GetVerificationMessage returns the VerificationMessage field value
func (o *TemplateMessages) GetVerificationMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VerificationMessage
}

// GetVerificationMessageOk returns a tuple with the VerificationMessage field value
// and a boolean to check if the value has been set.
func (o *TemplateMessages) GetVerificationMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VerificationMessage, true
}

// SetVerificationMessage sets field value
func (o *TemplateMessages) SetVerificationMessage(v string) {
	o.VerificationMessage = v
}

func (o TemplateMessages) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateMessages) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enrollment_message"] = o.EnrollmentMessage
	toSerialize["verification_message"] = o.VerificationMessage
	return toSerialize, nil
}

func (o *TemplateMessages) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"enrollment_message",
		"verification_message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTemplateMessages := _TemplateMessages{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varTemplateMessages)

	if err != nil {
		return err
	}

	*o = TemplateMessages(varTemplateMessages)

	return err
}

type NullableTemplateMessages struct {
	value *TemplateMessages
	isSet bool
}

func (v NullableTemplateMessages) Get() *TemplateMessages {
	return v.value
}

func (v *NullableTemplateMessages) Set(val *TemplateMessages) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateMessages) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateMessages) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateMessages(val *TemplateMessages) *NullableTemplateMessages {
	return &NullableTemplateMessages{value: val, isSet: true}
}

func (v NullableTemplateMessages) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateMessages) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
