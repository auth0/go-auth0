/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ConnectionCreateOptionsPasskeyOptions Options for the passkey authentication method
type ConnectionCreateOptionsPasskeyOptions struct {
	ChallengeUi *ConnectionCreateOptionsPasskeyOptionsChallengeUi `json:"challenge_ui,omitempty"`
	// Enables or disables progressive enrollment of passkeys for the connection.
	ProgressiveEnrollmentEnabled *bool `json:"progressive_enrollment_enabled,omitempty"`
	// Enables or disables enrollment prompt for local passkey when user authenticates using a cross-device passkey for the connection.
	LocalEnrollmentEnabled *bool `json:"local_enrollment_enabled,omitempty"`
}

// GetChallengeUi returns the ChallengeUi field value if set, zero value otherwise.
func (o *ConnectionCreateOptionsPasskeyOptions) GetChallengeUi() ConnectionCreateOptionsPasskeyOptionsChallengeUi {
	if o == nil || IsNil(o.ChallengeUi) {
		var ret ConnectionCreateOptionsPasskeyOptionsChallengeUi
		return ret
	}
	return *o.ChallengeUi
}

// GetChallengeUiOk returns a tuple with the ChallengeUi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionCreateOptionsPasskeyOptions) GetChallengeUiOk() (*ConnectionCreateOptionsPasskeyOptionsChallengeUi, bool) {
	if o == nil || IsNil(o.ChallengeUi) {
		return nil, false
	}
	return o.ChallengeUi, true
}

// HasChallengeUi returns a boolean if a field has been set.
func (o *ConnectionCreateOptionsPasskeyOptions) HasChallengeUi() bool {
	if o != nil && !IsNil(o.ChallengeUi) {
		return true
	}

	return false
}

// SetChallengeUi gets a reference to the given ConnectionCreateOptionsPasskeyOptionsChallengeUi and assigns it to the ChallengeUi field.
func (o *ConnectionCreateOptionsPasskeyOptions) SetChallengeUi(v ConnectionCreateOptionsPasskeyOptionsChallengeUi) {
	o.ChallengeUi = &v
}

// GetProgressiveEnrollmentEnabled returns the ProgressiveEnrollmentEnabled field value if set, zero value otherwise.
func (o *ConnectionCreateOptionsPasskeyOptions) GetProgressiveEnrollmentEnabled() bool {
	if o == nil || IsNil(o.ProgressiveEnrollmentEnabled) {
		var ret bool
		return ret
	}
	return *o.ProgressiveEnrollmentEnabled
}

// GetProgressiveEnrollmentEnabledOk returns a tuple with the ProgressiveEnrollmentEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionCreateOptionsPasskeyOptions) GetProgressiveEnrollmentEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ProgressiveEnrollmentEnabled) {
		return nil, false
	}
	return o.ProgressiveEnrollmentEnabled, true
}

// HasProgressiveEnrollmentEnabled returns a boolean if a field has been set.
func (o *ConnectionCreateOptionsPasskeyOptions) HasProgressiveEnrollmentEnabled() bool {
	if o != nil && !IsNil(o.ProgressiveEnrollmentEnabled) {
		return true
	}

	return false
}

// SetProgressiveEnrollmentEnabled gets a reference to the given bool and assigns it to the ProgressiveEnrollmentEnabled field.
func (o *ConnectionCreateOptionsPasskeyOptions) SetProgressiveEnrollmentEnabled(v bool) {
	o.ProgressiveEnrollmentEnabled = &v
}

// GetLocalEnrollmentEnabled returns the LocalEnrollmentEnabled field value if set, zero value otherwise.
func (o *ConnectionCreateOptionsPasskeyOptions) GetLocalEnrollmentEnabled() bool {
	if o == nil || IsNil(o.LocalEnrollmentEnabled) {
		var ret bool
		return ret
	}
	return *o.LocalEnrollmentEnabled
}

// GetLocalEnrollmentEnabledOk returns a tuple with the LocalEnrollmentEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionCreateOptionsPasskeyOptions) GetLocalEnrollmentEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.LocalEnrollmentEnabled) {
		return nil, false
	}
	return o.LocalEnrollmentEnabled, true
}

// HasLocalEnrollmentEnabled returns a boolean if a field has been set.
func (o *ConnectionCreateOptionsPasskeyOptions) HasLocalEnrollmentEnabled() bool {
	if o != nil && !IsNil(o.LocalEnrollmentEnabled) {
		return true
	}

	return false
}

// SetLocalEnrollmentEnabled gets a reference to the given bool and assigns it to the LocalEnrollmentEnabled field.
func (o *ConnectionCreateOptionsPasskeyOptions) SetLocalEnrollmentEnabled(v bool) {
	o.LocalEnrollmentEnabled = &v
}

func (o ConnectionCreateOptionsPasskeyOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionCreateOptionsPasskeyOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChallengeUi) {
		toSerialize["challenge_ui"] = o.ChallengeUi
	}
	if !IsNil(o.ProgressiveEnrollmentEnabled) {
		toSerialize["progressive_enrollment_enabled"] = o.ProgressiveEnrollmentEnabled
	}
	if !IsNil(o.LocalEnrollmentEnabled) {
		toSerialize["local_enrollment_enabled"] = o.LocalEnrollmentEnabled
	}
	return toSerialize, nil
}

type NullableConnectionCreateOptionsPasskeyOptions struct {
	value *ConnectionCreateOptionsPasskeyOptions
	isSet bool
}

func (v NullableConnectionCreateOptionsPasskeyOptions) Get() *ConnectionCreateOptionsPasskeyOptions {
	return v.value
}

func (v *NullableConnectionCreateOptionsPasskeyOptions) Set(val *ConnectionCreateOptionsPasskeyOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionCreateOptionsPasskeyOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionCreateOptionsPasskeyOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionCreateOptionsPasskeyOptions(val *ConnectionCreateOptionsPasskeyOptions) *NullableConnectionCreateOptionsPasskeyOptions {
	return &NullableConnectionCreateOptionsPasskeyOptions{value: val, isSet: true}
}

func (v NullableConnectionCreateOptionsPasskeyOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionCreateOptionsPasskeyOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
