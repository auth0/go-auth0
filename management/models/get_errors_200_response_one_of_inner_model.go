/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GetErrors200ResponseOneOfInner struct for GetErrors200ResponseOneOfInner
type GetErrors200ResponseOneOfInner struct {
	// User, as provided in the import file
	User map[string]interface{} `json:"user,omitempty"`
	// Errors importing the user.
	Errors []GetErrors200ResponseOneOfInnerErrorsInner `json:"errors,omitempty"`
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *GetErrors200ResponseOneOfInner) GetUser() map[string]interface{} {
	if o == nil || IsNil(o.User) {
		var ret map[string]interface{}
		return ret
	}
	return o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetErrors200ResponseOneOfInner) GetUserOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.User) {
		return map[string]interface{}{}, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *GetErrors200ResponseOneOfInner) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given map[string]interface{} and assigns it to the User field.
func (o *GetErrors200ResponseOneOfInner) SetUser(v map[string]interface{}) {
	o.User = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *GetErrors200ResponseOneOfInner) GetErrors() []GetErrors200ResponseOneOfInnerErrorsInner {
	if o == nil || IsNil(o.Errors) {
		var ret []GetErrors200ResponseOneOfInnerErrorsInner
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetErrors200ResponseOneOfInner) GetErrorsOk() ([]GetErrors200ResponseOneOfInnerErrorsInner, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *GetErrors200ResponseOneOfInner) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []GetErrors200ResponseOneOfInnerErrorsInner and assigns it to the Errors field.
func (o *GetErrors200ResponseOneOfInner) SetErrors(v []GetErrors200ResponseOneOfInnerErrorsInner) {
	o.Errors = v
}

func (o GetErrors200ResponseOneOfInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetErrors200ResponseOneOfInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	return toSerialize, nil
}

type NullableGetErrors200ResponseOneOfInner struct {
	value *GetErrors200ResponseOneOfInner
	isSet bool
}

func (v NullableGetErrors200ResponseOneOfInner) Get() *GetErrors200ResponseOneOfInner {
	return v.value
}

func (v *NullableGetErrors200ResponseOneOfInner) Set(val *GetErrors200ResponseOneOfInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetErrors200ResponseOneOfInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetErrors200ResponseOneOfInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetErrors200ResponseOneOfInner(val *GetErrors200ResponseOneOfInner) *NullableGetErrors200ResponseOneOfInner {
	return &NullableGetErrors200ResponseOneOfInner{value: val, isSet: true}
}

func (v NullableGetErrors200ResponseOneOfInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetErrors200ResponseOneOfInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
