/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientUpdateMobileAndroid Configuration related to Android native apps
type ClientUpdateMobileAndroid struct {
	// Application package name found in <code>AndroidManifest.xml</code>
	AppPackageName *string `json:"app_package_name,omitempty"`
	// The SHA256 fingerprints of your app's signing certificate. Multiple fingerprints can be used to support different versions of your app, such as debug and production builds
	Sha256CertFingerprints []string `json:"sha256_cert_fingerprints,omitempty"`
}

// GetAppPackageName returns the AppPackageName field value if set, zero value otherwise.
func (o *ClientUpdateMobileAndroid) GetAppPackageName() string {
	if o == nil || IsNil(o.AppPackageName) {
		var ret string
		return ret
	}
	return *o.AppPackageName
}

// GetAppPackageNameOk returns a tuple with the AppPackageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateMobileAndroid) GetAppPackageNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppPackageName) {
		return nil, false
	}
	return o.AppPackageName, true
}

// HasAppPackageName returns a boolean if a field has been set.
func (o *ClientUpdateMobileAndroid) HasAppPackageName() bool {
	if o != nil && !IsNil(o.AppPackageName) {
		return true
	}

	return false
}

// SetAppPackageName gets a reference to the given string and assigns it to the AppPackageName field.
func (o *ClientUpdateMobileAndroid) SetAppPackageName(v string) {
	o.AppPackageName = &v
}

// GetSha256CertFingerprints returns the Sha256CertFingerprints field value if set, zero value otherwise.
func (o *ClientUpdateMobileAndroid) GetSha256CertFingerprints() []string {
	if o == nil || IsNil(o.Sha256CertFingerprints) {
		var ret []string
		return ret
	}
	return o.Sha256CertFingerprints
}

// GetSha256CertFingerprintsOk returns a tuple with the Sha256CertFingerprints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdateMobileAndroid) GetSha256CertFingerprintsOk() ([]string, bool) {
	if o == nil || IsNil(o.Sha256CertFingerprints) {
		return nil, false
	}
	return o.Sha256CertFingerprints, true
}

// HasSha256CertFingerprints returns a boolean if a field has been set.
func (o *ClientUpdateMobileAndroid) HasSha256CertFingerprints() bool {
	if o != nil && !IsNil(o.Sha256CertFingerprints) {
		return true
	}

	return false
}

// SetSha256CertFingerprints gets a reference to the given []string and assigns it to the Sha256CertFingerprints field.
func (o *ClientUpdateMobileAndroid) SetSha256CertFingerprints(v []string) {
	o.Sha256CertFingerprints = v
}

func (o ClientUpdateMobileAndroid) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientUpdateMobileAndroid) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppPackageName) {
		toSerialize["app_package_name"] = o.AppPackageName
	}
	if !IsNil(o.Sha256CertFingerprints) {
		toSerialize["sha256_cert_fingerprints"] = o.Sha256CertFingerprints
	}
	return toSerialize, nil
}

type NullableClientUpdateMobileAndroid struct {
	value *ClientUpdateMobileAndroid
	isSet bool
}

func (v NullableClientUpdateMobileAndroid) Get() *ClientUpdateMobileAndroid {
	return v.value
}

func (v *NullableClientUpdateMobileAndroid) Set(val *ClientUpdateMobileAndroid) {
	v.value = val
	v.isSet = true
}

func (v NullableClientUpdateMobileAndroid) IsSet() bool {
	return v.isSet
}

func (v *NullableClientUpdateMobileAndroid) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientUpdateMobileAndroid(val *ClientUpdateMobileAndroid) *NullableClientUpdateMobileAndroid {
	return &NullableClientUpdateMobileAndroid{value: val, isSet: true}
}

func (v NullableClientUpdateMobileAndroid) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientUpdateMobileAndroid) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
