/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PostBrandingThemeRequestFontsLinksStyle Links style
type PostBrandingThemeRequestFontsLinksStyle string

// List of post_branding_theme_request_fonts_links_style
const (
	POSTBRANDINGTHEMEREQUESTFONTSLINKSSTYLE_NORMAL     PostBrandingThemeRequestFontsLinksStyle = "normal"
	POSTBRANDINGTHEMEREQUESTFONTSLINKSSTYLE_UNDERLINED PostBrandingThemeRequestFontsLinksStyle = "underlined"
)

// All allowed values of PostBrandingThemeRequestFontsLinksStyle enum
var AllowedPostBrandingThemeRequestFontsLinksStyleEnumValues = []PostBrandingThemeRequestFontsLinksStyle{
	"normal",
	"underlined",
}

func (v *PostBrandingThemeRequestFontsLinksStyle) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PostBrandingThemeRequestFontsLinksStyle(value)
	for _, existing := range AllowedPostBrandingThemeRequestFontsLinksStyleEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PostBrandingThemeRequestFontsLinksStyle", value)
}

// NewPostBrandingThemeRequestFontsLinksStyleFromValue returns a pointer to a valid PostBrandingThemeRequestFontsLinksStyle
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPostBrandingThemeRequestFontsLinksStyleFromValue(v string) (*PostBrandingThemeRequestFontsLinksStyle, error) {
	ev := PostBrandingThemeRequestFontsLinksStyle(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PostBrandingThemeRequestFontsLinksStyle: valid values are %v", v, AllowedPostBrandingThemeRequestFontsLinksStyleEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PostBrandingThemeRequestFontsLinksStyle) IsValid() bool {
	for _, existing := range AllowedPostBrandingThemeRequestFontsLinksStyleEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to post_branding_theme_request_fonts_links_style value
func (v PostBrandingThemeRequestFontsLinksStyle) Ptr() *PostBrandingThemeRequestFontsLinksStyle {
	return &v
}

type NullablePostBrandingThemeRequestFontsLinksStyle struct {
	value *PostBrandingThemeRequestFontsLinksStyle
	isSet bool
}

func (v NullablePostBrandingThemeRequestFontsLinksStyle) Get() *PostBrandingThemeRequestFontsLinksStyle {
	return v.value
}

func (v *NullablePostBrandingThemeRequestFontsLinksStyle) Set(val *PostBrandingThemeRequestFontsLinksStyle) {
	v.value = val
	v.isSet = true
}

func (v NullablePostBrandingThemeRequestFontsLinksStyle) IsSet() bool {
	return v.isSet
}

func (v *NullablePostBrandingThemeRequestFontsLinksStyle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostBrandingThemeRequestFontsLinksStyle(val *PostBrandingThemeRequestFontsLinksStyle) *NullablePostBrandingThemeRequestFontsLinksStyle {
	return &NullablePostBrandingThemeRequestFontsLinksStyle{value: val, isSet: true}
}

func (v NullablePostBrandingThemeRequestFontsLinksStyle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostBrandingThemeRequestFontsLinksStyle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
