/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// PostBrandingThemeRequestPageBackground struct for PostBrandingThemeRequestPageBackground
type PostBrandingThemeRequestPageBackground struct {
	// Background color
	BackgroundColor string `json:"background_color"`
	// Background image url
	BackgroundImageUrl string                                           `json:"background_image_url"`
	PageLayout         PostBrandingThemeRequestPageBackgroundPageLayout `json:"page_layout"`
}

type _PostBrandingThemeRequestPageBackground PostBrandingThemeRequestPageBackground

// GetBackgroundColor returns the BackgroundColor field value
func (o *PostBrandingThemeRequestPageBackground) GetBackgroundColor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackgroundColor
}

// GetBackgroundColorOk returns a tuple with the BackgroundColor field value
// and a boolean to check if the value has been set.
func (o *PostBrandingThemeRequestPageBackground) GetBackgroundColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackgroundColor, true
}

// SetBackgroundColor sets field value
func (o *PostBrandingThemeRequestPageBackground) SetBackgroundColor(v string) {
	o.BackgroundColor = v
}

// GetBackgroundImageUrl returns the BackgroundImageUrl field value
func (o *PostBrandingThemeRequestPageBackground) GetBackgroundImageUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackgroundImageUrl
}

// GetBackgroundImageUrlOk returns a tuple with the BackgroundImageUrl field value
// and a boolean to check if the value has been set.
func (o *PostBrandingThemeRequestPageBackground) GetBackgroundImageUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackgroundImageUrl, true
}

// SetBackgroundImageUrl sets field value
func (o *PostBrandingThemeRequestPageBackground) SetBackgroundImageUrl(v string) {
	o.BackgroundImageUrl = v
}

// GetPageLayout returns the PageLayout field value
func (o *PostBrandingThemeRequestPageBackground) GetPageLayout() PostBrandingThemeRequestPageBackgroundPageLayout {
	if o == nil {
		var ret PostBrandingThemeRequestPageBackgroundPageLayout
		return ret
	}

	return o.PageLayout
}

// GetPageLayoutOk returns a tuple with the PageLayout field value
// and a boolean to check if the value has been set.
func (o *PostBrandingThemeRequestPageBackground) GetPageLayoutOk() (*PostBrandingThemeRequestPageBackgroundPageLayout, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageLayout, true
}

// SetPageLayout sets field value
func (o *PostBrandingThemeRequestPageBackground) SetPageLayout(v PostBrandingThemeRequestPageBackgroundPageLayout) {
	o.PageLayout = v
}

func (o PostBrandingThemeRequestPageBackground) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostBrandingThemeRequestPageBackground) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["background_color"] = o.BackgroundColor
	toSerialize["background_image_url"] = o.BackgroundImageUrl
	toSerialize["page_layout"] = o.PageLayout
	return toSerialize, nil
}

func (o *PostBrandingThemeRequestPageBackground) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"background_color",
		"background_image_url",
		"page_layout",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostBrandingThemeRequestPageBackground := _PostBrandingThemeRequestPageBackground{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostBrandingThemeRequestPageBackground)

	if err != nil {
		return err
	}

	*o = PostBrandingThemeRequestPageBackground(varPostBrandingThemeRequestPageBackground)

	return err
}

type NullablePostBrandingThemeRequestPageBackground struct {
	value *PostBrandingThemeRequestPageBackground
	isSet bool
}

func (v NullablePostBrandingThemeRequestPageBackground) Get() *PostBrandingThemeRequestPageBackground {
	return v.value
}

func (v *NullablePostBrandingThemeRequestPageBackground) Set(val *PostBrandingThemeRequestPageBackground) {
	v.value = val
	v.isSet = true
}

func (v NullablePostBrandingThemeRequestPageBackground) IsSet() bool {
	return v.isSet
}

func (v *NullablePostBrandingThemeRequestPageBackground) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostBrandingThemeRequestPageBackground(val *PostBrandingThemeRequestPageBackground) *NullablePostBrandingThemeRequestPageBackground {
	return &NullablePostBrandingThemeRequestPageBackground{value: val, isSet: true}
}

func (v NullablePostBrandingThemeRequestPageBackground) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostBrandingThemeRequestPageBackground) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
