/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GetRefreshToken200Response struct for GetRefreshToken200Response
type GetRefreshToken200Response struct {
	// The ID of the refresh token
	Id *string `json:"id,omitempty"`
	// ID of the user which can be used when interacting with other APIs.
	UserId        *string                                         `json:"user_id,omitempty"`
	CreatedAt     NullableGetRefreshToken200ResponseCreatedAt     `json:"created_at,omitempty"`
	IdleExpiresAt NullableGetRefreshToken200ResponseIdleExpiresAt `json:"idle_expires_at,omitempty"`
	ExpiresAt     NullableGetRefreshToken200ResponseExpiresAt     `json:"expires_at,omitempty"`
	Device        *GetRefreshToken200ResponseDevice               `json:"device,omitempty"`
	// ID of the client application granted with this refresh token
	ClientId *string `json:"client_id,omitempty"`
	// ID of the authenticated session used to obtain this refresh-token
	SessionId NullableString `json:"session_id,omitempty"`
	// True if the token is a rotating refresh token
	Rotating *bool `json:"rotating,omitempty"`
	// A list of the resource server IDs associated to this refresh-token and their granted scopes
	ResourceServers      []GetRefreshToken200ResponseResourceServersInner  `json:"resource_servers,omitempty"`
	LastExchangedAt      NullableGetRefreshToken200ResponseLastExchangedAt `json:"last_exchanged_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetRefreshToken200Response GetRefreshToken200Response

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetRefreshToken200Response) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRefreshToken200Response) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetRefreshToken200Response) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetRefreshToken200Response) SetId(v string) {
	o.Id = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *GetRefreshToken200Response) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRefreshToken200Response) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *GetRefreshToken200Response) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *GetRefreshToken200Response) SetUserId(v string) {
	o.UserId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetRefreshToken200Response) GetCreatedAt() GetRefreshToken200ResponseCreatedAt {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret GetRefreshToken200ResponseCreatedAt
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetRefreshToken200Response) GetCreatedAtOk() (*GetRefreshToken200ResponseCreatedAt, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GetRefreshToken200Response) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableGetRefreshToken200ResponseCreatedAt and assigns it to the CreatedAt field.
func (o *GetRefreshToken200Response) SetCreatedAt(v GetRefreshToken200ResponseCreatedAt) {
	o.CreatedAt.Set(&v)
}

// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *GetRefreshToken200Response) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *GetRefreshToken200Response) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetIdleExpiresAt returns the IdleExpiresAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetRefreshToken200Response) GetIdleExpiresAt() GetRefreshToken200ResponseIdleExpiresAt {
	if o == nil || IsNil(o.IdleExpiresAt.Get()) {
		var ret GetRefreshToken200ResponseIdleExpiresAt
		return ret
	}
	return *o.IdleExpiresAt.Get()
}

// GetIdleExpiresAtOk returns a tuple with the IdleExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetRefreshToken200Response) GetIdleExpiresAtOk() (*GetRefreshToken200ResponseIdleExpiresAt, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdleExpiresAt.Get(), o.IdleExpiresAt.IsSet()
}

// HasIdleExpiresAt returns a boolean if a field has been set.
func (o *GetRefreshToken200Response) HasIdleExpiresAt() bool {
	if o != nil && o.IdleExpiresAt.IsSet() {
		return true
	}

	return false
}

// SetIdleExpiresAt gets a reference to the given NullableGetRefreshToken200ResponseIdleExpiresAt and assigns it to the IdleExpiresAt field.
func (o *GetRefreshToken200Response) SetIdleExpiresAt(v GetRefreshToken200ResponseIdleExpiresAt) {
	o.IdleExpiresAt.Set(&v)
}

// SetIdleExpiresAtNil sets the value for IdleExpiresAt to be an explicit nil
func (o *GetRefreshToken200Response) SetIdleExpiresAtNil() {
	o.IdleExpiresAt.Set(nil)
}

// UnsetIdleExpiresAt ensures that no value is present for IdleExpiresAt, not even an explicit nil
func (o *GetRefreshToken200Response) UnsetIdleExpiresAt() {
	o.IdleExpiresAt.Unset()
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetRefreshToken200Response) GetExpiresAt() GetRefreshToken200ResponseExpiresAt {
	if o == nil || IsNil(o.ExpiresAt.Get()) {
		var ret GetRefreshToken200ResponseExpiresAt
		return ret
	}
	return *o.ExpiresAt.Get()
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetRefreshToken200Response) GetExpiresAtOk() (*GetRefreshToken200ResponseExpiresAt, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiresAt.Get(), o.ExpiresAt.IsSet()
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *GetRefreshToken200Response) HasExpiresAt() bool {
	if o != nil && o.ExpiresAt.IsSet() {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given NullableGetRefreshToken200ResponseExpiresAt and assigns it to the ExpiresAt field.
func (o *GetRefreshToken200Response) SetExpiresAt(v GetRefreshToken200ResponseExpiresAt) {
	o.ExpiresAt.Set(&v)
}

// SetExpiresAtNil sets the value for ExpiresAt to be an explicit nil
func (o *GetRefreshToken200Response) SetExpiresAtNil() {
	o.ExpiresAt.Set(nil)
}

// UnsetExpiresAt ensures that no value is present for ExpiresAt, not even an explicit nil
func (o *GetRefreshToken200Response) UnsetExpiresAt() {
	o.ExpiresAt.Unset()
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *GetRefreshToken200Response) GetDevice() GetRefreshToken200ResponseDevice {
	if o == nil || IsNil(o.Device) {
		var ret GetRefreshToken200ResponseDevice
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRefreshToken200Response) GetDeviceOk() (*GetRefreshToken200ResponseDevice, bool) {
	if o == nil || IsNil(o.Device) {
		return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *GetRefreshToken200Response) HasDevice() bool {
	if o != nil && !IsNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given GetRefreshToken200ResponseDevice and assigns it to the Device field.
func (o *GetRefreshToken200Response) SetDevice(v GetRefreshToken200ResponseDevice) {
	o.Device = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *GetRefreshToken200Response) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRefreshToken200Response) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *GetRefreshToken200Response) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *GetRefreshToken200Response) SetClientId(v string) {
	o.ClientId = &v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetRefreshToken200Response) GetSessionId() string {
	if o == nil || IsNil(o.SessionId.Get()) {
		var ret string
		return ret
	}
	return *o.SessionId.Get()
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetRefreshToken200Response) GetSessionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SessionId.Get(), o.SessionId.IsSet()
}

// HasSessionId returns a boolean if a field has been set.
func (o *GetRefreshToken200Response) HasSessionId() bool {
	if o != nil && o.SessionId.IsSet() {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given NullableString and assigns it to the SessionId field.
func (o *GetRefreshToken200Response) SetSessionId(v string) {
	o.SessionId.Set(&v)
}

// SetSessionIdNil sets the value for SessionId to be an explicit nil
func (o *GetRefreshToken200Response) SetSessionIdNil() {
	o.SessionId.Set(nil)
}

// UnsetSessionId ensures that no value is present for SessionId, not even an explicit nil
func (o *GetRefreshToken200Response) UnsetSessionId() {
	o.SessionId.Unset()
}

// GetRotating returns the Rotating field value if set, zero value otherwise.
func (o *GetRefreshToken200Response) GetRotating() bool {
	if o == nil || IsNil(o.Rotating) {
		var ret bool
		return ret
	}
	return *o.Rotating
}

// GetRotatingOk returns a tuple with the Rotating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRefreshToken200Response) GetRotatingOk() (*bool, bool) {
	if o == nil || IsNil(o.Rotating) {
		return nil, false
	}
	return o.Rotating, true
}

// HasRotating returns a boolean if a field has been set.
func (o *GetRefreshToken200Response) HasRotating() bool {
	if o != nil && !IsNil(o.Rotating) {
		return true
	}

	return false
}

// SetRotating gets a reference to the given bool and assigns it to the Rotating field.
func (o *GetRefreshToken200Response) SetRotating(v bool) {
	o.Rotating = &v
}

// GetResourceServers returns the ResourceServers field value if set, zero value otherwise.
func (o *GetRefreshToken200Response) GetResourceServers() []GetRefreshToken200ResponseResourceServersInner {
	if o == nil || IsNil(o.ResourceServers) {
		var ret []GetRefreshToken200ResponseResourceServersInner
		return ret
	}
	return o.ResourceServers
}

// GetResourceServersOk returns a tuple with the ResourceServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRefreshToken200Response) GetResourceServersOk() ([]GetRefreshToken200ResponseResourceServersInner, bool) {
	if o == nil || IsNil(o.ResourceServers) {
		return nil, false
	}
	return o.ResourceServers, true
}

// HasResourceServers returns a boolean if a field has been set.
func (o *GetRefreshToken200Response) HasResourceServers() bool {
	if o != nil && !IsNil(o.ResourceServers) {
		return true
	}

	return false
}

// SetResourceServers gets a reference to the given []GetRefreshToken200ResponseResourceServersInner and assigns it to the ResourceServers field.
func (o *GetRefreshToken200Response) SetResourceServers(v []GetRefreshToken200ResponseResourceServersInner) {
	o.ResourceServers = v
}

// GetLastExchangedAt returns the LastExchangedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetRefreshToken200Response) GetLastExchangedAt() GetRefreshToken200ResponseLastExchangedAt {
	if o == nil || IsNil(o.LastExchangedAt.Get()) {
		var ret GetRefreshToken200ResponseLastExchangedAt
		return ret
	}
	return *o.LastExchangedAt.Get()
}

// GetLastExchangedAtOk returns a tuple with the LastExchangedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetRefreshToken200Response) GetLastExchangedAtOk() (*GetRefreshToken200ResponseLastExchangedAt, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastExchangedAt.Get(), o.LastExchangedAt.IsSet()
}

// HasLastExchangedAt returns a boolean if a field has been set.
func (o *GetRefreshToken200Response) HasLastExchangedAt() bool {
	if o != nil && o.LastExchangedAt.IsSet() {
		return true
	}

	return false
}

// SetLastExchangedAt gets a reference to the given NullableGetRefreshToken200ResponseLastExchangedAt and assigns it to the LastExchangedAt field.
func (o *GetRefreshToken200Response) SetLastExchangedAt(v GetRefreshToken200ResponseLastExchangedAt) {
	o.LastExchangedAt.Set(&v)
}

// SetLastExchangedAtNil sets the value for LastExchangedAt to be an explicit nil
func (o *GetRefreshToken200Response) SetLastExchangedAtNil() {
	o.LastExchangedAt.Set(nil)
}

// UnsetLastExchangedAt ensures that no value is present for LastExchangedAt, not even an explicit nil
func (o *GetRefreshToken200Response) UnsetLastExchangedAt() {
	o.LastExchangedAt.Unset()
}

func (o GetRefreshToken200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRefreshToken200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.IdleExpiresAt.IsSet() {
		toSerialize["idle_expires_at"] = o.IdleExpiresAt.Get()
	}
	if o.ExpiresAt.IsSet() {
		toSerialize["expires_at"] = o.ExpiresAt.Get()
	}
	if !IsNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !IsNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}
	if o.SessionId.IsSet() {
		toSerialize["session_id"] = o.SessionId.Get()
	}
	if !IsNil(o.Rotating) {
		toSerialize["rotating"] = o.Rotating
	}
	if !IsNil(o.ResourceServers) {
		toSerialize["resource_servers"] = o.ResourceServers
	}
	if o.LastExchangedAt.IsSet() {
		toSerialize["last_exchanged_at"] = o.LastExchangedAt.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetRefreshToken200Response) UnmarshalJSON(data []byte) (err error) {
	varGetRefreshToken200Response := _GetRefreshToken200Response{}

	err = json.Unmarshal(data, &varGetRefreshToken200Response)

	if err != nil {
		return err
	}

	*o = GetRefreshToken200Response(varGetRefreshToken200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "idle_expires_at")
		delete(additionalProperties, "expires_at")
		delete(additionalProperties, "device")
		delete(additionalProperties, "client_id")
		delete(additionalProperties, "session_id")
		delete(additionalProperties, "rotating")
		delete(additionalProperties, "resource_servers")
		delete(additionalProperties, "last_exchanged_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetRefreshToken200Response struct {
	value *GetRefreshToken200Response
	isSet bool
}

func (v NullableGetRefreshToken200Response) Get() *GetRefreshToken200Response {
	return v.value
}

func (v *NullableGetRefreshToken200Response) Set(val *GetRefreshToken200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRefreshToken200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRefreshToken200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRefreshToken200Response(val *GetRefreshToken200Response) *NullableGetRefreshToken200Response {
	return &NullableGetRefreshToken200Response{value: val, isSet: true}
}

func (v NullableGetRefreshToken200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRefreshToken200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
