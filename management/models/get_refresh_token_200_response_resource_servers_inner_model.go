/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetRefreshToken200ResponseResourceServersInner struct for GetRefreshToken200ResponseResourceServersInner
type GetRefreshToken200ResponseResourceServersInner struct {
	// Resource server ID
	Audience string `json:"audience"`
	// List of scopes for the refresh token
	Scopes               string `json:"scopes"`
	AdditionalProperties map[string]interface{}
}

type _GetRefreshToken200ResponseResourceServersInner GetRefreshToken200ResponseResourceServersInner

// GetAudience returns the Audience field value
func (o *GetRefreshToken200ResponseResourceServersInner) GetAudience() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value
// and a boolean to check if the value has been set.
func (o *GetRefreshToken200ResponseResourceServersInner) GetAudienceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Audience, true
}

// SetAudience sets field value
func (o *GetRefreshToken200ResponseResourceServersInner) SetAudience(v string) {
	o.Audience = v
}

// GetScopes returns the Scopes field value
func (o *GetRefreshToken200ResponseResourceServersInner) GetScopes() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value
// and a boolean to check if the value has been set.
func (o *GetRefreshToken200ResponseResourceServersInner) GetScopesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scopes, true
}

// SetScopes sets field value
func (o *GetRefreshToken200ResponseResourceServersInner) SetScopes(v string) {
	o.Scopes = v
}

func (o GetRefreshToken200ResponseResourceServersInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRefreshToken200ResponseResourceServersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["audience"] = o.Audience
	toSerialize["scopes"] = o.Scopes

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetRefreshToken200ResponseResourceServersInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"audience",
		"scopes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetRefreshToken200ResponseResourceServersInner := _GetRefreshToken200ResponseResourceServersInner{}

	err = json.Unmarshal(data, &varGetRefreshToken200ResponseResourceServersInner)

	if err != nil {
		return err
	}

	*o = GetRefreshToken200ResponseResourceServersInner(varGetRefreshToken200ResponseResourceServersInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "audience")
		delete(additionalProperties, "scopes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetRefreshToken200ResponseResourceServersInner struct {
	value *GetRefreshToken200ResponseResourceServersInner
	isSet bool
}

func (v NullableGetRefreshToken200ResponseResourceServersInner) Get() *GetRefreshToken200ResponseResourceServersInner {
	return v.value
}

func (v *NullableGetRefreshToken200ResponseResourceServersInner) Set(val *GetRefreshToken200ResponseResourceServersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRefreshToken200ResponseResourceServersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRefreshToken200ResponseResourceServersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRefreshToken200ResponseResourceServersInner(val *GetRefreshToken200ResponseResourceServersInner) *NullableGetRefreshToken200ResponseResourceServersInner {
	return &NullableGetRefreshToken200ResponseResourceServersInner{value: val, isSet: true}
}

func (v NullableGetRefreshToken200ResponseResourceServersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRefreshToken200ResponseResourceServersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
