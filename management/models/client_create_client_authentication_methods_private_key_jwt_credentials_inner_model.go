/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner struct for ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner
type ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner struct {
	CredentialType ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInnerCredentialType `json:"credential_type"`
	// Friendly name for a credential.
	Name *string `json:"name,omitempty"`
	// PEM-formatted public key (SPKI and PKCS1) or X509 certificate. Must be JSON escaped.
	Pem string                                                                   `json:"pem"`
	Alg *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInnerAlg `json:"alg,omitempty"`
	// Parse expiry from x509 certificate. If true, attempts to parse the expiry date from the provided PEM.
	ParseExpiryFromCert *bool `json:"parse_expiry_from_cert,omitempty"`
	// The ISO 8601 formatted date representing the expiration of the credential. If not specified (not recommended), the credential never expires.
	ExpiresAt *time.Time `json:"expires_at,omitempty"`
}

type _ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner

// GetCredentialType returns the CredentialType field value
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) GetCredentialType() ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInnerCredentialType {
	if o == nil {
		var ret ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInnerCredentialType
		return ret
	}

	return o.CredentialType
}

// GetCredentialTypeOk returns a tuple with the CredentialType field value
// and a boolean to check if the value has been set.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) GetCredentialTypeOk() (*ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInnerCredentialType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CredentialType, true
}

// SetCredentialType sets field value
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) SetCredentialType(v ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInnerCredentialType) {
	o.CredentialType = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) SetName(v string) {
	o.Name = &v
}

// GetPem returns the Pem field value
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) GetPem() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pem
}

// GetPemOk returns a tuple with the Pem field value
// and a boolean to check if the value has been set.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) GetPemOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pem, true
}

// SetPem sets field value
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) SetPem(v string) {
	o.Pem = v
}

// GetAlg returns the Alg field value if set, zero value otherwise.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) GetAlg() ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInnerAlg {
	if o == nil || IsNil(o.Alg) {
		var ret ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInnerAlg
		return ret
	}
	return *o.Alg
}

// GetAlgOk returns a tuple with the Alg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) GetAlgOk() (*ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInnerAlg, bool) {
	if o == nil || IsNil(o.Alg) {
		return nil, false
	}
	return o.Alg, true
}

// HasAlg returns a boolean if a field has been set.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) HasAlg() bool {
	if o != nil && !IsNil(o.Alg) {
		return true
	}

	return false
}

// SetAlg gets a reference to the given ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInnerAlg and assigns it to the Alg field.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) SetAlg(v ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInnerAlg) {
	o.Alg = &v
}

// GetParseExpiryFromCert returns the ParseExpiryFromCert field value if set, zero value otherwise.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) GetParseExpiryFromCert() bool {
	if o == nil || IsNil(o.ParseExpiryFromCert) {
		var ret bool
		return ret
	}
	return *o.ParseExpiryFromCert
}

// GetParseExpiryFromCertOk returns a tuple with the ParseExpiryFromCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) GetParseExpiryFromCertOk() (*bool, bool) {
	if o == nil || IsNil(o.ParseExpiryFromCert) {
		return nil, false
	}
	return o.ParseExpiryFromCert, true
}

// HasParseExpiryFromCert returns a boolean if a field has been set.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) HasParseExpiryFromCert() bool {
	if o != nil && !IsNil(o.ParseExpiryFromCert) {
		return true
	}

	return false
}

// SetParseExpiryFromCert gets a reference to the given bool and assigns it to the ParseExpiryFromCert field.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) SetParseExpiryFromCert(v bool) {
	o.ParseExpiryFromCert = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) GetExpiresAt() time.Time {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given time.Time and assigns it to the ExpiresAt field.
func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) SetExpiresAt(v time.Time) {
	o.ExpiresAt = &v
}

func (o ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["credential_type"] = o.CredentialType
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["pem"] = o.Pem
	if !IsNil(o.Alg) {
		toSerialize["alg"] = o.Alg
	}
	if !IsNil(o.ParseExpiryFromCert) {
		toSerialize["parse_expiry_from_cert"] = o.ParseExpiryFromCert
	}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	return toSerialize, nil
}

func (o *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"credential_type",
		"pem",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner := _ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner)

	if err != nil {
		return err
	}

	*o = ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner(varClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner)

	return err
}

type NullableClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner struct {
	value *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner
	isSet bool
}

func (v NullableClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) Get() *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner {
	return v.value
}

func (v *NullableClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) Set(val *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner(val *ClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) *NullableClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner {
	return &NullableClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner{value: val, isSet: true}
}

func (v NullableClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientCreateClientAuthenticationMethodsPrivateKeyJwtCredentialsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
