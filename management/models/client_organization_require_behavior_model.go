/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ClientOrganizationRequireBehavior Defines how to proceed during an authentication transaction when `client.organization_usage: 'require'`. Can be `no_prompt` (default), `pre_login_prompt` or `post_login_prompt`. `post_login_prompt` requires `oidc_conformant: true`.
type ClientOrganizationRequireBehavior string

// List of client_organization_require_behavior
const (
	CLIENTORGANIZATIONREQUIREBEHAVIOR_NO_PROMPT         ClientOrganizationRequireBehavior = "no_prompt"
	CLIENTORGANIZATIONREQUIREBEHAVIOR_PRE_LOGIN_PROMPT  ClientOrganizationRequireBehavior = "pre_login_prompt"
	CLIENTORGANIZATIONREQUIREBEHAVIOR_POST_LOGIN_PROMPT ClientOrganizationRequireBehavior = "post_login_prompt"
)

// All allowed values of ClientOrganizationRequireBehavior enum
var AllowedClientOrganizationRequireBehaviorEnumValues = []ClientOrganizationRequireBehavior{
	"no_prompt",
	"pre_login_prompt",
	"post_login_prompt",
}

func (v *ClientOrganizationRequireBehavior) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ClientOrganizationRequireBehavior(value)
	for _, existing := range AllowedClientOrganizationRequireBehaviorEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ClientOrganizationRequireBehavior", value)
}

// NewClientOrganizationRequireBehaviorFromValue returns a pointer to a valid ClientOrganizationRequireBehavior
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewClientOrganizationRequireBehaviorFromValue(v string) (*ClientOrganizationRequireBehavior, error) {
	ev := ClientOrganizationRequireBehavior(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ClientOrganizationRequireBehavior: valid values are %v", v, AllowedClientOrganizationRequireBehaviorEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ClientOrganizationRequireBehavior) IsValid() bool {
	for _, existing := range AllowedClientOrganizationRequireBehaviorEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to client_organization_require_behavior value
func (v ClientOrganizationRequireBehavior) Ptr() *ClientOrganizationRequireBehavior {
	return &v
}

type NullableClientOrganizationRequireBehavior struct {
	value *ClientOrganizationRequireBehavior
	isSet bool
}

func (v NullableClientOrganizationRequireBehavior) Get() *ClientOrganizationRequireBehavior {
	return v.value
}

func (v *NullableClientOrganizationRequireBehavior) Set(val *ClientOrganizationRequireBehavior) {
	v.value = val
	v.isSet = true
}

func (v NullableClientOrganizationRequireBehavior) IsSet() bool {
	return v.isSet
}

func (v *NullableClientOrganizationRequireBehavior) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientOrganizationRequireBehavior(val *ClientOrganizationRequireBehavior) *NullableClientOrganizationRequireBehavior {
	return &NullableClientOrganizationRequireBehavior{value: val, isSet: true}
}

func (v NullableClientOrganizationRequireBehavior) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientOrganizationRequireBehavior) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
