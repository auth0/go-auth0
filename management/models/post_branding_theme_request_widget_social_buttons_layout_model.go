/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PostBrandingThemeRequestWidgetSocialButtonsLayout Social buttons layout
type PostBrandingThemeRequestWidgetSocialButtonsLayout string

// List of post_branding_theme_request_widget_social_buttons_layout
const (
	POSTBRANDINGTHEMEREQUESTWIDGETSOCIALBUTTONSLAYOUT_BOTTOM PostBrandingThemeRequestWidgetSocialButtonsLayout = "bottom"
	POSTBRANDINGTHEMEREQUESTWIDGETSOCIALBUTTONSLAYOUT_TOP    PostBrandingThemeRequestWidgetSocialButtonsLayout = "top"
)

// All allowed values of PostBrandingThemeRequestWidgetSocialButtonsLayout enum
var AllowedPostBrandingThemeRequestWidgetSocialButtonsLayoutEnumValues = []PostBrandingThemeRequestWidgetSocialButtonsLayout{
	"bottom",
	"top",
}

func (v *PostBrandingThemeRequestWidgetSocialButtonsLayout) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PostBrandingThemeRequestWidgetSocialButtonsLayout(value)
	for _, existing := range AllowedPostBrandingThemeRequestWidgetSocialButtonsLayoutEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PostBrandingThemeRequestWidgetSocialButtonsLayout", value)
}

// NewPostBrandingThemeRequestWidgetSocialButtonsLayoutFromValue returns a pointer to a valid PostBrandingThemeRequestWidgetSocialButtonsLayout
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPostBrandingThemeRequestWidgetSocialButtonsLayoutFromValue(v string) (*PostBrandingThemeRequestWidgetSocialButtonsLayout, error) {
	ev := PostBrandingThemeRequestWidgetSocialButtonsLayout(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PostBrandingThemeRequestWidgetSocialButtonsLayout: valid values are %v", v, AllowedPostBrandingThemeRequestWidgetSocialButtonsLayoutEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PostBrandingThemeRequestWidgetSocialButtonsLayout) IsValid() bool {
	for _, existing := range AllowedPostBrandingThemeRequestWidgetSocialButtonsLayoutEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to post_branding_theme_request_widget_social_buttons_layout value
func (v PostBrandingThemeRequestWidgetSocialButtonsLayout) Ptr() *PostBrandingThemeRequestWidgetSocialButtonsLayout {
	return &v
}

type NullablePostBrandingThemeRequestWidgetSocialButtonsLayout struct {
	value *PostBrandingThemeRequestWidgetSocialButtonsLayout
	isSet bool
}

func (v NullablePostBrandingThemeRequestWidgetSocialButtonsLayout) Get() *PostBrandingThemeRequestWidgetSocialButtonsLayout {
	return v.value
}

func (v *NullablePostBrandingThemeRequestWidgetSocialButtonsLayout) Set(val *PostBrandingThemeRequestWidgetSocialButtonsLayout) {
	v.value = val
	v.isSet = true
}

func (v NullablePostBrandingThemeRequestWidgetSocialButtonsLayout) IsSet() bool {
	return v.isSet
}

func (v *NullablePostBrandingThemeRequestWidgetSocialButtonsLayout) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostBrandingThemeRequestWidgetSocialButtonsLayout(val *PostBrandingThemeRequestWidgetSocialButtonsLayout) *NullablePostBrandingThemeRequestWidgetSocialButtonsLayout {
	return &NullablePostBrandingThemeRequestWidgetSocialButtonsLayout{value: val, isSet: true}
}

func (v NullablePostBrandingThemeRequestWidgetSocialButtonsLayout) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostBrandingThemeRequestWidgetSocialButtonsLayout) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
