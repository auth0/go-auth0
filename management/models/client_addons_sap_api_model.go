/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientAddonsSapApi SAP API addon configuration.
type ClientAddonsSapApi struct {
	// If activated in the OAuth 2.0 client configuration (transaction SOAUTH2) the SAML attribute client_id must be set and equal the client_id form parameter of the access token request.
	Clientid *string `json:"clientid,omitempty"`
	// Name of the property in the user object that maps to a SAP username. e.g. `email`.
	UsernameAttribute *string `json:"usernameAttribute,omitempty"`
	// Your SAP OData server OAuth2 token endpoint URL.
	TokenEndpointUrl *string `json:"tokenEndpointUrl,omitempty"`
	// Requested scope for SAP APIs.
	Scope *string `json:"scope,omitempty"`
	// Service account password to use to authenticate API calls to the token endpoint.
	ServicePassword *string `json:"servicePassword,omitempty"`
	// NameID element of the Subject which can be used to express the user's identity. Defaults to `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`.
	NameIdentifierFormat *string `json:"nameIdentifierFormat,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClientAddonsSapApi ClientAddonsSapApi

// GetClientid returns the Clientid field value if set, zero value otherwise.
func (o *ClientAddonsSapApi) GetClientid() string {
	if o == nil || IsNil(o.Clientid) {
		var ret string
		return ret
	}
	return *o.Clientid
}

// GetClientidOk returns a tuple with the Clientid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAddonsSapApi) GetClientidOk() (*string, bool) {
	if o == nil || IsNil(o.Clientid) {
		return nil, false
	}
	return o.Clientid, true
}

// HasClientid returns a boolean if a field has been set.
func (o *ClientAddonsSapApi) HasClientid() bool {
	if o != nil && !IsNil(o.Clientid) {
		return true
	}

	return false
}

// SetClientid gets a reference to the given string and assigns it to the Clientid field.
func (o *ClientAddonsSapApi) SetClientid(v string) {
	o.Clientid = &v
}

// GetUsernameAttribute returns the UsernameAttribute field value if set, zero value otherwise.
func (o *ClientAddonsSapApi) GetUsernameAttribute() string {
	if o == nil || IsNil(o.UsernameAttribute) {
		var ret string
		return ret
	}
	return *o.UsernameAttribute
}

// GetUsernameAttributeOk returns a tuple with the UsernameAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAddonsSapApi) GetUsernameAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.UsernameAttribute) {
		return nil, false
	}
	return o.UsernameAttribute, true
}

// HasUsernameAttribute returns a boolean if a field has been set.
func (o *ClientAddonsSapApi) HasUsernameAttribute() bool {
	if o != nil && !IsNil(o.UsernameAttribute) {
		return true
	}

	return false
}

// SetUsernameAttribute gets a reference to the given string and assigns it to the UsernameAttribute field.
func (o *ClientAddonsSapApi) SetUsernameAttribute(v string) {
	o.UsernameAttribute = &v
}

// GetTokenEndpointUrl returns the TokenEndpointUrl field value if set, zero value otherwise.
func (o *ClientAddonsSapApi) GetTokenEndpointUrl() string {
	if o == nil || IsNil(o.TokenEndpointUrl) {
		var ret string
		return ret
	}
	return *o.TokenEndpointUrl
}

// GetTokenEndpointUrlOk returns a tuple with the TokenEndpointUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAddonsSapApi) GetTokenEndpointUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TokenEndpointUrl) {
		return nil, false
	}
	return o.TokenEndpointUrl, true
}

// HasTokenEndpointUrl returns a boolean if a field has been set.
func (o *ClientAddonsSapApi) HasTokenEndpointUrl() bool {
	if o != nil && !IsNil(o.TokenEndpointUrl) {
		return true
	}

	return false
}

// SetTokenEndpointUrl gets a reference to the given string and assigns it to the TokenEndpointUrl field.
func (o *ClientAddonsSapApi) SetTokenEndpointUrl(v string) {
	o.TokenEndpointUrl = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *ClientAddonsSapApi) GetScope() string {
	if o == nil || IsNil(o.Scope) {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAddonsSapApi) GetScopeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *ClientAddonsSapApi) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *ClientAddonsSapApi) SetScope(v string) {
	o.Scope = &v
}

// GetServicePassword returns the ServicePassword field value if set, zero value otherwise.
func (o *ClientAddonsSapApi) GetServicePassword() string {
	if o == nil || IsNil(o.ServicePassword) {
		var ret string
		return ret
	}
	return *o.ServicePassword
}

// GetServicePasswordOk returns a tuple with the ServicePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAddonsSapApi) GetServicePasswordOk() (*string, bool) {
	if o == nil || IsNil(o.ServicePassword) {
		return nil, false
	}
	return o.ServicePassword, true
}

// HasServicePassword returns a boolean if a field has been set.
func (o *ClientAddonsSapApi) HasServicePassword() bool {
	if o != nil && !IsNil(o.ServicePassword) {
		return true
	}

	return false
}

// SetServicePassword gets a reference to the given string and assigns it to the ServicePassword field.
func (o *ClientAddonsSapApi) SetServicePassword(v string) {
	o.ServicePassword = &v
}

// GetNameIdentifierFormat returns the NameIdentifierFormat field value if set, zero value otherwise.
func (o *ClientAddonsSapApi) GetNameIdentifierFormat() string {
	if o == nil || IsNil(o.NameIdentifierFormat) {
		var ret string
		return ret
	}
	return *o.NameIdentifierFormat
}

// GetNameIdentifierFormatOk returns a tuple with the NameIdentifierFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAddonsSapApi) GetNameIdentifierFormatOk() (*string, bool) {
	if o == nil || IsNil(o.NameIdentifierFormat) {
		return nil, false
	}
	return o.NameIdentifierFormat, true
}

// HasNameIdentifierFormat returns a boolean if a field has been set.
func (o *ClientAddonsSapApi) HasNameIdentifierFormat() bool {
	if o != nil && !IsNil(o.NameIdentifierFormat) {
		return true
	}

	return false
}

// SetNameIdentifierFormat gets a reference to the given string and assigns it to the NameIdentifierFormat field.
func (o *ClientAddonsSapApi) SetNameIdentifierFormat(v string) {
	o.NameIdentifierFormat = &v
}

func (o ClientAddonsSapApi) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientAddonsSapApi) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Clientid) {
		toSerialize["clientid"] = o.Clientid
	}
	if !IsNil(o.UsernameAttribute) {
		toSerialize["usernameAttribute"] = o.UsernameAttribute
	}
	if !IsNil(o.TokenEndpointUrl) {
		toSerialize["tokenEndpointUrl"] = o.TokenEndpointUrl
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	if !IsNil(o.ServicePassword) {
		toSerialize["servicePassword"] = o.ServicePassword
	}
	if !IsNil(o.NameIdentifierFormat) {
		toSerialize["nameIdentifierFormat"] = o.NameIdentifierFormat
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClientAddonsSapApi) UnmarshalJSON(data []byte) (err error) {
	varClientAddonsSapApi := _ClientAddonsSapApi{}

	err = json.Unmarshal(data, &varClientAddonsSapApi)

	if err != nil {
		return err
	}

	*o = ClientAddonsSapApi(varClientAddonsSapApi)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "clientid")
		delete(additionalProperties, "usernameAttribute")
		delete(additionalProperties, "tokenEndpointUrl")
		delete(additionalProperties, "scope")
		delete(additionalProperties, "servicePassword")
		delete(additionalProperties, "nameIdentifierFormat")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClientAddonsSapApi struct {
	value *ClientAddonsSapApi
	isSet bool
}

func (v NullableClientAddonsSapApi) Get() *ClientAddonsSapApi {
	return v.value
}

func (v *NullableClientAddonsSapApi) Set(val *ClientAddonsSapApi) {
	v.value = val
	v.isSet = true
}

func (v NullableClientAddonsSapApi) IsSet() bool {
	return v.isSet
}

func (v *NullableClientAddonsSapApi) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientAddonsSapApi(val *ClientAddonsSapApi) *NullableClientAddonsSapApi {
	return &NullableClientAddonsSapApi{value: val, isSet: true}
}

func (v NullableClientAddonsSapApi) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientAddonsSapApi) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
