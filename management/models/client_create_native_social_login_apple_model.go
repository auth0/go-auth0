/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientCreateNativeSocialLoginApple Native Social Login support for the Apple connection
type ClientCreateNativeSocialLoginApple struct {
	// Determine whether or not to allow signing in natively using an Apple authorization code
	Enabled *bool `json:"enabled,omitempty"`
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ClientCreateNativeSocialLoginApple) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientCreateNativeSocialLoginApple) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ClientCreateNativeSocialLoginApple) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ClientCreateNativeSocialLoginApple) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o ClientCreateNativeSocialLoginApple) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientCreateNativeSocialLoginApple) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	return toSerialize, nil
}

type NullableClientCreateNativeSocialLoginApple struct {
	value *ClientCreateNativeSocialLoginApple
	isSet bool
}

func (v NullableClientCreateNativeSocialLoginApple) Get() *ClientCreateNativeSocialLoginApple {
	return v.value
}

func (v *NullableClientCreateNativeSocialLoginApple) Set(val *ClientCreateNativeSocialLoginApple) {
	v.value = val
	v.isSet = true
}

func (v NullableClientCreateNativeSocialLoginApple) IsSet() bool {
	return v.isSet
}

func (v *NullableClientCreateNativeSocialLoginApple) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientCreateNativeSocialLoginApple(val *ClientCreateNativeSocialLoginApple) *NullableClientCreateNativeSocialLoginApple {
	return &NullableClientCreateNativeSocialLoginApple{value: val, isSet: true}
}

func (v NullableClientCreateNativeSocialLoginApple) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientCreateNativeSocialLoginApple) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
