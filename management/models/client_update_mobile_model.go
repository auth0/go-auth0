/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientUpdateMobile Configuration related to native mobile apps
type ClientUpdateMobile struct {
	Android NullableClientUpdateMobileAndroid `json:"android,omitempty"`
	Ios     NullableClientUpdateMobileIos     `json:"ios,omitempty"`
}

// GetAndroid returns the Android field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientUpdateMobile) GetAndroid() ClientUpdateMobileAndroid {
	if o == nil || IsNil(o.Android.Get()) {
		var ret ClientUpdateMobileAndroid
		return ret
	}
	return *o.Android.Get()
}

// GetAndroidOk returns a tuple with the Android field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientUpdateMobile) GetAndroidOk() (*ClientUpdateMobileAndroid, bool) {
	if o == nil {
		return nil, false
	}
	return o.Android.Get(), o.Android.IsSet()
}

// HasAndroid returns a boolean if a field has been set.
func (o *ClientUpdateMobile) HasAndroid() bool {
	if o != nil && o.Android.IsSet() {
		return true
	}

	return false
}

// SetAndroid gets a reference to the given NullableClientUpdateMobileAndroid and assigns it to the Android field.
func (o *ClientUpdateMobile) SetAndroid(v ClientUpdateMobileAndroid) {
	o.Android.Set(&v)
}

// SetAndroidNil sets the value for Android to be an explicit nil
func (o *ClientUpdateMobile) SetAndroidNil() {
	o.Android.Set(nil)
}

// UnsetAndroid ensures that no value is present for Android, not even an explicit nil
func (o *ClientUpdateMobile) UnsetAndroid() {
	o.Android.Unset()
}

// GetIos returns the Ios field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientUpdateMobile) GetIos() ClientUpdateMobileIos {
	if o == nil || IsNil(o.Ios.Get()) {
		var ret ClientUpdateMobileIos
		return ret
	}
	return *o.Ios.Get()
}

// GetIosOk returns a tuple with the Ios field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientUpdateMobile) GetIosOk() (*ClientUpdateMobileIos, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ios.Get(), o.Ios.IsSet()
}

// HasIos returns a boolean if a field has been set.
func (o *ClientUpdateMobile) HasIos() bool {
	if o != nil && o.Ios.IsSet() {
		return true
	}

	return false
}

// SetIos gets a reference to the given NullableClientUpdateMobileIos and assigns it to the Ios field.
func (o *ClientUpdateMobile) SetIos(v ClientUpdateMobileIos) {
	o.Ios.Set(&v)
}

// SetIosNil sets the value for Ios to be an explicit nil
func (o *ClientUpdateMobile) SetIosNil() {
	o.Ios.Set(nil)
}

// UnsetIos ensures that no value is present for Ios, not even an explicit nil
func (o *ClientUpdateMobile) UnsetIos() {
	o.Ios.Unset()
}

func (o ClientUpdateMobile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientUpdateMobile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Android.IsSet() {
		toSerialize["android"] = o.Android.Get()
	}
	if o.Ios.IsSet() {
		toSerialize["ios"] = o.Ios.Get()
	}
	return toSerialize, nil
}

type NullableClientUpdateMobile struct {
	value *ClientUpdateMobile
	isSet bool
}

func (v NullableClientUpdateMobile) Get() *ClientUpdateMobile {
	return v.value
}

func (v *NullableClientUpdateMobile) Set(val *ClientUpdateMobile) {
	v.value = val
	v.isSet = true
}

func (v NullableClientUpdateMobile) IsSet() bool {
	return v.isSet
}

func (v *NullableClientUpdateMobile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientUpdateMobile(val *ClientUpdateMobile) *NullableClientUpdateMobile {
	return &NullableClientUpdateMobile{value: val, isSet: true}
}

func (v NullableClientUpdateMobile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientUpdateMobile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
