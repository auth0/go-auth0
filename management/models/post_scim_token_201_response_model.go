/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PostScimToken201Response struct for PostScimToken201Response
type PostScimToken201Response struct {
	// The token's identifier
	TokenId *string `json:"token_id,omitempty"`
	// The scim client's token
	Token *string `json:"token,omitempty"`
	// The scopes of the scim token
	Scopes []string `json:"scopes,omitempty"`
	// The token's created at timestamp
	CreatedAt *string `json:"created_at,omitempty"`
	// The token's valid until at timestamp
	ValidUntil *string `json:"valid_until,omitempty"`
}

// GetTokenId returns the TokenId field value if set, zero value otherwise.
func (o *PostScimToken201Response) GetTokenId() string {
	if o == nil || IsNil(o.TokenId) {
		var ret string
		return ret
	}
	return *o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostScimToken201Response) GetTokenIdOk() (*string, bool) {
	if o == nil || IsNil(o.TokenId) {
		return nil, false
	}
	return o.TokenId, true
}

// HasTokenId returns a boolean if a field has been set.
func (o *PostScimToken201Response) HasTokenId() bool {
	if o != nil && !IsNil(o.TokenId) {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given string and assigns it to the TokenId field.
func (o *PostScimToken201Response) SetTokenId(v string) {
	o.TokenId = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *PostScimToken201Response) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostScimToken201Response) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *PostScimToken201Response) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *PostScimToken201Response) SetToken(v string) {
	o.Token = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *PostScimToken201Response) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostScimToken201Response) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *PostScimToken201Response) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *PostScimToken201Response) SetScopes(v []string) {
	o.Scopes = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PostScimToken201Response) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostScimToken201Response) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PostScimToken201Response) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *PostScimToken201Response) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetValidUntil returns the ValidUntil field value if set, zero value otherwise.
func (o *PostScimToken201Response) GetValidUntil() string {
	if o == nil || IsNil(o.ValidUntil) {
		var ret string
		return ret
	}
	return *o.ValidUntil
}

// GetValidUntilOk returns a tuple with the ValidUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostScimToken201Response) GetValidUntilOk() (*string, bool) {
	if o == nil || IsNil(o.ValidUntil) {
		return nil, false
	}
	return o.ValidUntil, true
}

// HasValidUntil returns a boolean if a field has been set.
func (o *PostScimToken201Response) HasValidUntil() bool {
	if o != nil && !IsNil(o.ValidUntil) {
		return true
	}

	return false
}

// SetValidUntil gets a reference to the given string and assigns it to the ValidUntil field.
func (o *PostScimToken201Response) SetValidUntil(v string) {
	o.ValidUntil = &v
}

func (o PostScimToken201Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostScimToken201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TokenId) {
		toSerialize["token_id"] = o.TokenId
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.ValidUntil) {
		toSerialize["valid_until"] = o.ValidUntil
	}
	return toSerialize, nil
}

type NullablePostScimToken201Response struct {
	value *PostScimToken201Response
	isSet bool
}

func (v NullablePostScimToken201Response) Get() *PostScimToken201Response {
	return v.value
}

func (v *NullablePostScimToken201Response) Set(val *PostScimToken201Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePostScimToken201Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePostScimToken201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostScimToken201Response(val *PostScimToken201Response) *NullablePostScimToken201Response {
	return &NullablePostScimToken201Response{value: val, isSet: true}
}

func (v NullablePostScimToken201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostScimToken201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
