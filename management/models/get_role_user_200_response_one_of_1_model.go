/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GetRoleUser200ResponseOneOf1 struct for GetRoleUser200ResponseOneOf1
type GetRoleUser200ResponseOneOf1 struct {
	Next  *string                            `json:"next,omitempty"`
	Users []GetRoleUser200ResponseOneOfInner `json:"users,omitempty"`
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *GetRoleUser200ResponseOneOf1) GetNext() string {
	if o == nil || IsNil(o.Next) {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleUser200ResponseOneOf1) GetNextOk() (*string, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *GetRoleUser200ResponseOneOf1) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *GetRoleUser200ResponseOneOf1) SetNext(v string) {
	o.Next = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *GetRoleUser200ResponseOneOf1) GetUsers() []GetRoleUser200ResponseOneOfInner {
	if o == nil || IsNil(o.Users) {
		var ret []GetRoleUser200ResponseOneOfInner
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleUser200ResponseOneOf1) GetUsersOk() ([]GetRoleUser200ResponseOneOfInner, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *GetRoleUser200ResponseOneOf1) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []GetRoleUser200ResponseOneOfInner and assigns it to the Users field.
func (o *GetRoleUser200ResponseOneOf1) SetUsers(v []GetRoleUser200ResponseOneOfInner) {
	o.Users = v
}

func (o GetRoleUser200ResponseOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRoleUser200ResponseOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	return toSerialize, nil
}

type NullableGetRoleUser200ResponseOneOf1 struct {
	value *GetRoleUser200ResponseOneOf1
	isSet bool
}

func (v NullableGetRoleUser200ResponseOneOf1) Get() *GetRoleUser200ResponseOneOf1 {
	return v.value
}

func (v *NullableGetRoleUser200ResponseOneOf1) Set(val *GetRoleUser200ResponseOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRoleUser200ResponseOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRoleUser200ResponseOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRoleUser200ResponseOneOf1(val *GetRoleUser200ResponseOneOf1) *NullableGetRoleUser200ResponseOneOf1 {
	return &NullableGetRoleUser200ResponseOneOf1{value: val, isSet: true}
}

func (v NullableGetRoleUser200ResponseOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRoleUser200ResponseOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
