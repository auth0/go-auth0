/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// GetRoleUser200ResponseOneOf1 struct for GetRoleUser200ResponseOneOf1
type GetRoleUser200ResponseOneOf1 struct {
	Next  string                             `json:"next"`
	Users []GetRoleUser200ResponseOneOfInner `json:"users"`
}

type _GetRoleUser200ResponseOneOf1 GetRoleUser200ResponseOneOf1

// GetNext returns the Next field value
func (o *GetRoleUser200ResponseOneOf1) GetNext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Next
}

// GetNextOk returns a tuple with the Next field value
// and a boolean to check if the value has been set.
func (o *GetRoleUser200ResponseOneOf1) GetNextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Next, true
}

// SetNext sets field value
func (o *GetRoleUser200ResponseOneOf1) SetNext(v string) {
	o.Next = v
}

// GetUsers returns the Users field value
func (o *GetRoleUser200ResponseOneOf1) GetUsers() []GetRoleUser200ResponseOneOfInner {
	if o == nil {
		var ret []GetRoleUser200ResponseOneOfInner
		return ret
	}

	return o.Users
}

// GetUsersOk returns a tuple with the Users field value
// and a boolean to check if the value has been set.
func (o *GetRoleUser200ResponseOneOf1) GetUsersOk() ([]GetRoleUser200ResponseOneOfInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Users, true
}

// SetUsers sets field value
func (o *GetRoleUser200ResponseOneOf1) SetUsers(v []GetRoleUser200ResponseOneOfInner) {
	o.Users = v
}

func (o GetRoleUser200ResponseOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRoleUser200ResponseOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["next"] = o.Next
	toSerialize["users"] = o.Users
	return toSerialize, nil
}

func (o *GetRoleUser200ResponseOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"next",
		"users",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetRoleUser200ResponseOneOf1 := _GetRoleUser200ResponseOneOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetRoleUser200ResponseOneOf1)

	if err != nil {
		return err
	}

	*o = GetRoleUser200ResponseOneOf1(varGetRoleUser200ResponseOneOf1)

	return err
}

type NullableGetRoleUser200ResponseOneOf1 struct {
	value *GetRoleUser200ResponseOneOf1
	isSet bool
}

func (v NullableGetRoleUser200ResponseOneOf1) Get() *GetRoleUser200ResponseOneOf1 {
	return v.value
}

func (v *NullableGetRoleUser200ResponseOneOf1) Set(val *GetRoleUser200ResponseOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRoleUser200ResponseOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRoleUser200ResponseOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRoleUser200ResponseOneOf1(val *GetRoleUser200ResponseOneOf1) *NullableGetRoleUser200ResponseOneOf1 {
	return &NullableGetRoleUser200ResponseOneOf1{value: val, isSet: true}
}

func (v NullableGetRoleUser200ResponseOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRoleUser200ResponseOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
