/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// TenantSettingsUpdateSessions Sessions related settings for tenant
type TenantSettingsUpdateSessions struct {
	// Whether to bypass prompting logic (false) when performing OIDC Logout
	OidcLogoutPromptEnabled *bool `json:"oidc_logout_prompt_enabled,omitempty"`
}

// GetOidcLogoutPromptEnabled returns the OidcLogoutPromptEnabled field value if set, zero value otherwise.
func (o *TenantSettingsUpdateSessions) GetOidcLogoutPromptEnabled() bool {
	if o == nil || IsNil(o.OidcLogoutPromptEnabled) {
		var ret bool
		return ret
	}
	return *o.OidcLogoutPromptEnabled
}

// GetOidcLogoutPromptEnabledOk returns a tuple with the OidcLogoutPromptEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsUpdateSessions) GetOidcLogoutPromptEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.OidcLogoutPromptEnabled) {
		return nil, false
	}
	return o.OidcLogoutPromptEnabled, true
}

// HasOidcLogoutPromptEnabled returns a boolean if a field has been set.
func (o *TenantSettingsUpdateSessions) HasOidcLogoutPromptEnabled() bool {
	if o != nil && !IsNil(o.OidcLogoutPromptEnabled) {
		return true
	}

	return false
}

// SetOidcLogoutPromptEnabled gets a reference to the given bool and assigns it to the OidcLogoutPromptEnabled field.
func (o *TenantSettingsUpdateSessions) SetOidcLogoutPromptEnabled(v bool) {
	o.OidcLogoutPromptEnabled = &v
}

func (o TenantSettingsUpdateSessions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantSettingsUpdateSessions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OidcLogoutPromptEnabled) {
		toSerialize["oidc_logout_prompt_enabled"] = o.OidcLogoutPromptEnabled
	}
	return toSerialize, nil
}

type NullableTenantSettingsUpdateSessions struct {
	value *TenantSettingsUpdateSessions
	isSet bool
}

func (v NullableTenantSettingsUpdateSessions) Get() *TenantSettingsUpdateSessions {
	return v.value
}

func (v *NullableTenantSettingsUpdateSessions) Set(val *TenantSettingsUpdateSessions) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantSettingsUpdateSessions) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantSettingsUpdateSessions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantSettingsUpdateSessions(val *TenantSettingsUpdateSessions) *NullableTenantSettingsUpdateSessions {
	return &NullableTenantSettingsUpdateSessions{value: val, isSet: true}
}

func (v NullableTenantSettingsUpdateSessions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantSettingsUpdateSessions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
