/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
)

// PostRolePermissionAssignmentRequest struct for PostRolePermissionAssignmentRequest
type PostRolePermissionAssignmentRequest struct {
	// array of resource_server_identifier, permission_name pairs.
	Permissions []PostRolePermissionAssignmentRequestPermissionsInner `json:"permissions"`
}

type _PostRolePermissionAssignmentRequest PostRolePermissionAssignmentRequest

// GetPermissions returns the Permissions field value
func (o *PostRolePermissionAssignmentRequest) GetPermissions() []PostRolePermissionAssignmentRequestPermissionsInner {
	if o == nil {
		var ret []PostRolePermissionAssignmentRequestPermissionsInner
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *PostRolePermissionAssignmentRequest) GetPermissionsOk() ([]PostRolePermissionAssignmentRequestPermissionsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Permissions, true
}

// SetPermissions sets field value
func (o *PostRolePermissionAssignmentRequest) SetPermissions(v []PostRolePermissionAssignmentRequestPermissionsInner) {
	o.Permissions = v
}

func (o PostRolePermissionAssignmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostRolePermissionAssignmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["permissions"] = o.Permissions
	return toSerialize, nil
}

func (o *PostRolePermissionAssignmentRequest) UnmarshalJSON(data []byte) (err error) {
	varPostRolePermissionAssignmentRequest := _PostRolePermissionAssignmentRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostRolePermissionAssignmentRequest)

	if err != nil {
		return err
	}

	*o = PostRolePermissionAssignmentRequest(varPostRolePermissionAssignmentRequest)

	return err
}

type NullablePostRolePermissionAssignmentRequest struct {
	value *PostRolePermissionAssignmentRequest
	isSet bool
}

func (v NullablePostRolePermissionAssignmentRequest) Get() *PostRolePermissionAssignmentRequest {
	return v.value
}

func (v *NullablePostRolePermissionAssignmentRequest) Set(val *PostRolePermissionAssignmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostRolePermissionAssignmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostRolePermissionAssignmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostRolePermissionAssignmentRequest(val *PostRolePermissionAssignmentRequest) *NullablePostRolePermissionAssignmentRequest {
	return &NullablePostRolePermissionAssignmentRequest{value: val, isSet: true}
}

func (v NullablePostRolePermissionAssignmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostRolePermissionAssignmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
