/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PostTicket200Response struct for PostTicket200Response
type PostTicket200Response struct {
	// The ticket_id used to identify the enrollment
	TicketId string `json:"ticket_id"`
	// The url you can use to start enrollment
	TicketUrl            string `json:"ticket_url"`
	AdditionalProperties map[string]interface{}
}

type _PostTicket200Response PostTicket200Response

// GetTicketId returns the TicketId field value
func (o *PostTicket200Response) GetTicketId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TicketId
}

// GetTicketIdOk returns a tuple with the TicketId field value
// and a boolean to check if the value has been set.
func (o *PostTicket200Response) GetTicketIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TicketId, true
}

// SetTicketId sets field value
func (o *PostTicket200Response) SetTicketId(v string) {
	o.TicketId = v
}

// GetTicketUrl returns the TicketUrl field value
func (o *PostTicket200Response) GetTicketUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TicketUrl
}

// GetTicketUrlOk returns a tuple with the TicketUrl field value
// and a boolean to check if the value has been set.
func (o *PostTicket200Response) GetTicketUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TicketUrl, true
}

// SetTicketUrl sets field value
func (o *PostTicket200Response) SetTicketUrl(v string) {
	o.TicketUrl = v
}

func (o PostTicket200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostTicket200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ticket_id"] = o.TicketId
	toSerialize["ticket_url"] = o.TicketUrl

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PostTicket200Response) UnmarshalJSON(data []byte) (err error) {
	varPostTicket200Response := _PostTicket200Response{}

	err = json.Unmarshal(data, &varPostTicket200Response)

	if err != nil {
		return err
	}

	*o = PostTicket200Response(varPostTicket200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ticket_id")
		delete(additionalProperties, "ticket_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePostTicket200Response struct {
	value *PostTicket200Response
	isSet bool
}

func (v NullablePostTicket200Response) Get() *PostTicket200Response {
	return v.value
}

func (v *NullablePostTicket200Response) Set(val *PostTicket200Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePostTicket200Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePostTicket200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostTicket200Response(val *PostTicket200Response) *NullablePostTicket200Response {
	return &NullablePostTicket200Response{value: val, isSet: true}
}

func (v NullablePostTicket200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostTicket200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
