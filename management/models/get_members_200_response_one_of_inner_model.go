/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GetMembers200ResponseOneOfInner struct for GetMembers200ResponseOneOfInner
type GetMembers200ResponseOneOfInner struct {
	// ID of this user.
	UserId *string `json:"user_id,omitempty"`
	// URL to a picture for this user.
	Picture *string `json:"picture,omitempty"`
	// Name of this user.
	Name *string `json:"name,omitempty"`
	// Email address of this user.
	Email *string                                     `json:"email,omitempty"`
	Roles []GetMembers200ResponseOneOfInnerRolesInner `json:"roles,omitempty"`
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *GetMembers200ResponseOneOfInner) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMembers200ResponseOneOfInner) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *GetMembers200ResponseOneOfInner) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *GetMembers200ResponseOneOfInner) SetUserId(v string) {
	o.UserId = &v
}

// GetPicture returns the Picture field value if set, zero value otherwise.
func (o *GetMembers200ResponseOneOfInner) GetPicture() string {
	if o == nil || IsNil(o.Picture) {
		var ret string
		return ret
	}
	return *o.Picture
}

// GetPictureOk returns a tuple with the Picture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMembers200ResponseOneOfInner) GetPictureOk() (*string, bool) {
	if o == nil || IsNil(o.Picture) {
		return nil, false
	}
	return o.Picture, true
}

// HasPicture returns a boolean if a field has been set.
func (o *GetMembers200ResponseOneOfInner) HasPicture() bool {
	if o != nil && !IsNil(o.Picture) {
		return true
	}

	return false
}

// SetPicture gets a reference to the given string and assigns it to the Picture field.
func (o *GetMembers200ResponseOneOfInner) SetPicture(v string) {
	o.Picture = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetMembers200ResponseOneOfInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMembers200ResponseOneOfInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetMembers200ResponseOneOfInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetMembers200ResponseOneOfInner) SetName(v string) {
	o.Name = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GetMembers200ResponseOneOfInner) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMembers200ResponseOneOfInner) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GetMembers200ResponseOneOfInner) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *GetMembers200ResponseOneOfInner) SetEmail(v string) {
	o.Email = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *GetMembers200ResponseOneOfInner) GetRoles() []GetMembers200ResponseOneOfInnerRolesInner {
	if o == nil || IsNil(o.Roles) {
		var ret []GetMembers200ResponseOneOfInnerRolesInner
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMembers200ResponseOneOfInner) GetRolesOk() ([]GetMembers200ResponseOneOfInnerRolesInner, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *GetMembers200ResponseOneOfInner) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []GetMembers200ResponseOneOfInnerRolesInner and assigns it to the Roles field.
func (o *GetMembers200ResponseOneOfInner) SetRoles(v []GetMembers200ResponseOneOfInnerRolesInner) {
	o.Roles = v
}

func (o GetMembers200ResponseOneOfInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMembers200ResponseOneOfInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.Picture) {
		toSerialize["picture"] = o.Picture
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	return toSerialize, nil
}

type NullableGetMembers200ResponseOneOfInner struct {
	value *GetMembers200ResponseOneOfInner
	isSet bool
}

func (v NullableGetMembers200ResponseOneOfInner) Get() *GetMembers200ResponseOneOfInner {
	return v.value
}

func (v *NullableGetMembers200ResponseOneOfInner) Set(val *GetMembers200ResponseOneOfInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMembers200ResponseOneOfInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMembers200ResponseOneOfInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMembers200ResponseOneOfInner(val *GetMembers200ResponseOneOfInner) *NullableGetMembers200ResponseOneOfInner {
	return &NullableGetMembers200ResponseOneOfInner{value: val, isSet: true}
}

func (v NullableGetMembers200ResponseOneOfInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMembers200ResponseOneOfInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
