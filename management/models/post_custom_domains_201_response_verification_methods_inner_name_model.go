/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PostCustomDomains201ResponseVerificationMethodsInnerName Domain verification method.
type PostCustomDomains201ResponseVerificationMethodsInnerName string

// List of post_custom_domains_201_response_verification_methods_inner_name
const (
	POSTCUSTOMDOMAINS201RESPONSEVERIFICATIONMETHODSINNERNAME_CNAME PostCustomDomains201ResponseVerificationMethodsInnerName = "cname"
	POSTCUSTOMDOMAINS201RESPONSEVERIFICATIONMETHODSINNERNAME_TXT   PostCustomDomains201ResponseVerificationMethodsInnerName = "txt"
)

// All allowed values of PostCustomDomains201ResponseVerificationMethodsInnerName enum
var AllowedPostCustomDomains201ResponseVerificationMethodsInnerNameEnumValues = []PostCustomDomains201ResponseVerificationMethodsInnerName{
	"cname",
	"txt",
}

func (v *PostCustomDomains201ResponseVerificationMethodsInnerName) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PostCustomDomains201ResponseVerificationMethodsInnerName(value)
	for _, existing := range AllowedPostCustomDomains201ResponseVerificationMethodsInnerNameEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PostCustomDomains201ResponseVerificationMethodsInnerName", value)
}

// NewPostCustomDomains201ResponseVerificationMethodsInnerNameFromValue returns a pointer to a valid PostCustomDomains201ResponseVerificationMethodsInnerName
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPostCustomDomains201ResponseVerificationMethodsInnerNameFromValue(v string) (*PostCustomDomains201ResponseVerificationMethodsInnerName, error) {
	ev := PostCustomDomains201ResponseVerificationMethodsInnerName(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PostCustomDomains201ResponseVerificationMethodsInnerName: valid values are %v", v, AllowedPostCustomDomains201ResponseVerificationMethodsInnerNameEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PostCustomDomains201ResponseVerificationMethodsInnerName) IsValid() bool {
	for _, existing := range AllowedPostCustomDomains201ResponseVerificationMethodsInnerNameEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to post_custom_domains_201_response_verification_methods_inner_name value
func (v PostCustomDomains201ResponseVerificationMethodsInnerName) Ptr() *PostCustomDomains201ResponseVerificationMethodsInnerName {
	return &v
}

type NullablePostCustomDomains201ResponseVerificationMethodsInnerName struct {
	value *PostCustomDomains201ResponseVerificationMethodsInnerName
	isSet bool
}

func (v NullablePostCustomDomains201ResponseVerificationMethodsInnerName) Get() *PostCustomDomains201ResponseVerificationMethodsInnerName {
	return v.value
}

func (v *NullablePostCustomDomains201ResponseVerificationMethodsInnerName) Set(val *PostCustomDomains201ResponseVerificationMethodsInnerName) {
	v.value = val
	v.isSet = true
}

func (v NullablePostCustomDomains201ResponseVerificationMethodsInnerName) IsSet() bool {
	return v.isSet
}

func (v *NullablePostCustomDomains201ResponseVerificationMethodsInnerName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostCustomDomains201ResponseVerificationMethodsInnerName(val *PostCustomDomains201ResponseVerificationMethodsInnerName) *NullablePostCustomDomains201ResponseVerificationMethodsInnerName {
	return &NullablePostCustomDomains201ResponseVerificationMethodsInnerName{value: val, isSet: true}
}

func (v NullablePostCustomDomains201ResponseVerificationMethodsInnerName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostCustomDomains201ResponseVerificationMethodsInnerName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
