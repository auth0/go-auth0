/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// TenantSettings struct for TenantSettings
type TenantSettings struct {
	ChangePassword  NullableTenantSettingsChangePassword  `json:"change_password"`
	GuardianMfaPage NullableTenantSettingsGuardianMfaPage `json:"guardian_mfa_page"`
	// Default audience for API authorization.
	DefaultAudience string `json:"default_audience"`
	// Name of connection used for password grants at the `/token`endpoint. The following connection types are supported: LDAP, AD, Database Connections, Passwordless, Windows Azure Active Directory, ADFS.
	DefaultDirectory string                           `json:"default_directory"`
	ErrorPage        NullableTenantSettingsErrorPage  `json:"error_page"`
	DeviceFlow       NullableTenantSettingsDeviceFlow `json:"device_flow"`
	Flags            TenantSettingsFlags              `json:"flags"`
	// Friendly name for this tenant.
	FriendlyName string `json:"friendly_name"`
	// URL of logo to be shown for this tenant (recommended size: 150x150)
	PictureUrl string `json:"picture_url"`
	// End-user support email address.
	SupportEmail string `json:"support_email"`
	// End-user support URL.
	SupportUrl string `json:"support_url"`
	// URLs that are valid to redirect to after logout from Auth0.
	AllowedLogoutUrls []string `json:"allowed_logout_urls"`
	// Number of hours a session will stay valid.
	SessionLifetime float32 `json:"session_lifetime"`
	// Number of hours for which a session can be inactive before the user must log in again.
	IdleSessionLifetime float32 `json:"idle_session_lifetime"`
	// Selected sandbox version for the extensibility environment.
	SandboxVersion string `json:"sandbox_version"`
	// Available sandbox versions for the extensibility environment.
	SandboxVersionsAvailable []string `json:"sandbox_versions_available"`
	// The default absolute redirection uri, must be https
	DefaultRedirectionUri string `json:"default_redirection_uri"`
	// Supported locales for the user interface.
	EnabledLocales []GetCustomTextByLanguageLanguageParameter `json:"enabled_locales"`
	SessionCookie  NullableTenantSettingsSessionCookie        `json:"session_cookie"`
	Sessions       NullableTenantSettingsSessions             `json:"sessions"`
	// Whether to accept an organization name instead of an ID on auth endpoints
	AllowOrganizationNameInAuthenticationApi bool `json:"allow_organization_name_in_authentication_api"`
	// Whether to enable flexible factors for MFA in the PostLogin action
	CustomizeMfaInPostloginAction bool `json:"customize_mfa_in_postlogin_action"`
	// Supported ACR values
	AcrValuesSupported []string                   `json:"acr_values_supported"`
	Mtls               NullableTenantSettingsMtls `json:"mtls"`
	// Enables the use of Pushed Authorization Requests
	PushedAuthorizationRequestsSupported bool `json:"pushed_authorization_requests_supported"`
}

type _TenantSettings TenantSettings

// GetChangePassword returns the ChangePassword field value
// If the value is explicit nil, the zero value for TenantSettingsChangePassword will be returned
func (o *TenantSettings) GetChangePassword() TenantSettingsChangePassword {
	if o == nil || o.ChangePassword.Get() == nil {
		var ret TenantSettingsChangePassword
		return ret
	}

	return *o.ChangePassword.Get()
}

// GetChangePasswordOk returns a tuple with the ChangePassword field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantSettings) GetChangePasswordOk() (*TenantSettingsChangePassword, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChangePassword.Get(), o.ChangePassword.IsSet()
}

// SetChangePassword sets field value
func (o *TenantSettings) SetChangePassword(v TenantSettingsChangePassword) {
	o.ChangePassword.Set(&v)
}

// GetGuardianMfaPage returns the GuardianMfaPage field value
// If the value is explicit nil, the zero value for TenantSettingsGuardianMfaPage will be returned
func (o *TenantSettings) GetGuardianMfaPage() TenantSettingsGuardianMfaPage {
	if o == nil || o.GuardianMfaPage.Get() == nil {
		var ret TenantSettingsGuardianMfaPage
		return ret
	}

	return *o.GuardianMfaPage.Get()
}

// GetGuardianMfaPageOk returns a tuple with the GuardianMfaPage field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantSettings) GetGuardianMfaPageOk() (*TenantSettingsGuardianMfaPage, bool) {
	if o == nil {
		return nil, false
	}
	return o.GuardianMfaPage.Get(), o.GuardianMfaPage.IsSet()
}

// SetGuardianMfaPage sets field value
func (o *TenantSettings) SetGuardianMfaPage(v TenantSettingsGuardianMfaPage) {
	o.GuardianMfaPage.Set(&v)
}

// GetDefaultAudience returns the DefaultAudience field value
func (o *TenantSettings) GetDefaultAudience() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultAudience
}

// GetDefaultAudienceOk returns a tuple with the DefaultAudience field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetDefaultAudienceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultAudience, true
}

// SetDefaultAudience sets field value
func (o *TenantSettings) SetDefaultAudience(v string) {
	o.DefaultAudience = v
}

// GetDefaultDirectory returns the DefaultDirectory field value
func (o *TenantSettings) GetDefaultDirectory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultDirectory
}

// GetDefaultDirectoryOk returns a tuple with the DefaultDirectory field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetDefaultDirectoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultDirectory, true
}

// SetDefaultDirectory sets field value
func (o *TenantSettings) SetDefaultDirectory(v string) {
	o.DefaultDirectory = v
}

// GetErrorPage returns the ErrorPage field value
// If the value is explicit nil, the zero value for TenantSettingsErrorPage will be returned
func (o *TenantSettings) GetErrorPage() TenantSettingsErrorPage {
	if o == nil || o.ErrorPage.Get() == nil {
		var ret TenantSettingsErrorPage
		return ret
	}

	return *o.ErrorPage.Get()
}

// GetErrorPageOk returns a tuple with the ErrorPage field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantSettings) GetErrorPageOk() (*TenantSettingsErrorPage, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorPage.Get(), o.ErrorPage.IsSet()
}

// SetErrorPage sets field value
func (o *TenantSettings) SetErrorPage(v TenantSettingsErrorPage) {
	o.ErrorPage.Set(&v)
}

// GetDeviceFlow returns the DeviceFlow field value
// If the value is explicit nil, the zero value for TenantSettingsDeviceFlow will be returned
func (o *TenantSettings) GetDeviceFlow() TenantSettingsDeviceFlow {
	if o == nil || o.DeviceFlow.Get() == nil {
		var ret TenantSettingsDeviceFlow
		return ret
	}

	return *o.DeviceFlow.Get()
}

// GetDeviceFlowOk returns a tuple with the DeviceFlow field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantSettings) GetDeviceFlowOk() (*TenantSettingsDeviceFlow, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeviceFlow.Get(), o.DeviceFlow.IsSet()
}

// SetDeviceFlow sets field value
func (o *TenantSettings) SetDeviceFlow(v TenantSettingsDeviceFlow) {
	o.DeviceFlow.Set(&v)
}

// GetFlags returns the Flags field value
func (o *TenantSettings) GetFlags() TenantSettingsFlags {
	if o == nil {
		var ret TenantSettingsFlags
		return ret
	}

	return o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetFlagsOk() (*TenantSettingsFlags, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Flags, true
}

// SetFlags sets field value
func (o *TenantSettings) SetFlags(v TenantSettingsFlags) {
	o.Flags = v
}

// GetFriendlyName returns the FriendlyName field value
func (o *TenantSettings) GetFriendlyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FriendlyName
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetFriendlyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FriendlyName, true
}

// SetFriendlyName sets field value
func (o *TenantSettings) SetFriendlyName(v string) {
	o.FriendlyName = v
}

// GetPictureUrl returns the PictureUrl field value
func (o *TenantSettings) GetPictureUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PictureUrl
}

// GetPictureUrlOk returns a tuple with the PictureUrl field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetPictureUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PictureUrl, true
}

// SetPictureUrl sets field value
func (o *TenantSettings) SetPictureUrl(v string) {
	o.PictureUrl = v
}

// GetSupportEmail returns the SupportEmail field value
func (o *TenantSettings) GetSupportEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SupportEmail
}

// GetSupportEmailOk returns a tuple with the SupportEmail field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetSupportEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SupportEmail, true
}

// SetSupportEmail sets field value
func (o *TenantSettings) SetSupportEmail(v string) {
	o.SupportEmail = v
}

// GetSupportUrl returns the SupportUrl field value
func (o *TenantSettings) GetSupportUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SupportUrl
}

// GetSupportUrlOk returns a tuple with the SupportUrl field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetSupportUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SupportUrl, true
}

// SetSupportUrl sets field value
func (o *TenantSettings) SetSupportUrl(v string) {
	o.SupportUrl = v
}

// GetAllowedLogoutUrls returns the AllowedLogoutUrls field value
func (o *TenantSettings) GetAllowedLogoutUrls() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AllowedLogoutUrls
}

// GetAllowedLogoutUrlsOk returns a tuple with the AllowedLogoutUrls field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetAllowedLogoutUrlsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowedLogoutUrls, true
}

// SetAllowedLogoutUrls sets field value
func (o *TenantSettings) SetAllowedLogoutUrls(v []string) {
	o.AllowedLogoutUrls = v
}

// GetSessionLifetime returns the SessionLifetime field value
func (o *TenantSettings) GetSessionLifetime() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SessionLifetime
}

// GetSessionLifetimeOk returns a tuple with the SessionLifetime field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetSessionLifetimeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionLifetime, true
}

// SetSessionLifetime sets field value
func (o *TenantSettings) SetSessionLifetime(v float32) {
	o.SessionLifetime = v
}

// GetIdleSessionLifetime returns the IdleSessionLifetime field value
func (o *TenantSettings) GetIdleSessionLifetime() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.IdleSessionLifetime
}

// GetIdleSessionLifetimeOk returns a tuple with the IdleSessionLifetime field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetIdleSessionLifetimeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdleSessionLifetime, true
}

// SetIdleSessionLifetime sets field value
func (o *TenantSettings) SetIdleSessionLifetime(v float32) {
	o.IdleSessionLifetime = v
}

// GetSandboxVersion returns the SandboxVersion field value
func (o *TenantSettings) GetSandboxVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SandboxVersion
}

// GetSandboxVersionOk returns a tuple with the SandboxVersion field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetSandboxVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SandboxVersion, true
}

// SetSandboxVersion sets field value
func (o *TenantSettings) SetSandboxVersion(v string) {
	o.SandboxVersion = v
}

// GetSandboxVersionsAvailable returns the SandboxVersionsAvailable field value
func (o *TenantSettings) GetSandboxVersionsAvailable() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SandboxVersionsAvailable
}

// GetSandboxVersionsAvailableOk returns a tuple with the SandboxVersionsAvailable field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetSandboxVersionsAvailableOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SandboxVersionsAvailable, true
}

// SetSandboxVersionsAvailable sets field value
func (o *TenantSettings) SetSandboxVersionsAvailable(v []string) {
	o.SandboxVersionsAvailable = v
}

// GetDefaultRedirectionUri returns the DefaultRedirectionUri field value
func (o *TenantSettings) GetDefaultRedirectionUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultRedirectionUri
}

// GetDefaultRedirectionUriOk returns a tuple with the DefaultRedirectionUri field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetDefaultRedirectionUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultRedirectionUri, true
}

// SetDefaultRedirectionUri sets field value
func (o *TenantSettings) SetDefaultRedirectionUri(v string) {
	o.DefaultRedirectionUri = v
}

// GetEnabledLocales returns the EnabledLocales field value
func (o *TenantSettings) GetEnabledLocales() []GetCustomTextByLanguageLanguageParameter {
	if o == nil {
		var ret []GetCustomTextByLanguageLanguageParameter
		return ret
	}

	return o.EnabledLocales
}

// GetEnabledLocalesOk returns a tuple with the EnabledLocales field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetEnabledLocalesOk() ([]GetCustomTextByLanguageLanguageParameter, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnabledLocales, true
}

// SetEnabledLocales sets field value
func (o *TenantSettings) SetEnabledLocales(v []GetCustomTextByLanguageLanguageParameter) {
	o.EnabledLocales = v
}

// GetSessionCookie returns the SessionCookie field value
// If the value is explicit nil, the zero value for TenantSettingsSessionCookie will be returned
func (o *TenantSettings) GetSessionCookie() TenantSettingsSessionCookie {
	if o == nil || o.SessionCookie.Get() == nil {
		var ret TenantSettingsSessionCookie
		return ret
	}

	return *o.SessionCookie.Get()
}

// GetSessionCookieOk returns a tuple with the SessionCookie field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantSettings) GetSessionCookieOk() (*TenantSettingsSessionCookie, bool) {
	if o == nil {
		return nil, false
	}
	return o.SessionCookie.Get(), o.SessionCookie.IsSet()
}

// SetSessionCookie sets field value
func (o *TenantSettings) SetSessionCookie(v TenantSettingsSessionCookie) {
	o.SessionCookie.Set(&v)
}

// GetSessions returns the Sessions field value
// If the value is explicit nil, the zero value for TenantSettingsSessions will be returned
func (o *TenantSettings) GetSessions() TenantSettingsSessions {
	if o == nil || o.Sessions.Get() == nil {
		var ret TenantSettingsSessions
		return ret
	}

	return *o.Sessions.Get()
}

// GetSessionsOk returns a tuple with the Sessions field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantSettings) GetSessionsOk() (*TenantSettingsSessions, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sessions.Get(), o.Sessions.IsSet()
}

// SetSessions sets field value
func (o *TenantSettings) SetSessions(v TenantSettingsSessions) {
	o.Sessions.Set(&v)
}

// GetAllowOrganizationNameInAuthenticationApi returns the AllowOrganizationNameInAuthenticationApi field value
func (o *TenantSettings) GetAllowOrganizationNameInAuthenticationApi() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowOrganizationNameInAuthenticationApi
}

// GetAllowOrganizationNameInAuthenticationApiOk returns a tuple with the AllowOrganizationNameInAuthenticationApi field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetAllowOrganizationNameInAuthenticationApiOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowOrganizationNameInAuthenticationApi, true
}

// SetAllowOrganizationNameInAuthenticationApi sets field value
func (o *TenantSettings) SetAllowOrganizationNameInAuthenticationApi(v bool) {
	o.AllowOrganizationNameInAuthenticationApi = v
}

// GetCustomizeMfaInPostloginAction returns the CustomizeMfaInPostloginAction field value
func (o *TenantSettings) GetCustomizeMfaInPostloginAction() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CustomizeMfaInPostloginAction
}

// GetCustomizeMfaInPostloginActionOk returns a tuple with the CustomizeMfaInPostloginAction field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetCustomizeMfaInPostloginActionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomizeMfaInPostloginAction, true
}

// SetCustomizeMfaInPostloginAction sets field value
func (o *TenantSettings) SetCustomizeMfaInPostloginAction(v bool) {
	o.CustomizeMfaInPostloginAction = v
}

// GetAcrValuesSupported returns the AcrValuesSupported field value
func (o *TenantSettings) GetAcrValuesSupported() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AcrValuesSupported
}

// GetAcrValuesSupportedOk returns a tuple with the AcrValuesSupported field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetAcrValuesSupportedOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AcrValuesSupported, true
}

// SetAcrValuesSupported sets field value
func (o *TenantSettings) SetAcrValuesSupported(v []string) {
	o.AcrValuesSupported = v
}

// GetMtls returns the Mtls field value
// If the value is explicit nil, the zero value for TenantSettingsMtls will be returned
func (o *TenantSettings) GetMtls() TenantSettingsMtls {
	if o == nil || o.Mtls.Get() == nil {
		var ret TenantSettingsMtls
		return ret
	}

	return *o.Mtls.Get()
}

// GetMtlsOk returns a tuple with the Mtls field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantSettings) GetMtlsOk() (*TenantSettingsMtls, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mtls.Get(), o.Mtls.IsSet()
}

// SetMtls sets field value
func (o *TenantSettings) SetMtls(v TenantSettingsMtls) {
	o.Mtls.Set(&v)
}

// GetPushedAuthorizationRequestsSupported returns the PushedAuthorizationRequestsSupported field value
func (o *TenantSettings) GetPushedAuthorizationRequestsSupported() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PushedAuthorizationRequestsSupported
}

// GetPushedAuthorizationRequestsSupportedOk returns a tuple with the PushedAuthorizationRequestsSupported field value
// and a boolean to check if the value has been set.
func (o *TenantSettings) GetPushedAuthorizationRequestsSupportedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PushedAuthorizationRequestsSupported, true
}

// SetPushedAuthorizationRequestsSupported sets field value
func (o *TenantSettings) SetPushedAuthorizationRequestsSupported(v bool) {
	o.PushedAuthorizationRequestsSupported = v
}

func (o TenantSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["change_password"] = o.ChangePassword.Get()
	toSerialize["guardian_mfa_page"] = o.GuardianMfaPage.Get()
	toSerialize["default_audience"] = o.DefaultAudience
	toSerialize["default_directory"] = o.DefaultDirectory
	toSerialize["error_page"] = o.ErrorPage.Get()
	toSerialize["device_flow"] = o.DeviceFlow.Get()
	toSerialize["flags"] = o.Flags
	toSerialize["friendly_name"] = o.FriendlyName
	toSerialize["picture_url"] = o.PictureUrl
	toSerialize["support_email"] = o.SupportEmail
	toSerialize["support_url"] = o.SupportUrl
	toSerialize["allowed_logout_urls"] = o.AllowedLogoutUrls
	toSerialize["session_lifetime"] = o.SessionLifetime
	toSerialize["idle_session_lifetime"] = o.IdleSessionLifetime
	toSerialize["sandbox_version"] = o.SandboxVersion
	toSerialize["sandbox_versions_available"] = o.SandboxVersionsAvailable
	toSerialize["default_redirection_uri"] = o.DefaultRedirectionUri
	toSerialize["enabled_locales"] = o.EnabledLocales
	toSerialize["session_cookie"] = o.SessionCookie.Get()
	toSerialize["sessions"] = o.Sessions.Get()
	toSerialize["allow_organization_name_in_authentication_api"] = o.AllowOrganizationNameInAuthenticationApi
	toSerialize["customize_mfa_in_postlogin_action"] = o.CustomizeMfaInPostloginAction
	toSerialize["acr_values_supported"] = o.AcrValuesSupported
	toSerialize["mtls"] = o.Mtls.Get()
	toSerialize["pushed_authorization_requests_supported"] = o.PushedAuthorizationRequestsSupported
	return toSerialize, nil
}

func (o *TenantSettings) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"change_password",
		"guardian_mfa_page",
		"default_audience",
		"default_directory",
		"error_page",
		"device_flow",
		"flags",
		"friendly_name",
		"picture_url",
		"support_email",
		"support_url",
		"allowed_logout_urls",
		"session_lifetime",
		"idle_session_lifetime",
		"sandbox_version",
		"sandbox_versions_available",
		"default_redirection_uri",
		"enabled_locales",
		"session_cookie",
		"sessions",
		"allow_organization_name_in_authentication_api",
		"customize_mfa_in_postlogin_action",
		"acr_values_supported",
		"mtls",
		"pushed_authorization_requests_supported",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTenantSettings := _TenantSettings{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTenantSettings)

	if err != nil {
		return err
	}

	*o = TenantSettings(varTenantSettings)

	return err
}

type NullableTenantSettings struct {
	value *TenantSettings
	isSet bool
}

func (v NullableTenantSettings) Get() *TenantSettings {
	return v.value
}

func (v *NullableTenantSettings) Set(val *TenantSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantSettings(val *TenantSettings) *NullableTenantSettings {
	return &NullableTenantSettings{value: val, isSet: true}
}

func (v NullableTenantSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
