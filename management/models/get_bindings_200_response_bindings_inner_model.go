/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GetBindings200ResponseBindingsInner Binding is the associative entity joining a trigger, and an action together.
type GetBindings200ResponseBindingsInner struct {
	// The unique ID of this binding.
	Id        *string                                                    `json:"id,omitempty"`
	TriggerId *GetActions200ResponseActionsInnerSupportedTriggersInnerId `json:"trigger_id,omitempty"`
	// The name of the binding.
	DisplayName *string                            `json:"display_name,omitempty"`
	Action      *GetActions200ResponseActionsInner `json:"action,omitempty"`
	// The time when the binding was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// The time when the binding was updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetBindings200ResponseBindingsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBindings200ResponseBindingsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetBindings200ResponseBindingsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetBindings200ResponseBindingsInner) SetId(v string) {
	o.Id = &v
}

// GetTriggerId returns the TriggerId field value if set, zero value otherwise.
func (o *GetBindings200ResponseBindingsInner) GetTriggerId() GetActions200ResponseActionsInnerSupportedTriggersInnerId {
	if o == nil || IsNil(o.TriggerId) {
		var ret GetActions200ResponseActionsInnerSupportedTriggersInnerId
		return ret
	}
	return *o.TriggerId
}

// GetTriggerIdOk returns a tuple with the TriggerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBindings200ResponseBindingsInner) GetTriggerIdOk() (*GetActions200ResponseActionsInnerSupportedTriggersInnerId, bool) {
	if o == nil || IsNil(o.TriggerId) {
		return nil, false
	}
	return o.TriggerId, true
}

// HasTriggerId returns a boolean if a field has been set.
func (o *GetBindings200ResponseBindingsInner) HasTriggerId() bool {
	if o != nil && !IsNil(o.TriggerId) {
		return true
	}

	return false
}

// SetTriggerId gets a reference to the given GetActions200ResponseActionsInnerSupportedTriggersInnerId and assigns it to the TriggerId field.
func (o *GetBindings200ResponseBindingsInner) SetTriggerId(v GetActions200ResponseActionsInnerSupportedTriggersInnerId) {
	o.TriggerId = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *GetBindings200ResponseBindingsInner) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBindings200ResponseBindingsInner) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *GetBindings200ResponseBindingsInner) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *GetBindings200ResponseBindingsInner) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *GetBindings200ResponseBindingsInner) GetAction() GetActions200ResponseActionsInner {
	if o == nil || IsNil(o.Action) {
		var ret GetActions200ResponseActionsInner
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBindings200ResponseBindingsInner) GetActionOk() (*GetActions200ResponseActionsInner, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *GetBindings200ResponseBindingsInner) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given GetActions200ResponseActionsInner and assigns it to the Action field.
func (o *GetBindings200ResponseBindingsInner) SetAction(v GetActions200ResponseActionsInner) {
	o.Action = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GetBindings200ResponseBindingsInner) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBindings200ResponseBindingsInner) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GetBindings200ResponseBindingsInner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *GetBindings200ResponseBindingsInner) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GetBindings200ResponseBindingsInner) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBindings200ResponseBindingsInner) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GetBindings200ResponseBindingsInner) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *GetBindings200ResponseBindingsInner) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o GetBindings200ResponseBindingsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBindings200ResponseBindingsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.TriggerId) {
		toSerialize["trigger_id"] = o.TriggerId
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableGetBindings200ResponseBindingsInner struct {
	value *GetBindings200ResponseBindingsInner
	isSet bool
}

func (v NullableGetBindings200ResponseBindingsInner) Get() *GetBindings200ResponseBindingsInner {
	return v.value
}

func (v *NullableGetBindings200ResponseBindingsInner) Set(val *GetBindings200ResponseBindingsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBindings200ResponseBindingsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBindings200ResponseBindingsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBindings200ResponseBindingsInner(val *GetBindings200ResponseBindingsInner) *NullableGetBindings200ResponseBindingsInner {
	return &NullableGetBindings200ResponseBindingsInner{value: val, isSet: true}
}

func (v NullableGetBindings200ResponseBindingsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBindings200ResponseBindingsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
