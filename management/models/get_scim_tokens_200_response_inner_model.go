/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GetScimTokens200ResponseInner struct for GetScimTokens200ResponseInner
type GetScimTokens200ResponseInner struct {
	// The token's identifier
	TokenId string `json:"token_id"`
	// The scopes of the scim token
	Scopes []string `json:"scopes"`
	// The token's created at timestamp
	CreatedAt string `json:"created_at"`
	// The token's valid until timestamp
	ValidUntil string `json:"valid_until"`
	// The token's last used at timestamp
	LastUsedAt           string `json:"last_used_at"`
	AdditionalProperties map[string]interface{}
}

type _GetScimTokens200ResponseInner GetScimTokens200ResponseInner

// GetTokenId returns the TokenId field value
func (o *GetScimTokens200ResponseInner) GetTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *GetScimTokens200ResponseInner) GetTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *GetScimTokens200ResponseInner) SetTokenId(v string) {
	o.TokenId = v
}

// GetScopes returns the Scopes field value
func (o *GetScimTokens200ResponseInner) GetScopes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value
// and a boolean to check if the value has been set.
func (o *GetScimTokens200ResponseInner) GetScopesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scopes, true
}

// SetScopes sets field value
func (o *GetScimTokens200ResponseInner) SetScopes(v []string) {
	o.Scopes = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *GetScimTokens200ResponseInner) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *GetScimTokens200ResponseInner) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *GetScimTokens200ResponseInner) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetValidUntil returns the ValidUntil field value
func (o *GetScimTokens200ResponseInner) GetValidUntil() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValidUntil
}

// GetValidUntilOk returns a tuple with the ValidUntil field value
// and a boolean to check if the value has been set.
func (o *GetScimTokens200ResponseInner) GetValidUntilOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidUntil, true
}

// SetValidUntil sets field value
func (o *GetScimTokens200ResponseInner) SetValidUntil(v string) {
	o.ValidUntil = v
}

// GetLastUsedAt returns the LastUsedAt field value
func (o *GetScimTokens200ResponseInner) GetLastUsedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastUsedAt
}

// GetLastUsedAtOk returns a tuple with the LastUsedAt field value
// and a boolean to check if the value has been set.
func (o *GetScimTokens200ResponseInner) GetLastUsedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUsedAt, true
}

// SetLastUsedAt sets field value
func (o *GetScimTokens200ResponseInner) SetLastUsedAt(v string) {
	o.LastUsedAt = v
}

func (o GetScimTokens200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetScimTokens200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["token_id"] = o.TokenId
	toSerialize["scopes"] = o.Scopes
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["valid_until"] = o.ValidUntil
	toSerialize["last_used_at"] = o.LastUsedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetScimTokens200ResponseInner) UnmarshalJSON(data []byte) (err error) {
	varGetScimTokens200ResponseInner := _GetScimTokens200ResponseInner{}

	err = json.Unmarshal(data, &varGetScimTokens200ResponseInner)

	if err != nil {
		return err
	}

	*o = GetScimTokens200ResponseInner(varGetScimTokens200ResponseInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "token_id")
		delete(additionalProperties, "scopes")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "valid_until")
		delete(additionalProperties, "last_used_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetScimTokens200ResponseInner struct {
	value *GetScimTokens200ResponseInner
	isSet bool
}

func (v NullableGetScimTokens200ResponseInner) Get() *GetScimTokens200ResponseInner {
	return v.value
}

func (v *NullableGetScimTokens200ResponseInner) Set(val *GetScimTokens200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetScimTokens200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetScimTokens200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetScimTokens200ResponseInner(val *GetScimTokens200ResponseInner) *NullableGetScimTokens200ResponseInner {
	return &NullableGetScimTokens200ResponseInner{value: val, isSet: true}
}

func (v NullableGetScimTokens200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetScimTokens200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
