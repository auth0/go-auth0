/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// TenantSettingsDeviceFlowCharset Character set used to generate a User Code. Can be `base20` or `digits`.
type TenantSettingsDeviceFlowCharset string

// List of tenantSettings_device_flow_charset
const (
	TENANTSETTINGSDEVICEFLOWCHARSET_BASE20 TenantSettingsDeviceFlowCharset = "base20"
	TENANTSETTINGSDEVICEFLOWCHARSET_DIGITS TenantSettingsDeviceFlowCharset = "digits"
)

// All allowed values of TenantSettingsDeviceFlowCharset enum
var AllowedTenantSettingsDeviceFlowCharsetEnumValues = []TenantSettingsDeviceFlowCharset{
	"base20",
	"digits",
}

func (v *TenantSettingsDeviceFlowCharset) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TenantSettingsDeviceFlowCharset(value)
	for _, existing := range AllowedTenantSettingsDeviceFlowCharsetEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TenantSettingsDeviceFlowCharset", value)
}

// NewTenantSettingsDeviceFlowCharsetFromValue returns a pointer to a valid TenantSettingsDeviceFlowCharset
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTenantSettingsDeviceFlowCharsetFromValue(v string) (*TenantSettingsDeviceFlowCharset, error) {
	ev := TenantSettingsDeviceFlowCharset(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TenantSettingsDeviceFlowCharset: valid values are %v", v, AllowedTenantSettingsDeviceFlowCharsetEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TenantSettingsDeviceFlowCharset) IsValid() bool {
	for _, existing := range AllowedTenantSettingsDeviceFlowCharsetEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to tenantSettings_device_flow_charset value
func (v TenantSettingsDeviceFlowCharset) Ptr() *TenantSettingsDeviceFlowCharset {
	return &v
}

type NullableTenantSettingsDeviceFlowCharset struct {
	value *TenantSettingsDeviceFlowCharset
	isSet bool
}

func (v NullableTenantSettingsDeviceFlowCharset) Get() *TenantSettingsDeviceFlowCharset {
	return v.value
}

func (v *NullableTenantSettingsDeviceFlowCharset) Set(val *TenantSettingsDeviceFlowCharset) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantSettingsDeviceFlowCharset) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantSettingsDeviceFlowCharset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantSettingsDeviceFlowCharset(val *TenantSettingsDeviceFlowCharset) *NullableTenantSettingsDeviceFlowCharset {
	return &NullableTenantSettingsDeviceFlowCharset{value: val, isSet: true}
}

func (v NullableTenantSettingsDeviceFlowCharset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantSettingsDeviceFlowCharset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
