/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetLogStreams200ResponseInnerOneOf2SinkAzureRegion Azure Region Name
type GetLogStreams200ResponseInnerOneOf2SinkAzureRegion string

// List of get_log_streams_200_response_inner_oneOf_2_sink_azureRegion
const (
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_AUSTRALIACENTRAL   GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "australiacentral"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_AUSTRALIAEAST      GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "australiaeast"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_AUSTRALIASOUTHEAST GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "australiasoutheast"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_BRAZILSOUTH        GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "brazilsouth"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_CANADACENTRAL      GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "canadacentral"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_CANADAEAST         GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "canadaeast"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_CENTRALINDIA       GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "centralindia"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_CENTRALUS          GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "centralus"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_EASTASIA           GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "eastasia"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_EASTUS             GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "eastus"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_EASTUS2            GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "eastus2"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_FRANCECENTRAL      GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "francecentral"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_GERMANYWESTCENTRAL GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "germanywestcentral"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_JAPANEAST          GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "japaneast"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_JAPANWEST          GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "japanwest"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_KOREACENTRAL       GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "koreacentral"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_KOREASOUTH         GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "koreasouth"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_NORTHCENTRALUS     GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "northcentralus"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_NORTHEUROPE        GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "northeurope"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_NORWAYEAST         GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "norwayeast"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_SOUTHAFRICANORTH   GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "southafricanorth"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_SOUTHCENTRALUS     GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "southcentralus"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_SOUTHEASTASIA      GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "southeastasia"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_SOUTHINDIA         GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "southindia"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_SWEDENCENTRAL      GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "swedencentral"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_SWITZERLANDNORTH   GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "switzerlandnorth"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_UAENORTH           GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "uaenorth"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_UKSOUTH            GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "uksouth"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_UKWEST             GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "ukwest"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_WESTCENTRALUS      GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "westcentralus"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_WESTEUROPE         GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "westeurope"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_WESTINDIA          GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "westindia"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_WESTUS             GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "westus"
	GETLOGSTREAMS200RESPONSEINNERONEOF2SINKAZUREREGION_WESTUS2            GetLogStreams200ResponseInnerOneOf2SinkAzureRegion = "westus2"
)

// All allowed values of GetLogStreams200ResponseInnerOneOf2SinkAzureRegion enum
var AllowedGetLogStreams200ResponseInnerOneOf2SinkAzureRegionEnumValues = []GetLogStreams200ResponseInnerOneOf2SinkAzureRegion{
	"australiacentral",
	"australiaeast",
	"australiasoutheast",
	"brazilsouth",
	"canadacentral",
	"canadaeast",
	"centralindia",
	"centralus",
	"eastasia",
	"eastus",
	"eastus2",
	"francecentral",
	"germanywestcentral",
	"japaneast",
	"japanwest",
	"koreacentral",
	"koreasouth",
	"northcentralus",
	"northeurope",
	"norwayeast",
	"southafricanorth",
	"southcentralus",
	"southeastasia",
	"southindia",
	"swedencentral",
	"switzerlandnorth",
	"uaenorth",
	"uksouth",
	"ukwest",
	"westcentralus",
	"westeurope",
	"westindia",
	"westus",
	"westus2",
}

func (v *GetLogStreams200ResponseInnerOneOf2SinkAzureRegion) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetLogStreams200ResponseInnerOneOf2SinkAzureRegion(value)
	for _, existing := range AllowedGetLogStreams200ResponseInnerOneOf2SinkAzureRegionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetLogStreams200ResponseInnerOneOf2SinkAzureRegion", value)
}

// NewGetLogStreams200ResponseInnerOneOf2SinkAzureRegionFromValue returns a pointer to a valid GetLogStreams200ResponseInnerOneOf2SinkAzureRegion
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetLogStreams200ResponseInnerOneOf2SinkAzureRegionFromValue(v string) (*GetLogStreams200ResponseInnerOneOf2SinkAzureRegion, error) {
	ev := GetLogStreams200ResponseInnerOneOf2SinkAzureRegion(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetLogStreams200ResponseInnerOneOf2SinkAzureRegion: valid values are %v", v, AllowedGetLogStreams200ResponseInnerOneOf2SinkAzureRegionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetLogStreams200ResponseInnerOneOf2SinkAzureRegion) IsValid() bool {
	for _, existing := range AllowedGetLogStreams200ResponseInnerOneOf2SinkAzureRegionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to get_log_streams_200_response_inner_oneOf_2_sink_azureRegion value
func (v GetLogStreams200ResponseInnerOneOf2SinkAzureRegion) Ptr() *GetLogStreams200ResponseInnerOneOf2SinkAzureRegion {
	return &v
}

type NullableGetLogStreams200ResponseInnerOneOf2SinkAzureRegion struct {
	value *GetLogStreams200ResponseInnerOneOf2SinkAzureRegion
	isSet bool
}

func (v NullableGetLogStreams200ResponseInnerOneOf2SinkAzureRegion) Get() *GetLogStreams200ResponseInnerOneOf2SinkAzureRegion {
	return v.value
}

func (v *NullableGetLogStreams200ResponseInnerOneOf2SinkAzureRegion) Set(val *GetLogStreams200ResponseInnerOneOf2SinkAzureRegion) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLogStreams200ResponseInnerOneOf2SinkAzureRegion) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLogStreams200ResponseInnerOneOf2SinkAzureRegion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLogStreams200ResponseInnerOneOf2SinkAzureRegion(val *GetLogStreams200ResponseInnerOneOf2SinkAzureRegion) *NullableGetLogStreams200ResponseInnerOneOf2SinkAzureRegion {
	return &NullableGetLogStreams200ResponseInnerOneOf2SinkAzureRegion{value: val, isSet: true}
}

func (v NullableGetLogStreams200ResponseInnerOneOf2SinkAzureRegion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLogStreams200ResponseInnerOneOf2SinkAzureRegion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
