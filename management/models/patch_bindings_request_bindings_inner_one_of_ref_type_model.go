/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PatchBindingsRequestBindingsInnerOneOfRefType How the action is being referred to: `action_id` or `action_name`.
type PatchBindingsRequestBindingsInnerOneOfRefType string

// List of patch_bindings_request_bindings_inner_oneOf_ref_type
const (
	PATCHBINDINGSREQUESTBINDINGSINNERONEOFREFTYPE_BINDING_ID  PatchBindingsRequestBindingsInnerOneOfRefType = "binding_id"
	PATCHBINDINGSREQUESTBINDINGSINNERONEOFREFTYPE_ACTION_ID   PatchBindingsRequestBindingsInnerOneOfRefType = "action_id"
	PATCHBINDINGSREQUESTBINDINGSINNERONEOFREFTYPE_ACTION_NAME PatchBindingsRequestBindingsInnerOneOfRefType = "action_name"
)

// All allowed values of PatchBindingsRequestBindingsInnerOneOfRefType enum
var AllowedPatchBindingsRequestBindingsInnerOneOfRefTypeEnumValues = []PatchBindingsRequestBindingsInnerOneOfRefType{
	"binding_id",
	"action_id",
	"action_name",
}

func (v *PatchBindingsRequestBindingsInnerOneOfRefType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PatchBindingsRequestBindingsInnerOneOfRefType(value)
	for _, existing := range AllowedPatchBindingsRequestBindingsInnerOneOfRefTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PatchBindingsRequestBindingsInnerOneOfRefType", value)
}

// NewPatchBindingsRequestBindingsInnerOneOfRefTypeFromValue returns a pointer to a valid PatchBindingsRequestBindingsInnerOneOfRefType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPatchBindingsRequestBindingsInnerOneOfRefTypeFromValue(v string) (*PatchBindingsRequestBindingsInnerOneOfRefType, error) {
	ev := PatchBindingsRequestBindingsInnerOneOfRefType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PatchBindingsRequestBindingsInnerOneOfRefType: valid values are %v", v, AllowedPatchBindingsRequestBindingsInnerOneOfRefTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PatchBindingsRequestBindingsInnerOneOfRefType) IsValid() bool {
	for _, existing := range AllowedPatchBindingsRequestBindingsInnerOneOfRefTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to patch_bindings_request_bindings_inner_oneOf_ref_type value
func (v PatchBindingsRequestBindingsInnerOneOfRefType) Ptr() *PatchBindingsRequestBindingsInnerOneOfRefType {
	return &v
}

type NullablePatchBindingsRequestBindingsInnerOneOfRefType struct {
	value *PatchBindingsRequestBindingsInnerOneOfRefType
	isSet bool
}

func (v NullablePatchBindingsRequestBindingsInnerOneOfRefType) Get() *PatchBindingsRequestBindingsInnerOneOfRefType {
	return v.value
}

func (v *NullablePatchBindingsRequestBindingsInnerOneOfRefType) Set(val *PatchBindingsRequestBindingsInnerOneOfRefType) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchBindingsRequestBindingsInnerOneOfRefType) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchBindingsRequestBindingsInnerOneOfRefType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchBindingsRequestBindingsInnerOneOfRefType(val *PatchBindingsRequestBindingsInnerOneOfRefType) *NullablePatchBindingsRequestBindingsInnerOneOfRefType {
	return &NullablePatchBindingsRequestBindingsInnerOneOfRefType{value: val, isSet: true}
}

func (v NullablePatchBindingsRequestBindingsInnerOneOfRefType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchBindingsRequestBindingsInnerOneOfRefType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
