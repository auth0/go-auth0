/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// TenantSettingsErrorPage Error page customization.
type TenantSettingsErrorPage struct {
	// Custom Error HTML (<a href='https://github.com/Shopify/liquid/wiki/Liquid-for-Designers'>Liquid syntax</a> is supported).
	Html string `json:"html"`
	// Whether to show the link to log as part of the default error page (true, default) or not to show the link (false).
	ShowLogLink bool `json:"show_log_link"`
	// URL to redirect to when an error occurs instead of showing the default error page.
	Url string `json:"url"`
}

type _TenantSettingsErrorPage TenantSettingsErrorPage

// GetHtml returns the Html field value
func (o *TenantSettingsErrorPage) GetHtml() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Html
}

// GetHtmlOk returns a tuple with the Html field value
// and a boolean to check if the value has been set.
func (o *TenantSettingsErrorPage) GetHtmlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Html, true
}

// SetHtml sets field value
func (o *TenantSettingsErrorPage) SetHtml(v string) {
	o.Html = v
}

// GetShowLogLink returns the ShowLogLink field value
func (o *TenantSettingsErrorPage) GetShowLogLink() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ShowLogLink
}

// GetShowLogLinkOk returns a tuple with the ShowLogLink field value
// and a boolean to check if the value has been set.
func (o *TenantSettingsErrorPage) GetShowLogLinkOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShowLogLink, true
}

// SetShowLogLink sets field value
func (o *TenantSettingsErrorPage) SetShowLogLink(v bool) {
	o.ShowLogLink = v
}

// GetUrl returns the Url field value
func (o *TenantSettingsErrorPage) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *TenantSettingsErrorPage) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *TenantSettingsErrorPage) SetUrl(v string) {
	o.Url = v
}

func (o TenantSettingsErrorPage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantSettingsErrorPage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["html"] = o.Html
	toSerialize["show_log_link"] = o.ShowLogLink
	toSerialize["url"] = o.Url
	return toSerialize, nil
}

func (o *TenantSettingsErrorPage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"html",
		"show_log_link",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTenantSettingsErrorPage := _TenantSettingsErrorPage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTenantSettingsErrorPage)

	if err != nil {
		return err
	}

	*o = TenantSettingsErrorPage(varTenantSettingsErrorPage)

	return err
}

type NullableTenantSettingsErrorPage struct {
	value *TenantSettingsErrorPage
	isSet bool
}

func (v NullableTenantSettingsErrorPage) Get() *TenantSettingsErrorPage {
	return v.value
}

func (v *NullableTenantSettingsErrorPage) Set(val *TenantSettingsErrorPage) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantSettingsErrorPage) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantSettingsErrorPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantSettingsErrorPage(val *TenantSettingsErrorPage) *NullableTenantSettingsErrorPage {
	return &NullableTenantSettingsErrorPage{value: val, isSet: true}
}

func (v NullableTenantSettingsErrorPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantSettingsErrorPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
