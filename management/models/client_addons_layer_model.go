/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientAddonsLayer Layer addon configuration.
type ClientAddonsLayer struct {
	// Provider ID of your Layer account
	ProviderId string `json:"providerId"`
	// Authentication Key identifier used to sign the Layer token.
	KeyId string `json:"keyId"`
	// Private key for signing the Layer token.
	PrivateKey string `json:"privateKey"`
	// Name of the property used as the unique user id in Layer. If not specified `user_id` is used.
	Principal *string `json:"principal,omitempty"`
	// Optional expiration in minutes for the generated token. Defaults to 5 minutes.
	Expiration           *int32 `json:"expiration,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClientAddonsLayer ClientAddonsLayer

// GetProviderId returns the ProviderId field value
func (o *ClientAddonsLayer) GetProviderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsLayer) GetProviderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderId, true
}

// SetProviderId sets field value
func (o *ClientAddonsLayer) SetProviderId(v string) {
	o.ProviderId = v
}

// GetKeyId returns the KeyId field value
func (o *ClientAddonsLayer) GetKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsLayer) GetKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyId, true
}

// SetKeyId sets field value
func (o *ClientAddonsLayer) SetKeyId(v string) {
	o.KeyId = v
}

// GetPrivateKey returns the PrivateKey field value
func (o *ClientAddonsLayer) GetPrivateKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value
// and a boolean to check if the value has been set.
func (o *ClientAddonsLayer) GetPrivateKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateKey, true
}

// SetPrivateKey sets field value
func (o *ClientAddonsLayer) SetPrivateKey(v string) {
	o.PrivateKey = v
}

// GetPrincipal returns the Principal field value if set, zero value otherwise.
func (o *ClientAddonsLayer) GetPrincipal() string {
	if o == nil || IsNil(o.Principal) {
		var ret string
		return ret
	}
	return *o.Principal
}

// GetPrincipalOk returns a tuple with the Principal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAddonsLayer) GetPrincipalOk() (*string, bool) {
	if o == nil || IsNil(o.Principal) {
		return nil, false
	}
	return o.Principal, true
}

// HasPrincipal returns a boolean if a field has been set.
func (o *ClientAddonsLayer) HasPrincipal() bool {
	if o != nil && !IsNil(o.Principal) {
		return true
	}

	return false
}

// SetPrincipal gets a reference to the given string and assigns it to the Principal field.
func (o *ClientAddonsLayer) SetPrincipal(v string) {
	o.Principal = &v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *ClientAddonsLayer) GetExpiration() int32 {
	if o == nil || IsNil(o.Expiration) {
		var ret int32
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAddonsLayer) GetExpirationOk() (*int32, bool) {
	if o == nil || IsNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *ClientAddonsLayer) HasExpiration() bool {
	if o != nil && !IsNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given int32 and assigns it to the Expiration field.
func (o *ClientAddonsLayer) SetExpiration(v int32) {
	o.Expiration = &v
}

func (o ClientAddonsLayer) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientAddonsLayer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["providerId"] = o.ProviderId
	toSerialize["keyId"] = o.KeyId
	toSerialize["privateKey"] = o.PrivateKey
	if !IsNil(o.Principal) {
		toSerialize["principal"] = o.Principal
	}
	if !IsNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClientAddonsLayer) UnmarshalJSON(data []byte) (err error) {
	varClientAddonsLayer := _ClientAddonsLayer{}

	err = json.Unmarshal(data, &varClientAddonsLayer)

	if err != nil {
		return err
	}

	*o = ClientAddonsLayer(varClientAddonsLayer)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "providerId")
		delete(additionalProperties, "keyId")
		delete(additionalProperties, "privateKey")
		delete(additionalProperties, "principal")
		delete(additionalProperties, "expiration")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClientAddonsLayer struct {
	value *ClientAddonsLayer
	isSet bool
}

func (v NullableClientAddonsLayer) Get() *ClientAddonsLayer {
	return v.value
}

func (v *NullableClientAddonsLayer) Set(val *ClientAddonsLayer) {
	v.value = val
	v.isSet = true
}

func (v NullableClientAddonsLayer) IsSet() bool {
	return v.isSet
}

func (v *NullableClientAddonsLayer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientAddonsLayer(val *ClientAddonsLayer) *NullableClientAddonsLayer {
	return &NullableClientAddonsLayer{value: val, isSet: true}
}

func (v NullableClientAddonsLayer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientAddonsLayer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
