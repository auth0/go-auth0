/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GetDeviceCredentials200ResponseOneOf struct for GetDeviceCredentials200ResponseOneOf
type GetDeviceCredentials200ResponseOneOf struct {
	Start             *float32           `json:"start,omitempty"`
	Limit             *float32           `json:"limit,omitempty"`
	Total             *float32           `json:"total,omitempty"`
	DeviceCredentials []DeviceCredential `json:"device_credentials,omitempty"`
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *GetDeviceCredentials200ResponseOneOf) GetStart() float32 {
	if o == nil || IsNil(o.Start) {
		var ret float32
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceCredentials200ResponseOneOf) GetStartOk() (*float32, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *GetDeviceCredentials200ResponseOneOf) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given float32 and assigns it to the Start field.
func (o *GetDeviceCredentials200ResponseOneOf) SetStart(v float32) {
	o.Start = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *GetDeviceCredentials200ResponseOneOf) GetLimit() float32 {
	if o == nil || IsNil(o.Limit) {
		var ret float32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceCredentials200ResponseOneOf) GetLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *GetDeviceCredentials200ResponseOneOf) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given float32 and assigns it to the Limit field.
func (o *GetDeviceCredentials200ResponseOneOf) SetLimit(v float32) {
	o.Limit = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetDeviceCredentials200ResponseOneOf) GetTotal() float32 {
	if o == nil || IsNil(o.Total) {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceCredentials200ResponseOneOf) GetTotalOk() (*float32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetDeviceCredentials200ResponseOneOf) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *GetDeviceCredentials200ResponseOneOf) SetTotal(v float32) {
	o.Total = &v
}

// GetDeviceCredentials returns the DeviceCredentials field value if set, zero value otherwise.
func (o *GetDeviceCredentials200ResponseOneOf) GetDeviceCredentials() []DeviceCredential {
	if o == nil || IsNil(o.DeviceCredentials) {
		var ret []DeviceCredential
		return ret
	}
	return o.DeviceCredentials
}

// GetDeviceCredentialsOk returns a tuple with the DeviceCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceCredentials200ResponseOneOf) GetDeviceCredentialsOk() ([]DeviceCredential, bool) {
	if o == nil || IsNil(o.DeviceCredentials) {
		return nil, false
	}
	return o.DeviceCredentials, true
}

// HasDeviceCredentials returns a boolean if a field has been set.
func (o *GetDeviceCredentials200ResponseOneOf) HasDeviceCredentials() bool {
	if o != nil && !IsNil(o.DeviceCredentials) {
		return true
	}

	return false
}

// SetDeviceCredentials gets a reference to the given []DeviceCredential and assigns it to the DeviceCredentials field.
func (o *GetDeviceCredentials200ResponseOneOf) SetDeviceCredentials(v []DeviceCredential) {
	o.DeviceCredentials = v
}

func (o GetDeviceCredentials200ResponseOneOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDeviceCredentials200ResponseOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.DeviceCredentials) {
		toSerialize["device_credentials"] = o.DeviceCredentials
	}
	return toSerialize, nil
}

type NullableGetDeviceCredentials200ResponseOneOf struct {
	value *GetDeviceCredentials200ResponseOneOf
	isSet bool
}

func (v NullableGetDeviceCredentials200ResponseOneOf) Get() *GetDeviceCredentials200ResponseOneOf {
	return v.value
}

func (v *NullableGetDeviceCredentials200ResponseOneOf) Set(val *GetDeviceCredentials200ResponseOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDeviceCredentials200ResponseOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDeviceCredentials200ResponseOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDeviceCredentials200ResponseOneOf(val *GetDeviceCredentials200ResponseOneOf) *NullableGetDeviceCredentials200ResponseOneOf {
	return &NullableGetDeviceCredentials200ResponseOneOf{value: val, isSet: true}
}

func (v NullableGetDeviceCredentials200ResponseOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDeviceCredentials200ResponseOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
