/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// GetSessionsForUser200ResponseSessionsInnerAuthentication Details about authentication signals obtained during the login flow
type GetSessionsForUser200ResponseSessionsInnerAuthentication struct {
	// Contains the authentication methods a user has completed during their session
	Methods              []GetSessionsForUser200ResponseSessionsInnerAuthenticationMethodsInner `json:"methods"`
	AdditionalProperties map[string]interface{}
}

type _GetSessionsForUser200ResponseSessionsInnerAuthentication GetSessionsForUser200ResponseSessionsInnerAuthentication

// GetMethods returns the Methods field value
func (o *GetSessionsForUser200ResponseSessionsInnerAuthentication) GetMethods() []GetSessionsForUser200ResponseSessionsInnerAuthenticationMethodsInner {
	if o == nil {
		var ret []GetSessionsForUser200ResponseSessionsInnerAuthenticationMethodsInner
		return ret
	}

	return o.Methods
}

// GetMethodsOk returns a tuple with the Methods field value
// and a boolean to check if the value has been set.
func (o *GetSessionsForUser200ResponseSessionsInnerAuthentication) GetMethodsOk() ([]GetSessionsForUser200ResponseSessionsInnerAuthenticationMethodsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Methods, true
}

// SetMethods sets field value
func (o *GetSessionsForUser200ResponseSessionsInnerAuthentication) SetMethods(v []GetSessionsForUser200ResponseSessionsInnerAuthenticationMethodsInner) {
	o.Methods = v
}

func (o GetSessionsForUser200ResponseSessionsInnerAuthentication) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSessionsForUser200ResponseSessionsInnerAuthentication) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["methods"] = o.Methods

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetSessionsForUser200ResponseSessionsInnerAuthentication) UnmarshalJSON(data []byte) (err error) {
	varGetSessionsForUser200ResponseSessionsInnerAuthentication := _GetSessionsForUser200ResponseSessionsInnerAuthentication{}

	err = json.Unmarshal(data, &varGetSessionsForUser200ResponseSessionsInnerAuthentication)

	if err != nil {
		return err
	}

	*o = GetSessionsForUser200ResponseSessionsInnerAuthentication(varGetSessionsForUser200ResponseSessionsInnerAuthentication)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "methods")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetSessionsForUser200ResponseSessionsInnerAuthentication struct {
	value *GetSessionsForUser200ResponseSessionsInnerAuthentication
	isSet bool
}

func (v NullableGetSessionsForUser200ResponseSessionsInnerAuthentication) Get() *GetSessionsForUser200ResponseSessionsInnerAuthentication {
	return v.value
}

func (v *NullableGetSessionsForUser200ResponseSessionsInnerAuthentication) Set(val *GetSessionsForUser200ResponseSessionsInnerAuthentication) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSessionsForUser200ResponseSessionsInnerAuthentication) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSessionsForUser200ResponseSessionsInnerAuthentication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSessionsForUser200ResponseSessionsInnerAuthentication(val *GetSessionsForUser200ResponseSessionsInnerAuthentication) *NullableGetSessionsForUser200ResponseSessionsInnerAuthentication {
	return &NullableGetSessionsForUser200ResponseSessionsInnerAuthentication{value: val, isSet: true}
}

func (v NullableGetSessionsForUser200ResponseSessionsInnerAuthentication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSessionsForUser200ResponseSessionsInnerAuthentication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
