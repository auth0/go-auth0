/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetPartialsPromptParameter the model 'GetPartialsPromptParameter'
type GetPartialsPromptParameter string

// List of get_partials_prompt_parameter
const (
	GETPARTIALSPROMPTPARAMETER_LOGIN              GetPartialsPromptParameter = "login"
	GETPARTIALSPROMPTPARAMETER_LOGIN_ID           GetPartialsPromptParameter = "login-id"
	GETPARTIALSPROMPTPARAMETER_LOGIN_PASSWORD     GetPartialsPromptParameter = "login-password"
	GETPARTIALSPROMPTPARAMETER_LOGIN_PASSWORDLESS GetPartialsPromptParameter = "login-passwordless"
	GETPARTIALSPROMPTPARAMETER_SIGNUP             GetPartialsPromptParameter = "signup"
	GETPARTIALSPROMPTPARAMETER_SIGNUP_ID          GetPartialsPromptParameter = "signup-id"
	GETPARTIALSPROMPTPARAMETER_SIGNUP_PASSWORD    GetPartialsPromptParameter = "signup-password"
	GETPARTIALSPROMPTPARAMETER_CUSTOMIZED_CONSENT GetPartialsPromptParameter = "customized-consent"
)

// All allowed values of GetPartialsPromptParameter enum
var AllowedGetPartialsPromptParameterEnumValues = []GetPartialsPromptParameter{
	"login",
	"login-id",
	"login-password",
	"login-passwordless",
	"signup",
	"signup-id",
	"signup-password",
	"customized-consent",
}

func (v *GetPartialsPromptParameter) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetPartialsPromptParameter(value)
	for _, existing := range AllowedGetPartialsPromptParameterEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetPartialsPromptParameter", value)
}

// NewGetPartialsPromptParameterFromValue returns a pointer to a valid GetPartialsPromptParameter
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetPartialsPromptParameterFromValue(v string) (*GetPartialsPromptParameter, error) {
	ev := GetPartialsPromptParameter(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetPartialsPromptParameter: valid values are %v", v, AllowedGetPartialsPromptParameterEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetPartialsPromptParameter) IsValid() bool {
	for _, existing := range AllowedGetPartialsPromptParameterEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to get_partials_prompt_parameter value
func (v GetPartialsPromptParameter) Ptr() *GetPartialsPromptParameter {
	return &v
}

type NullableGetPartialsPromptParameter struct {
	value *GetPartialsPromptParameter
	isSet bool
}

func (v NullableGetPartialsPromptParameter) Get() *GetPartialsPromptParameter {
	return v.value
}

func (v *NullableGetPartialsPromptParameter) Set(val *GetPartialsPromptParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPartialsPromptParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPartialsPromptParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPartialsPromptParameter(val *GetPartialsPromptParameter) *NullableGetPartialsPromptParameter {
	return &NullableGetPartialsPromptParameter{value: val, isSet: true}
}

func (v NullableGetPartialsPromptParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPartialsPromptParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
