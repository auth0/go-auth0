/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ClientUpdate struct for ClientUpdate
type ClientUpdate struct {
	// The name of the client. Must contain at least one character. Does not allow '<' or '>'.
	Name *string `json:"name,omitempty"`
	// Free text description of the purpose of the Client. (Max character length: <code>140</code>)
	Description *string `json:"description,omitempty"`
	// The secret used to sign tokens for the client
	ClientSecret *string `json:"client_secret,omitempty"`
	// The URL of the client logo (recommended size: 150x150)
	LogoUri *string `json:"logo_uri,omitempty"`
	// A set of URLs that are valid to call back from Auth0 when authenticating users
	Callbacks  []string                       `json:"callbacks,omitempty"`
	OidcLogout NullableClientUpdateOidcLogout `json:"oidc_logout,omitempty"`
	// A set of URLs that represents valid origins for CORS
	AllowedOrigins []string `json:"allowed_origins,omitempty"`
	// A set of URLs that represents valid web origins for use with web message response mode
	WebOrigins []string `json:"web_origins,omitempty"`
	// A set of grant types that the client is authorized to use
	GrantTypes []string `json:"grant_types,omitempty"`
	// List of audiences for SAML protocol
	ClientAliases []string `json:"client_aliases,omitempty"`
	// Ids of clients that will be allowed to perform delegation requests. Clients that will be allowed to make delegation request. By default, all your clients will be allowed. This field allows you to specify specific clients
	AllowedClients []string `json:"allowed_clients,omitempty"`
	// URLs that are valid to redirect to after logout from Auth0.
	AllowedLogoutUrls []string                             `json:"allowed_logout_urls,omitempty"`
	JwtConfiguration  NullableClientUpdateJwtConfiguration `json:"jwt_configuration,omitempty"`
	EncryptionKey     NullableClientUpdateEncryptionKey    `json:"encryption_key,omitempty"`
	// <code>true</code> to use Auth0 instead of the IdP to do Single Sign On, <code>false</code> otherwise (default: <code>false</code>)
	Sso *bool `json:"sso,omitempty"`
	// <code>true</code> if this client can be used to make cross-origin authentication requests, <code>false</code> otherwise if cross origin is disabled
	CrossOriginAuthentication *bool `json:"cross_origin_authentication,omitempty"`
	// URL for the location in your site where the cross origin verification takes place for the cross-origin auth flow when performing Auth in your own domain instead of Auth0 hosted login page.
	CrossOriginLoc NullableString `json:"cross_origin_loc,omitempty"`
	// <code>true</code> to disable Single Sign On, <code>false</code> otherwise (default: <code>false</code>)
	SsoDisabled *bool `json:"sso_disabled,omitempty"`
	// <code>true</code> if the custom login page is to be used, <code>false</code> otherwise.
	CustomLoginPageOn       *bool                                       `json:"custom_login_page_on,omitempty"`
	TokenEndpointAuthMethod NullableClientUpdateTokenEndpointAuthMethod `json:"token_endpoint_auth_method,omitempty"`
	AppType                 *ClientUpdateAppType                        `json:"app_type,omitempty"`
	// Whether this client a first party client or not
	IsFirstParty *bool `json:"is_first_party,omitempty"`
	// Whether this client will conform to strict OIDC specifications
	OidcConformant *bool `json:"oidc_conformant,omitempty"`
	// The content (HTML, CSS, JS) of the custom login page
	CustomLoginPage        *string `json:"custom_login_page,omitempty"`
	CustomLoginPagePreview *string `json:"custom_login_page_preview,omitempty"`
	// Form template for WS-Federation protocol
	FormTemplate *string                    `json:"form_template,omitempty"`
	Addons       NullableClientUpdateAddons `json:"addons,omitempty"`
	// Metadata associated with the client, in the form of an object with string values (max 255 chars).  Maximum of 10 metadata properties allowed.  Field names (max 255 chars) are alphanumeric and may only include the following special characters:  :,-+=_*?\"/\\()<>@ [Tab] [Space]
	ClientMetadata map[string]interface{}     `json:"client_metadata,omitempty"`
	Mobile         NullableClientUpdateMobile `json:"mobile,omitempty"`
	// Initiate login uri, must be https
	InitiateLoginUri            *string                                         `json:"initiate_login_uri,omitempty"`
	NativeSocialLogin           NullableClientCreateNativeSocialLogin           `json:"native_social_login,omitempty"`
	RefreshToken                NullableClientRefreshToken                      `json:"refresh_token,omitempty"`
	OrganizationUsage           *ClientOrganizationUsage                        `json:"organization_usage,omitempty"`
	OrganizationRequireBehavior *ClientOrganizationRequireBehavior              `json:"organization_require_behavior,omitempty"`
	ClientAuthenticationMethods NullableClientUpdateClientAuthenticationMethods `json:"client_authentication_methods,omitempty"`
	// Makes the use of Pushed Authorization Requests mandatory for this client
	RequirePushedAuthorizationRequests *bool                                   `json:"require_pushed_authorization_requests,omitempty"`
	SignedRequestObject                NullableClientUpdateSignedRequestObject `json:"signed_request_object,omitempty"`
	// Makes the use of Proof-of-Possession mandatory for this client
	RequireProofOfPossession *bool                         `json:"require_proof_of_possession,omitempty"`
	ComplianceLevel          NullableClientComplianceLevel `json:"compliance_level,omitempty"`
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClientUpdate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClientUpdate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClientUpdate) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ClientUpdate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ClientUpdate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ClientUpdate) SetDescription(v string) {
	o.Description = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *ClientUpdate) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *ClientUpdate) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *ClientUpdate) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetLogoUri returns the LogoUri field value if set, zero value otherwise.
func (o *ClientUpdate) GetLogoUri() string {
	if o == nil || IsNil(o.LogoUri) {
		var ret string
		return ret
	}
	return *o.LogoUri
}

// GetLogoUriOk returns a tuple with the LogoUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetLogoUriOk() (*string, bool) {
	if o == nil || IsNil(o.LogoUri) {
		return nil, false
	}
	return o.LogoUri, true
}

// HasLogoUri returns a boolean if a field has been set.
func (o *ClientUpdate) HasLogoUri() bool {
	if o != nil && !IsNil(o.LogoUri) {
		return true
	}

	return false
}

// SetLogoUri gets a reference to the given string and assigns it to the LogoUri field.
func (o *ClientUpdate) SetLogoUri(v string) {
	o.LogoUri = &v
}

// GetCallbacks returns the Callbacks field value if set, zero value otherwise.
func (o *ClientUpdate) GetCallbacks() []string {
	if o == nil || IsNil(o.Callbacks) {
		var ret []string
		return ret
	}
	return o.Callbacks
}

// GetCallbacksOk returns a tuple with the Callbacks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetCallbacksOk() ([]string, bool) {
	if o == nil || IsNil(o.Callbacks) {
		return nil, false
	}
	return o.Callbacks, true
}

// HasCallbacks returns a boolean if a field has been set.
func (o *ClientUpdate) HasCallbacks() bool {
	if o != nil && !IsNil(o.Callbacks) {
		return true
	}

	return false
}

// SetCallbacks gets a reference to the given []string and assigns it to the Callbacks field.
func (o *ClientUpdate) SetCallbacks(v []string) {
	o.Callbacks = v
}

// GetOidcLogout returns the OidcLogout field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientUpdate) GetOidcLogout() ClientUpdateOidcLogout {
	if o == nil || IsNil(o.OidcLogout.Get()) {
		var ret ClientUpdateOidcLogout
		return ret
	}
	return *o.OidcLogout.Get()
}

// GetOidcLogoutOk returns a tuple with the OidcLogout field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientUpdate) GetOidcLogoutOk() (*ClientUpdateOidcLogout, bool) {
	if o == nil {
		return nil, false
	}
	return o.OidcLogout.Get(), o.OidcLogout.IsSet()
}

// HasOidcLogout returns a boolean if a field has been set.
func (o *ClientUpdate) HasOidcLogout() bool {
	if o != nil && o.OidcLogout.IsSet() {
		return true
	}

	return false
}

// SetOidcLogout gets a reference to the given NullableClientUpdateOidcLogout and assigns it to the OidcLogout field.
func (o *ClientUpdate) SetOidcLogout(v ClientUpdateOidcLogout) {
	o.OidcLogout.Set(&v)
}

// SetOidcLogoutNil sets the value for OidcLogout to be an explicit nil
func (o *ClientUpdate) SetOidcLogoutNil() {
	o.OidcLogout.Set(nil)
}

// UnsetOidcLogout ensures that no value is present for OidcLogout, not even an explicit nil
func (o *ClientUpdate) UnsetOidcLogout() {
	o.OidcLogout.Unset()
}

// GetAllowedOrigins returns the AllowedOrigins field value if set, zero value otherwise.
func (o *ClientUpdate) GetAllowedOrigins() []string {
	if o == nil || IsNil(o.AllowedOrigins) {
		var ret []string
		return ret
	}
	return o.AllowedOrigins
}

// GetAllowedOriginsOk returns a tuple with the AllowedOrigins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetAllowedOriginsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedOrigins) {
		return nil, false
	}
	return o.AllowedOrigins, true
}

// HasAllowedOrigins returns a boolean if a field has been set.
func (o *ClientUpdate) HasAllowedOrigins() bool {
	if o != nil && !IsNil(o.AllowedOrigins) {
		return true
	}

	return false
}

// SetAllowedOrigins gets a reference to the given []string and assigns it to the AllowedOrigins field.
func (o *ClientUpdate) SetAllowedOrigins(v []string) {
	o.AllowedOrigins = v
}

// GetWebOrigins returns the WebOrigins field value if set, zero value otherwise.
func (o *ClientUpdate) GetWebOrigins() []string {
	if o == nil || IsNil(o.WebOrigins) {
		var ret []string
		return ret
	}
	return o.WebOrigins
}

// GetWebOriginsOk returns a tuple with the WebOrigins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetWebOriginsOk() ([]string, bool) {
	if o == nil || IsNil(o.WebOrigins) {
		return nil, false
	}
	return o.WebOrigins, true
}

// HasWebOrigins returns a boolean if a field has been set.
func (o *ClientUpdate) HasWebOrigins() bool {
	if o != nil && !IsNil(o.WebOrigins) {
		return true
	}

	return false
}

// SetWebOrigins gets a reference to the given []string and assigns it to the WebOrigins field.
func (o *ClientUpdate) SetWebOrigins(v []string) {
	o.WebOrigins = v
}

// GetGrantTypes returns the GrantTypes field value if set, zero value otherwise.
func (o *ClientUpdate) GetGrantTypes() []string {
	if o == nil || IsNil(o.GrantTypes) {
		var ret []string
		return ret
	}
	return o.GrantTypes
}

// GetGrantTypesOk returns a tuple with the GrantTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetGrantTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.GrantTypes) {
		return nil, false
	}
	return o.GrantTypes, true
}

// HasGrantTypes returns a boolean if a field has been set.
func (o *ClientUpdate) HasGrantTypes() bool {
	if o != nil && !IsNil(o.GrantTypes) {
		return true
	}

	return false
}

// SetGrantTypes gets a reference to the given []string and assigns it to the GrantTypes field.
func (o *ClientUpdate) SetGrantTypes(v []string) {
	o.GrantTypes = v
}

// GetClientAliases returns the ClientAliases field value if set, zero value otherwise.
func (o *ClientUpdate) GetClientAliases() []string {
	if o == nil || IsNil(o.ClientAliases) {
		var ret []string
		return ret
	}
	return o.ClientAliases
}

// GetClientAliasesOk returns a tuple with the ClientAliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetClientAliasesOk() ([]string, bool) {
	if o == nil || IsNil(o.ClientAliases) {
		return nil, false
	}
	return o.ClientAliases, true
}

// HasClientAliases returns a boolean if a field has been set.
func (o *ClientUpdate) HasClientAliases() bool {
	if o != nil && !IsNil(o.ClientAliases) {
		return true
	}

	return false
}

// SetClientAliases gets a reference to the given []string and assigns it to the ClientAliases field.
func (o *ClientUpdate) SetClientAliases(v []string) {
	o.ClientAliases = v
}

// GetAllowedClients returns the AllowedClients field value if set, zero value otherwise.
func (o *ClientUpdate) GetAllowedClients() []string {
	if o == nil || IsNil(o.AllowedClients) {
		var ret []string
		return ret
	}
	return o.AllowedClients
}

// GetAllowedClientsOk returns a tuple with the AllowedClients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetAllowedClientsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedClients) {
		return nil, false
	}
	return o.AllowedClients, true
}

// HasAllowedClients returns a boolean if a field has been set.
func (o *ClientUpdate) HasAllowedClients() bool {
	if o != nil && !IsNil(o.AllowedClients) {
		return true
	}

	return false
}

// SetAllowedClients gets a reference to the given []string and assigns it to the AllowedClients field.
func (o *ClientUpdate) SetAllowedClients(v []string) {
	o.AllowedClients = v
}

// GetAllowedLogoutUrls returns the AllowedLogoutUrls field value if set, zero value otherwise.
func (o *ClientUpdate) GetAllowedLogoutUrls() []string {
	if o == nil || IsNil(o.AllowedLogoutUrls) {
		var ret []string
		return ret
	}
	return o.AllowedLogoutUrls
}

// GetAllowedLogoutUrlsOk returns a tuple with the AllowedLogoutUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetAllowedLogoutUrlsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedLogoutUrls) {
		return nil, false
	}
	return o.AllowedLogoutUrls, true
}

// HasAllowedLogoutUrls returns a boolean if a field has been set.
func (o *ClientUpdate) HasAllowedLogoutUrls() bool {
	if o != nil && !IsNil(o.AllowedLogoutUrls) {
		return true
	}

	return false
}

// SetAllowedLogoutUrls gets a reference to the given []string and assigns it to the AllowedLogoutUrls field.
func (o *ClientUpdate) SetAllowedLogoutUrls(v []string) {
	o.AllowedLogoutUrls = v
}

// GetJwtConfiguration returns the JwtConfiguration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientUpdate) GetJwtConfiguration() ClientUpdateJwtConfiguration {
	if o == nil || IsNil(o.JwtConfiguration.Get()) {
		var ret ClientUpdateJwtConfiguration
		return ret
	}
	return *o.JwtConfiguration.Get()
}

// GetJwtConfigurationOk returns a tuple with the JwtConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientUpdate) GetJwtConfigurationOk() (*ClientUpdateJwtConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return o.JwtConfiguration.Get(), o.JwtConfiguration.IsSet()
}

// HasJwtConfiguration returns a boolean if a field has been set.
func (o *ClientUpdate) HasJwtConfiguration() bool {
	if o != nil && o.JwtConfiguration.IsSet() {
		return true
	}

	return false
}

// SetJwtConfiguration gets a reference to the given NullableClientUpdateJwtConfiguration and assigns it to the JwtConfiguration field.
func (o *ClientUpdate) SetJwtConfiguration(v ClientUpdateJwtConfiguration) {
	o.JwtConfiguration.Set(&v)
}

// SetJwtConfigurationNil sets the value for JwtConfiguration to be an explicit nil
func (o *ClientUpdate) SetJwtConfigurationNil() {
	o.JwtConfiguration.Set(nil)
}

// UnsetJwtConfiguration ensures that no value is present for JwtConfiguration, not even an explicit nil
func (o *ClientUpdate) UnsetJwtConfiguration() {
	o.JwtConfiguration.Unset()
}

// GetEncryptionKey returns the EncryptionKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientUpdate) GetEncryptionKey() ClientUpdateEncryptionKey {
	if o == nil || IsNil(o.EncryptionKey.Get()) {
		var ret ClientUpdateEncryptionKey
		return ret
	}
	return *o.EncryptionKey.Get()
}

// GetEncryptionKeyOk returns a tuple with the EncryptionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientUpdate) GetEncryptionKeyOk() (*ClientUpdateEncryptionKey, bool) {
	if o == nil {
		return nil, false
	}
	return o.EncryptionKey.Get(), o.EncryptionKey.IsSet()
}

// HasEncryptionKey returns a boolean if a field has been set.
func (o *ClientUpdate) HasEncryptionKey() bool {
	if o != nil && o.EncryptionKey.IsSet() {
		return true
	}

	return false
}

// SetEncryptionKey gets a reference to the given NullableClientUpdateEncryptionKey and assigns it to the EncryptionKey field.
func (o *ClientUpdate) SetEncryptionKey(v ClientUpdateEncryptionKey) {
	o.EncryptionKey.Set(&v)
}

// SetEncryptionKeyNil sets the value for EncryptionKey to be an explicit nil
func (o *ClientUpdate) SetEncryptionKeyNil() {
	o.EncryptionKey.Set(nil)
}

// UnsetEncryptionKey ensures that no value is present for EncryptionKey, not even an explicit nil
func (o *ClientUpdate) UnsetEncryptionKey() {
	o.EncryptionKey.Unset()
}

// GetSso returns the Sso field value if set, zero value otherwise.
func (o *ClientUpdate) GetSso() bool {
	if o == nil || IsNil(o.Sso) {
		var ret bool
		return ret
	}
	return *o.Sso
}

// GetSsoOk returns a tuple with the Sso field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetSsoOk() (*bool, bool) {
	if o == nil || IsNil(o.Sso) {
		return nil, false
	}
	return o.Sso, true
}

// HasSso returns a boolean if a field has been set.
func (o *ClientUpdate) HasSso() bool {
	if o != nil && !IsNil(o.Sso) {
		return true
	}

	return false
}

// SetSso gets a reference to the given bool and assigns it to the Sso field.
func (o *ClientUpdate) SetSso(v bool) {
	o.Sso = &v
}

// GetCrossOriginAuthentication returns the CrossOriginAuthentication field value if set, zero value otherwise.
func (o *ClientUpdate) GetCrossOriginAuthentication() bool {
	if o == nil || IsNil(o.CrossOriginAuthentication) {
		var ret bool
		return ret
	}
	return *o.CrossOriginAuthentication
}

// GetCrossOriginAuthenticationOk returns a tuple with the CrossOriginAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetCrossOriginAuthenticationOk() (*bool, bool) {
	if o == nil || IsNil(o.CrossOriginAuthentication) {
		return nil, false
	}
	return o.CrossOriginAuthentication, true
}

// HasCrossOriginAuthentication returns a boolean if a field has been set.
func (o *ClientUpdate) HasCrossOriginAuthentication() bool {
	if o != nil && !IsNil(o.CrossOriginAuthentication) {
		return true
	}

	return false
}

// SetCrossOriginAuthentication gets a reference to the given bool and assigns it to the CrossOriginAuthentication field.
func (o *ClientUpdate) SetCrossOriginAuthentication(v bool) {
	o.CrossOriginAuthentication = &v
}

// GetCrossOriginLoc returns the CrossOriginLoc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientUpdate) GetCrossOriginLoc() string {
	if o == nil || IsNil(o.CrossOriginLoc.Get()) {
		var ret string
		return ret
	}
	return *o.CrossOriginLoc.Get()
}

// GetCrossOriginLocOk returns a tuple with the CrossOriginLoc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientUpdate) GetCrossOriginLocOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CrossOriginLoc.Get(), o.CrossOriginLoc.IsSet()
}

// HasCrossOriginLoc returns a boolean if a field has been set.
func (o *ClientUpdate) HasCrossOriginLoc() bool {
	if o != nil && o.CrossOriginLoc.IsSet() {
		return true
	}

	return false
}

// SetCrossOriginLoc gets a reference to the given NullableString and assigns it to the CrossOriginLoc field.
func (o *ClientUpdate) SetCrossOriginLoc(v string) {
	o.CrossOriginLoc.Set(&v)
}

// SetCrossOriginLocNil sets the value for CrossOriginLoc to be an explicit nil
func (o *ClientUpdate) SetCrossOriginLocNil() {
	o.CrossOriginLoc.Set(nil)
}

// UnsetCrossOriginLoc ensures that no value is present for CrossOriginLoc, not even an explicit nil
func (o *ClientUpdate) UnsetCrossOriginLoc() {
	o.CrossOriginLoc.Unset()
}

// GetSsoDisabled returns the SsoDisabled field value if set, zero value otherwise.
func (o *ClientUpdate) GetSsoDisabled() bool {
	if o == nil || IsNil(o.SsoDisabled) {
		var ret bool
		return ret
	}
	return *o.SsoDisabled
}

// GetSsoDisabledOk returns a tuple with the SsoDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetSsoDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SsoDisabled) {
		return nil, false
	}
	return o.SsoDisabled, true
}

// HasSsoDisabled returns a boolean if a field has been set.
func (o *ClientUpdate) HasSsoDisabled() bool {
	if o != nil && !IsNil(o.SsoDisabled) {
		return true
	}

	return false
}

// SetSsoDisabled gets a reference to the given bool and assigns it to the SsoDisabled field.
func (o *ClientUpdate) SetSsoDisabled(v bool) {
	o.SsoDisabled = &v
}

// GetCustomLoginPageOn returns the CustomLoginPageOn field value if set, zero value otherwise.
func (o *ClientUpdate) GetCustomLoginPageOn() bool {
	if o == nil || IsNil(o.CustomLoginPageOn) {
		var ret bool
		return ret
	}
	return *o.CustomLoginPageOn
}

// GetCustomLoginPageOnOk returns a tuple with the CustomLoginPageOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetCustomLoginPageOnOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomLoginPageOn) {
		return nil, false
	}
	return o.CustomLoginPageOn, true
}

// HasCustomLoginPageOn returns a boolean if a field has been set.
func (o *ClientUpdate) HasCustomLoginPageOn() bool {
	if o != nil && !IsNil(o.CustomLoginPageOn) {
		return true
	}

	return false
}

// SetCustomLoginPageOn gets a reference to the given bool and assigns it to the CustomLoginPageOn field.
func (o *ClientUpdate) SetCustomLoginPageOn(v bool) {
	o.CustomLoginPageOn = &v
}

// GetTokenEndpointAuthMethod returns the TokenEndpointAuthMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientUpdate) GetTokenEndpointAuthMethod() ClientUpdateTokenEndpointAuthMethod {
	if o == nil || IsNil(o.TokenEndpointAuthMethod.Get()) {
		var ret ClientUpdateTokenEndpointAuthMethod
		return ret
	}
	return *o.TokenEndpointAuthMethod.Get()
}

// GetTokenEndpointAuthMethodOk returns a tuple with the TokenEndpointAuthMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientUpdate) GetTokenEndpointAuthMethodOk() (*ClientUpdateTokenEndpointAuthMethod, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenEndpointAuthMethod.Get(), o.TokenEndpointAuthMethod.IsSet()
}

// HasTokenEndpointAuthMethod returns a boolean if a field has been set.
func (o *ClientUpdate) HasTokenEndpointAuthMethod() bool {
	if o != nil && o.TokenEndpointAuthMethod.IsSet() {
		return true
	}

	return false
}

// SetTokenEndpointAuthMethod gets a reference to the given NullableClientUpdateTokenEndpointAuthMethod and assigns it to the TokenEndpointAuthMethod field.
func (o *ClientUpdate) SetTokenEndpointAuthMethod(v ClientUpdateTokenEndpointAuthMethod) {
	o.TokenEndpointAuthMethod.Set(&v)
}

// SetTokenEndpointAuthMethodNil sets the value for TokenEndpointAuthMethod to be an explicit nil
func (o *ClientUpdate) SetTokenEndpointAuthMethodNil() {
	o.TokenEndpointAuthMethod.Set(nil)
}

// UnsetTokenEndpointAuthMethod ensures that no value is present for TokenEndpointAuthMethod, not even an explicit nil
func (o *ClientUpdate) UnsetTokenEndpointAuthMethod() {
	o.TokenEndpointAuthMethod.Unset()
}

// GetAppType returns the AppType field value if set, zero value otherwise.
func (o *ClientUpdate) GetAppType() ClientUpdateAppType {
	if o == nil || IsNil(o.AppType) {
		var ret ClientUpdateAppType
		return ret
	}
	return *o.AppType
}

// GetAppTypeOk returns a tuple with the AppType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetAppTypeOk() (*ClientUpdateAppType, bool) {
	if o == nil || IsNil(o.AppType) {
		return nil, false
	}
	return o.AppType, true
}

// HasAppType returns a boolean if a field has been set.
func (o *ClientUpdate) HasAppType() bool {
	if o != nil && !IsNil(o.AppType) {
		return true
	}

	return false
}

// SetAppType gets a reference to the given ClientUpdateAppType and assigns it to the AppType field.
func (o *ClientUpdate) SetAppType(v ClientUpdateAppType) {
	o.AppType = &v
}

// GetIsFirstParty returns the IsFirstParty field value if set, zero value otherwise.
func (o *ClientUpdate) GetIsFirstParty() bool {
	if o == nil || IsNil(o.IsFirstParty) {
		var ret bool
		return ret
	}
	return *o.IsFirstParty
}

// GetIsFirstPartyOk returns a tuple with the IsFirstParty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetIsFirstPartyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFirstParty) {
		return nil, false
	}
	return o.IsFirstParty, true
}

// HasIsFirstParty returns a boolean if a field has been set.
func (o *ClientUpdate) HasIsFirstParty() bool {
	if o != nil && !IsNil(o.IsFirstParty) {
		return true
	}

	return false
}

// SetIsFirstParty gets a reference to the given bool and assigns it to the IsFirstParty field.
func (o *ClientUpdate) SetIsFirstParty(v bool) {
	o.IsFirstParty = &v
}

// GetOidcConformant returns the OidcConformant field value if set, zero value otherwise.
func (o *ClientUpdate) GetOidcConformant() bool {
	if o == nil || IsNil(o.OidcConformant) {
		var ret bool
		return ret
	}
	return *o.OidcConformant
}

// GetOidcConformantOk returns a tuple with the OidcConformant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetOidcConformantOk() (*bool, bool) {
	if o == nil || IsNil(o.OidcConformant) {
		return nil, false
	}
	return o.OidcConformant, true
}

// HasOidcConformant returns a boolean if a field has been set.
func (o *ClientUpdate) HasOidcConformant() bool {
	if o != nil && !IsNil(o.OidcConformant) {
		return true
	}

	return false
}

// SetOidcConformant gets a reference to the given bool and assigns it to the OidcConformant field.
func (o *ClientUpdate) SetOidcConformant(v bool) {
	o.OidcConformant = &v
}

// GetCustomLoginPage returns the CustomLoginPage field value if set, zero value otherwise.
func (o *ClientUpdate) GetCustomLoginPage() string {
	if o == nil || IsNil(o.CustomLoginPage) {
		var ret string
		return ret
	}
	return *o.CustomLoginPage
}

// GetCustomLoginPageOk returns a tuple with the CustomLoginPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetCustomLoginPageOk() (*string, bool) {
	if o == nil || IsNil(o.CustomLoginPage) {
		return nil, false
	}
	return o.CustomLoginPage, true
}

// HasCustomLoginPage returns a boolean if a field has been set.
func (o *ClientUpdate) HasCustomLoginPage() bool {
	if o != nil && !IsNil(o.CustomLoginPage) {
		return true
	}

	return false
}

// SetCustomLoginPage gets a reference to the given string and assigns it to the CustomLoginPage field.
func (o *ClientUpdate) SetCustomLoginPage(v string) {
	o.CustomLoginPage = &v
}

// GetCustomLoginPagePreview returns the CustomLoginPagePreview field value if set, zero value otherwise.
func (o *ClientUpdate) GetCustomLoginPagePreview() string {
	if o == nil || IsNil(o.CustomLoginPagePreview) {
		var ret string
		return ret
	}
	return *o.CustomLoginPagePreview
}

// GetCustomLoginPagePreviewOk returns a tuple with the CustomLoginPagePreview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetCustomLoginPagePreviewOk() (*string, bool) {
	if o == nil || IsNil(o.CustomLoginPagePreview) {
		return nil, false
	}
	return o.CustomLoginPagePreview, true
}

// HasCustomLoginPagePreview returns a boolean if a field has been set.
func (o *ClientUpdate) HasCustomLoginPagePreview() bool {
	if o != nil && !IsNil(o.CustomLoginPagePreview) {
		return true
	}

	return false
}

// SetCustomLoginPagePreview gets a reference to the given string and assigns it to the CustomLoginPagePreview field.
func (o *ClientUpdate) SetCustomLoginPagePreview(v string) {
	o.CustomLoginPagePreview = &v
}

// GetFormTemplate returns the FormTemplate field value if set, zero value otherwise.
func (o *ClientUpdate) GetFormTemplate() string {
	if o == nil || IsNil(o.FormTemplate) {
		var ret string
		return ret
	}
	return *o.FormTemplate
}

// GetFormTemplateOk returns a tuple with the FormTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetFormTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.FormTemplate) {
		return nil, false
	}
	return o.FormTemplate, true
}

// HasFormTemplate returns a boolean if a field has been set.
func (o *ClientUpdate) HasFormTemplate() bool {
	if o != nil && !IsNil(o.FormTemplate) {
		return true
	}

	return false
}

// SetFormTemplate gets a reference to the given string and assigns it to the FormTemplate field.
func (o *ClientUpdate) SetFormTemplate(v string) {
	o.FormTemplate = &v
}

// GetAddons returns the Addons field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientUpdate) GetAddons() ClientUpdateAddons {
	if o == nil || IsNil(o.Addons.Get()) {
		var ret ClientUpdateAddons
		return ret
	}
	return *o.Addons.Get()
}

// GetAddonsOk returns a tuple with the Addons field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientUpdate) GetAddonsOk() (*ClientUpdateAddons, bool) {
	if o == nil {
		return nil, false
	}
	return o.Addons.Get(), o.Addons.IsSet()
}

// HasAddons returns a boolean if a field has been set.
func (o *ClientUpdate) HasAddons() bool {
	if o != nil && o.Addons.IsSet() {
		return true
	}

	return false
}

// SetAddons gets a reference to the given NullableClientUpdateAddons and assigns it to the Addons field.
func (o *ClientUpdate) SetAddons(v ClientUpdateAddons) {
	o.Addons.Set(&v)
}

// SetAddonsNil sets the value for Addons to be an explicit nil
func (o *ClientUpdate) SetAddonsNil() {
	o.Addons.Set(nil)
}

// UnsetAddons ensures that no value is present for Addons, not even an explicit nil
func (o *ClientUpdate) UnsetAddons() {
	o.Addons.Unset()
}

// GetClientMetadata returns the ClientMetadata field value if set, zero value otherwise.
func (o *ClientUpdate) GetClientMetadata() map[string]interface{} {
	if o == nil || IsNil(o.ClientMetadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.ClientMetadata
}

// GetClientMetadataOk returns a tuple with the ClientMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetClientMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ClientMetadata) {
		return map[string]interface{}{}, false
	}
	return o.ClientMetadata, true
}

// HasClientMetadata returns a boolean if a field has been set.
func (o *ClientUpdate) HasClientMetadata() bool {
	if o != nil && !IsNil(o.ClientMetadata) {
		return true
	}

	return false
}

// SetClientMetadata gets a reference to the given map[string]interface{} and assigns it to the ClientMetadata field.
func (o *ClientUpdate) SetClientMetadata(v map[string]interface{}) {
	o.ClientMetadata = v
}

// GetMobile returns the Mobile field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientUpdate) GetMobile() ClientUpdateMobile {
	if o == nil || IsNil(o.Mobile.Get()) {
		var ret ClientUpdateMobile
		return ret
	}
	return *o.Mobile.Get()
}

// GetMobileOk returns a tuple with the Mobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientUpdate) GetMobileOk() (*ClientUpdateMobile, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mobile.Get(), o.Mobile.IsSet()
}

// HasMobile returns a boolean if a field has been set.
func (o *ClientUpdate) HasMobile() bool {
	if o != nil && o.Mobile.IsSet() {
		return true
	}

	return false
}

// SetMobile gets a reference to the given NullableClientUpdateMobile and assigns it to the Mobile field.
func (o *ClientUpdate) SetMobile(v ClientUpdateMobile) {
	o.Mobile.Set(&v)
}

// SetMobileNil sets the value for Mobile to be an explicit nil
func (o *ClientUpdate) SetMobileNil() {
	o.Mobile.Set(nil)
}

// UnsetMobile ensures that no value is present for Mobile, not even an explicit nil
func (o *ClientUpdate) UnsetMobile() {
	o.Mobile.Unset()
}

// GetInitiateLoginUri returns the InitiateLoginUri field value if set, zero value otherwise.
func (o *ClientUpdate) GetInitiateLoginUri() string {
	if o == nil || IsNil(o.InitiateLoginUri) {
		var ret string
		return ret
	}
	return *o.InitiateLoginUri
}

// GetInitiateLoginUriOk returns a tuple with the InitiateLoginUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetInitiateLoginUriOk() (*string, bool) {
	if o == nil || IsNil(o.InitiateLoginUri) {
		return nil, false
	}
	return o.InitiateLoginUri, true
}

// HasInitiateLoginUri returns a boolean if a field has been set.
func (o *ClientUpdate) HasInitiateLoginUri() bool {
	if o != nil && !IsNil(o.InitiateLoginUri) {
		return true
	}

	return false
}

// SetInitiateLoginUri gets a reference to the given string and assigns it to the InitiateLoginUri field.
func (o *ClientUpdate) SetInitiateLoginUri(v string) {
	o.InitiateLoginUri = &v
}

// GetNativeSocialLogin returns the NativeSocialLogin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientUpdate) GetNativeSocialLogin() ClientCreateNativeSocialLogin {
	if o == nil || IsNil(o.NativeSocialLogin.Get()) {
		var ret ClientCreateNativeSocialLogin
		return ret
	}
	return *o.NativeSocialLogin.Get()
}

// GetNativeSocialLoginOk returns a tuple with the NativeSocialLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientUpdate) GetNativeSocialLoginOk() (*ClientCreateNativeSocialLogin, bool) {
	if o == nil {
		return nil, false
	}
	return o.NativeSocialLogin.Get(), o.NativeSocialLogin.IsSet()
}

// HasNativeSocialLogin returns a boolean if a field has been set.
func (o *ClientUpdate) HasNativeSocialLogin() bool {
	if o != nil && o.NativeSocialLogin.IsSet() {
		return true
	}

	return false
}

// SetNativeSocialLogin gets a reference to the given NullableClientCreateNativeSocialLogin and assigns it to the NativeSocialLogin field.
func (o *ClientUpdate) SetNativeSocialLogin(v ClientCreateNativeSocialLogin) {
	o.NativeSocialLogin.Set(&v)
}

// SetNativeSocialLoginNil sets the value for NativeSocialLogin to be an explicit nil
func (o *ClientUpdate) SetNativeSocialLoginNil() {
	o.NativeSocialLogin.Set(nil)
}

// UnsetNativeSocialLogin ensures that no value is present for NativeSocialLogin, not even an explicit nil
func (o *ClientUpdate) UnsetNativeSocialLogin() {
	o.NativeSocialLogin.Unset()
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientUpdate) GetRefreshToken() ClientRefreshToken {
	if o == nil || IsNil(o.RefreshToken.Get()) {
		var ret ClientRefreshToken
		return ret
	}
	return *o.RefreshToken.Get()
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientUpdate) GetRefreshTokenOk() (*ClientRefreshToken, bool) {
	if o == nil {
		return nil, false
	}
	return o.RefreshToken.Get(), o.RefreshToken.IsSet()
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *ClientUpdate) HasRefreshToken() bool {
	if o != nil && o.RefreshToken.IsSet() {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given NullableClientRefreshToken and assigns it to the RefreshToken field.
func (o *ClientUpdate) SetRefreshToken(v ClientRefreshToken) {
	o.RefreshToken.Set(&v)
}

// SetRefreshTokenNil sets the value for RefreshToken to be an explicit nil
func (o *ClientUpdate) SetRefreshTokenNil() {
	o.RefreshToken.Set(nil)
}

// UnsetRefreshToken ensures that no value is present for RefreshToken, not even an explicit nil
func (o *ClientUpdate) UnsetRefreshToken() {
	o.RefreshToken.Unset()
}

// GetOrganizationUsage returns the OrganizationUsage field value if set, zero value otherwise.
func (o *ClientUpdate) GetOrganizationUsage() ClientOrganizationUsage {
	if o == nil || IsNil(o.OrganizationUsage) {
		var ret ClientOrganizationUsage
		return ret
	}
	return *o.OrganizationUsage
}

// GetOrganizationUsageOk returns a tuple with the OrganizationUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetOrganizationUsageOk() (*ClientOrganizationUsage, bool) {
	if o == nil || IsNil(o.OrganizationUsage) {
		return nil, false
	}
	return o.OrganizationUsage, true
}

// HasOrganizationUsage returns a boolean if a field has been set.
func (o *ClientUpdate) HasOrganizationUsage() bool {
	if o != nil && !IsNil(o.OrganizationUsage) {
		return true
	}

	return false
}

// SetOrganizationUsage gets a reference to the given ClientOrganizationUsage and assigns it to the OrganizationUsage field.
func (o *ClientUpdate) SetOrganizationUsage(v ClientOrganizationUsage) {
	o.OrganizationUsage = &v
}

// GetOrganizationRequireBehavior returns the OrganizationRequireBehavior field value if set, zero value otherwise.
func (o *ClientUpdate) GetOrganizationRequireBehavior() ClientOrganizationRequireBehavior {
	if o == nil || IsNil(o.OrganizationRequireBehavior) {
		var ret ClientOrganizationRequireBehavior
		return ret
	}
	return *o.OrganizationRequireBehavior
}

// GetOrganizationRequireBehaviorOk returns a tuple with the OrganizationRequireBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetOrganizationRequireBehaviorOk() (*ClientOrganizationRequireBehavior, bool) {
	if o == nil || IsNil(o.OrganizationRequireBehavior) {
		return nil, false
	}
	return o.OrganizationRequireBehavior, true
}

// HasOrganizationRequireBehavior returns a boolean if a field has been set.
func (o *ClientUpdate) HasOrganizationRequireBehavior() bool {
	if o != nil && !IsNil(o.OrganizationRequireBehavior) {
		return true
	}

	return false
}

// SetOrganizationRequireBehavior gets a reference to the given ClientOrganizationRequireBehavior and assigns it to the OrganizationRequireBehavior field.
func (o *ClientUpdate) SetOrganizationRequireBehavior(v ClientOrganizationRequireBehavior) {
	o.OrganizationRequireBehavior = &v
}

// GetClientAuthenticationMethods returns the ClientAuthenticationMethods field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientUpdate) GetClientAuthenticationMethods() ClientUpdateClientAuthenticationMethods {
	if o == nil || IsNil(o.ClientAuthenticationMethods.Get()) {
		var ret ClientUpdateClientAuthenticationMethods
		return ret
	}
	return *o.ClientAuthenticationMethods.Get()
}

// GetClientAuthenticationMethodsOk returns a tuple with the ClientAuthenticationMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientUpdate) GetClientAuthenticationMethodsOk() (*ClientUpdateClientAuthenticationMethods, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientAuthenticationMethods.Get(), o.ClientAuthenticationMethods.IsSet()
}

// HasClientAuthenticationMethods returns a boolean if a field has been set.
func (o *ClientUpdate) HasClientAuthenticationMethods() bool {
	if o != nil && o.ClientAuthenticationMethods.IsSet() {
		return true
	}

	return false
}

// SetClientAuthenticationMethods gets a reference to the given NullableClientUpdateClientAuthenticationMethods and assigns it to the ClientAuthenticationMethods field.
func (o *ClientUpdate) SetClientAuthenticationMethods(v ClientUpdateClientAuthenticationMethods) {
	o.ClientAuthenticationMethods.Set(&v)
}

// SetClientAuthenticationMethodsNil sets the value for ClientAuthenticationMethods to be an explicit nil
func (o *ClientUpdate) SetClientAuthenticationMethodsNil() {
	o.ClientAuthenticationMethods.Set(nil)
}

// UnsetClientAuthenticationMethods ensures that no value is present for ClientAuthenticationMethods, not even an explicit nil
func (o *ClientUpdate) UnsetClientAuthenticationMethods() {
	o.ClientAuthenticationMethods.Unset()
}

// GetRequirePushedAuthorizationRequests returns the RequirePushedAuthorizationRequests field value if set, zero value otherwise.
func (o *ClientUpdate) GetRequirePushedAuthorizationRequests() bool {
	if o == nil || IsNil(o.RequirePushedAuthorizationRequests) {
		var ret bool
		return ret
	}
	return *o.RequirePushedAuthorizationRequests
}

// GetRequirePushedAuthorizationRequestsOk returns a tuple with the RequirePushedAuthorizationRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetRequirePushedAuthorizationRequestsOk() (*bool, bool) {
	if o == nil || IsNil(o.RequirePushedAuthorizationRequests) {
		return nil, false
	}
	return o.RequirePushedAuthorizationRequests, true
}

// HasRequirePushedAuthorizationRequests returns a boolean if a field has been set.
func (o *ClientUpdate) HasRequirePushedAuthorizationRequests() bool {
	if o != nil && !IsNil(o.RequirePushedAuthorizationRequests) {
		return true
	}

	return false
}

// SetRequirePushedAuthorizationRequests gets a reference to the given bool and assigns it to the RequirePushedAuthorizationRequests field.
func (o *ClientUpdate) SetRequirePushedAuthorizationRequests(v bool) {
	o.RequirePushedAuthorizationRequests = &v
}

// GetSignedRequestObject returns the SignedRequestObject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientUpdate) GetSignedRequestObject() ClientUpdateSignedRequestObject {
	if o == nil || IsNil(o.SignedRequestObject.Get()) {
		var ret ClientUpdateSignedRequestObject
		return ret
	}
	return *o.SignedRequestObject.Get()
}

// GetSignedRequestObjectOk returns a tuple with the SignedRequestObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientUpdate) GetSignedRequestObjectOk() (*ClientUpdateSignedRequestObject, bool) {
	if o == nil {
		return nil, false
	}
	return o.SignedRequestObject.Get(), o.SignedRequestObject.IsSet()
}

// HasSignedRequestObject returns a boolean if a field has been set.
func (o *ClientUpdate) HasSignedRequestObject() bool {
	if o != nil && o.SignedRequestObject.IsSet() {
		return true
	}

	return false
}

// SetSignedRequestObject gets a reference to the given NullableClientUpdateSignedRequestObject and assigns it to the SignedRequestObject field.
func (o *ClientUpdate) SetSignedRequestObject(v ClientUpdateSignedRequestObject) {
	o.SignedRequestObject.Set(&v)
}

// SetSignedRequestObjectNil sets the value for SignedRequestObject to be an explicit nil
func (o *ClientUpdate) SetSignedRequestObjectNil() {
	o.SignedRequestObject.Set(nil)
}

// UnsetSignedRequestObject ensures that no value is present for SignedRequestObject, not even an explicit nil
func (o *ClientUpdate) UnsetSignedRequestObject() {
	o.SignedRequestObject.Unset()
}

// GetRequireProofOfPossession returns the RequireProofOfPossession field value if set, zero value otherwise.
func (o *ClientUpdate) GetRequireProofOfPossession() bool {
	if o == nil || IsNil(o.RequireProofOfPossession) {
		var ret bool
		return ret
	}
	return *o.RequireProofOfPossession
}

// GetRequireProofOfPossessionOk returns a tuple with the RequireProofOfPossession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientUpdate) GetRequireProofOfPossessionOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireProofOfPossession) {
		return nil, false
	}
	return o.RequireProofOfPossession, true
}

// HasRequireProofOfPossession returns a boolean if a field has been set.
func (o *ClientUpdate) HasRequireProofOfPossession() bool {
	if o != nil && !IsNil(o.RequireProofOfPossession) {
		return true
	}

	return false
}

// SetRequireProofOfPossession gets a reference to the given bool and assigns it to the RequireProofOfPossession field.
func (o *ClientUpdate) SetRequireProofOfPossession(v bool) {
	o.RequireProofOfPossession = &v
}

// GetComplianceLevel returns the ComplianceLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientUpdate) GetComplianceLevel() ClientComplianceLevel {
	if o == nil || IsNil(o.ComplianceLevel.Get()) {
		var ret ClientComplianceLevel
		return ret
	}
	return *o.ComplianceLevel.Get()
}

// GetComplianceLevelOk returns a tuple with the ComplianceLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientUpdate) GetComplianceLevelOk() (*ClientComplianceLevel, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComplianceLevel.Get(), o.ComplianceLevel.IsSet()
}

// HasComplianceLevel returns a boolean if a field has been set.
func (o *ClientUpdate) HasComplianceLevel() bool {
	if o != nil && o.ComplianceLevel.IsSet() {
		return true
	}

	return false
}

// SetComplianceLevel gets a reference to the given NullableClientComplianceLevel and assigns it to the ComplianceLevel field.
func (o *ClientUpdate) SetComplianceLevel(v ClientComplianceLevel) {
	o.ComplianceLevel.Set(&v)
}

// SetComplianceLevelNil sets the value for ComplianceLevel to be an explicit nil
func (o *ClientUpdate) SetComplianceLevelNil() {
	o.ComplianceLevel.Set(nil)
}

// UnsetComplianceLevel ensures that no value is present for ComplianceLevel, not even an explicit nil
func (o *ClientUpdate) UnsetComplianceLevel() {
	o.ComplianceLevel.Unset()
}

func (o ClientUpdate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ClientSecret) {
		toSerialize["client_secret"] = o.ClientSecret
	}
	if !IsNil(o.LogoUri) {
		toSerialize["logo_uri"] = o.LogoUri
	}
	if !IsNil(o.Callbacks) {
		toSerialize["callbacks"] = o.Callbacks
	}
	if o.OidcLogout.IsSet() {
		toSerialize["oidc_logout"] = o.OidcLogout.Get()
	}
	if !IsNil(o.AllowedOrigins) {
		toSerialize["allowed_origins"] = o.AllowedOrigins
	}
	if !IsNil(o.WebOrigins) {
		toSerialize["web_origins"] = o.WebOrigins
	}
	if !IsNil(o.GrantTypes) {
		toSerialize["grant_types"] = o.GrantTypes
	}
	if !IsNil(o.ClientAliases) {
		toSerialize["client_aliases"] = o.ClientAliases
	}
	if !IsNil(o.AllowedClients) {
		toSerialize["allowed_clients"] = o.AllowedClients
	}
	if !IsNil(o.AllowedLogoutUrls) {
		toSerialize["allowed_logout_urls"] = o.AllowedLogoutUrls
	}
	if o.JwtConfiguration.IsSet() {
		toSerialize["jwt_configuration"] = o.JwtConfiguration.Get()
	}
	if o.EncryptionKey.IsSet() {
		toSerialize["encryption_key"] = o.EncryptionKey.Get()
	}
	if !IsNil(o.Sso) {
		toSerialize["sso"] = o.Sso
	}
	if !IsNil(o.CrossOriginAuthentication) {
		toSerialize["cross_origin_authentication"] = o.CrossOriginAuthentication
	}
	if o.CrossOriginLoc.IsSet() {
		toSerialize["cross_origin_loc"] = o.CrossOriginLoc.Get()
	}
	if !IsNil(o.SsoDisabled) {
		toSerialize["sso_disabled"] = o.SsoDisabled
	}
	if !IsNil(o.CustomLoginPageOn) {
		toSerialize["custom_login_page_on"] = o.CustomLoginPageOn
	}
	if o.TokenEndpointAuthMethod.IsSet() {
		toSerialize["token_endpoint_auth_method"] = o.TokenEndpointAuthMethod.Get()
	}
	if !IsNil(o.AppType) {
		toSerialize["app_type"] = o.AppType
	}
	if !IsNil(o.IsFirstParty) {
		toSerialize["is_first_party"] = o.IsFirstParty
	}
	if !IsNil(o.OidcConformant) {
		toSerialize["oidc_conformant"] = o.OidcConformant
	}
	if !IsNil(o.CustomLoginPage) {
		toSerialize["custom_login_page"] = o.CustomLoginPage
	}
	if !IsNil(o.CustomLoginPagePreview) {
		toSerialize["custom_login_page_preview"] = o.CustomLoginPagePreview
	}
	if !IsNil(o.FormTemplate) {
		toSerialize["form_template"] = o.FormTemplate
	}
	if o.Addons.IsSet() {
		toSerialize["addons"] = o.Addons.Get()
	}
	if !IsNil(o.ClientMetadata) {
		toSerialize["client_metadata"] = o.ClientMetadata
	}
	if o.Mobile.IsSet() {
		toSerialize["mobile"] = o.Mobile.Get()
	}
	if !IsNil(o.InitiateLoginUri) {
		toSerialize["initiate_login_uri"] = o.InitiateLoginUri
	}
	if o.NativeSocialLogin.IsSet() {
		toSerialize["native_social_login"] = o.NativeSocialLogin.Get()
	}
	if o.RefreshToken.IsSet() {
		toSerialize["refresh_token"] = o.RefreshToken.Get()
	}
	if !IsNil(o.OrganizationUsage) {
		toSerialize["organization_usage"] = o.OrganizationUsage
	}
	if !IsNil(o.OrganizationRequireBehavior) {
		toSerialize["organization_require_behavior"] = o.OrganizationRequireBehavior
	}
	if o.ClientAuthenticationMethods.IsSet() {
		toSerialize["client_authentication_methods"] = o.ClientAuthenticationMethods.Get()
	}
	if !IsNil(o.RequirePushedAuthorizationRequests) {
		toSerialize["require_pushed_authorization_requests"] = o.RequirePushedAuthorizationRequests
	}
	if o.SignedRequestObject.IsSet() {
		toSerialize["signed_request_object"] = o.SignedRequestObject.Get()
	}
	if !IsNil(o.RequireProofOfPossession) {
		toSerialize["require_proof_of_possession"] = o.RequireProofOfPossession
	}
	if o.ComplianceLevel.IsSet() {
		toSerialize["compliance_level"] = o.ComplianceLevel.Get()
	}
	return toSerialize, nil
}

type NullableClientUpdate struct {
	value *ClientUpdate
	isSet bool
}

func (v NullableClientUpdate) Get() *ClientUpdate {
	return v.value
}

func (v *NullableClientUpdate) Set(val *ClientUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableClientUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableClientUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientUpdate(val *ClientUpdate) *NullableClientUpdate {
	return &NullableClientUpdate{value: val, isSet: true}
}

func (v NullableClientUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
