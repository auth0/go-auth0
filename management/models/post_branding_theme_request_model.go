/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// PostBrandingThemeRequest Branding theme
type PostBrandingThemeRequest struct {
	Borders PostBrandingThemeRequestBorders `json:"borders"`
	Colors  PostBrandingThemeRequestColors  `json:"colors"`
	// Display Name
	DisplayName    *string                                `json:"displayName,omitempty"`
	Fonts          PostBrandingThemeRequestFonts          `json:"fonts"`
	PageBackground PostBrandingThemeRequestPageBackground `json:"page_background"`
	Widget         PostBrandingThemeRequestWidget         `json:"widget"`
}

type _PostBrandingThemeRequest PostBrandingThemeRequest

// GetBorders returns the Borders field value
func (o *PostBrandingThemeRequest) GetBorders() PostBrandingThemeRequestBorders {
	if o == nil {
		var ret PostBrandingThemeRequestBorders
		return ret
	}

	return o.Borders
}

// GetBordersOk returns a tuple with the Borders field value
// and a boolean to check if the value has been set.
func (o *PostBrandingThemeRequest) GetBordersOk() (*PostBrandingThemeRequestBorders, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Borders, true
}

// SetBorders sets field value
func (o *PostBrandingThemeRequest) SetBorders(v PostBrandingThemeRequestBorders) {
	o.Borders = v
}

// GetColors returns the Colors field value
func (o *PostBrandingThemeRequest) GetColors() PostBrandingThemeRequestColors {
	if o == nil {
		var ret PostBrandingThemeRequestColors
		return ret
	}

	return o.Colors
}

// GetColorsOk returns a tuple with the Colors field value
// and a boolean to check if the value has been set.
func (o *PostBrandingThemeRequest) GetColorsOk() (*PostBrandingThemeRequestColors, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Colors, true
}

// SetColors sets field value
func (o *PostBrandingThemeRequest) SetColors(v PostBrandingThemeRequestColors) {
	o.Colors = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *PostBrandingThemeRequest) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostBrandingThemeRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *PostBrandingThemeRequest) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *PostBrandingThemeRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFonts returns the Fonts field value
func (o *PostBrandingThemeRequest) GetFonts() PostBrandingThemeRequestFonts {
	if o == nil {
		var ret PostBrandingThemeRequestFonts
		return ret
	}

	return o.Fonts
}

// GetFontsOk returns a tuple with the Fonts field value
// and a boolean to check if the value has been set.
func (o *PostBrandingThemeRequest) GetFontsOk() (*PostBrandingThemeRequestFonts, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fonts, true
}

// SetFonts sets field value
func (o *PostBrandingThemeRequest) SetFonts(v PostBrandingThemeRequestFonts) {
	o.Fonts = v
}

// GetPageBackground returns the PageBackground field value
func (o *PostBrandingThemeRequest) GetPageBackground() PostBrandingThemeRequestPageBackground {
	if o == nil {
		var ret PostBrandingThemeRequestPageBackground
		return ret
	}

	return o.PageBackground
}

// GetPageBackgroundOk returns a tuple with the PageBackground field value
// and a boolean to check if the value has been set.
func (o *PostBrandingThemeRequest) GetPageBackgroundOk() (*PostBrandingThemeRequestPageBackground, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageBackground, true
}

// SetPageBackground sets field value
func (o *PostBrandingThemeRequest) SetPageBackground(v PostBrandingThemeRequestPageBackground) {
	o.PageBackground = v
}

// GetWidget returns the Widget field value
func (o *PostBrandingThemeRequest) GetWidget() PostBrandingThemeRequestWidget {
	if o == nil {
		var ret PostBrandingThemeRequestWidget
		return ret
	}

	return o.Widget
}

// GetWidgetOk returns a tuple with the Widget field value
// and a boolean to check if the value has been set.
func (o *PostBrandingThemeRequest) GetWidgetOk() (*PostBrandingThemeRequestWidget, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Widget, true
}

// SetWidget sets field value
func (o *PostBrandingThemeRequest) SetWidget(v PostBrandingThemeRequestWidget) {
	o.Widget = v
}

func (o PostBrandingThemeRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostBrandingThemeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["borders"] = o.Borders
	toSerialize["colors"] = o.Colors
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	toSerialize["fonts"] = o.Fonts
	toSerialize["page_background"] = o.PageBackground
	toSerialize["widget"] = o.Widget
	return toSerialize, nil
}

func (o *PostBrandingThemeRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"borders",
		"colors",
		"fonts",
		"page_background",
		"widget",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostBrandingThemeRequest := _PostBrandingThemeRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varPostBrandingThemeRequest)

	if err != nil {
		return err
	}

	*o = PostBrandingThemeRequest(varPostBrandingThemeRequest)

	return err
}

type NullablePostBrandingThemeRequest struct {
	value *PostBrandingThemeRequest
	isSet bool
}

func (v NullablePostBrandingThemeRequest) Get() *PostBrandingThemeRequest {
	return v.value
}

func (v *NullablePostBrandingThemeRequest) Set(val *PostBrandingThemeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostBrandingThemeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostBrandingThemeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostBrandingThemeRequest(val *PostBrandingThemeRequest) *NullablePostBrandingThemeRequest {
	return &NullablePostBrandingThemeRequest{value: val, isSet: true}
}

func (v NullablePostBrandingThemeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostBrandingThemeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
