/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ConnectionCreateOptionsGatewayAuthentication Token-based authentication settings to be applied when connection is using an sms strategy.
type ConnectionCreateOptionsGatewayAuthentication struct {
	// The Authorization header type.
	Method string `json:"method"`
	// The subject to be added to the JWT payload.
	Subject *string `json:"subject,omitempty"`
	// The audience to be added to the JWT payload.
	Audience string `json:"audience"`
	// The secret to be used for signing tokens.
	Secret string `json:"secret"`
	// Set to true if the provided secret is base64 encoded.
	SecretBase64Encoded  *bool `json:"secret_base64_encoded,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ConnectionCreateOptionsGatewayAuthentication ConnectionCreateOptionsGatewayAuthentication

// GetMethod returns the Method field value
func (o *ConnectionCreateOptionsGatewayAuthentication) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *ConnectionCreateOptionsGatewayAuthentication) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *ConnectionCreateOptionsGatewayAuthentication) SetMethod(v string) {
	o.Method = v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *ConnectionCreateOptionsGatewayAuthentication) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionCreateOptionsGatewayAuthentication) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *ConnectionCreateOptionsGatewayAuthentication) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *ConnectionCreateOptionsGatewayAuthentication) SetSubject(v string) {
	o.Subject = &v
}

// GetAudience returns the Audience field value
func (o *ConnectionCreateOptionsGatewayAuthentication) GetAudience() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value
// and a boolean to check if the value has been set.
func (o *ConnectionCreateOptionsGatewayAuthentication) GetAudienceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Audience, true
}

// SetAudience sets field value
func (o *ConnectionCreateOptionsGatewayAuthentication) SetAudience(v string) {
	o.Audience = v
}

// GetSecret returns the Secret field value
func (o *ConnectionCreateOptionsGatewayAuthentication) GetSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *ConnectionCreateOptionsGatewayAuthentication) GetSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *ConnectionCreateOptionsGatewayAuthentication) SetSecret(v string) {
	o.Secret = v
}

// GetSecretBase64Encoded returns the SecretBase64Encoded field value if set, zero value otherwise.
func (o *ConnectionCreateOptionsGatewayAuthentication) GetSecretBase64Encoded() bool {
	if o == nil || IsNil(o.SecretBase64Encoded) {
		var ret bool
		return ret
	}
	return *o.SecretBase64Encoded
}

// GetSecretBase64EncodedOk returns a tuple with the SecretBase64Encoded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionCreateOptionsGatewayAuthentication) GetSecretBase64EncodedOk() (*bool, bool) {
	if o == nil || IsNil(o.SecretBase64Encoded) {
		return nil, false
	}
	return o.SecretBase64Encoded, true
}

// HasSecretBase64Encoded returns a boolean if a field has been set.
func (o *ConnectionCreateOptionsGatewayAuthentication) HasSecretBase64Encoded() bool {
	if o != nil && !IsNil(o.SecretBase64Encoded) {
		return true
	}

	return false
}

// SetSecretBase64Encoded gets a reference to the given bool and assigns it to the SecretBase64Encoded field.
func (o *ConnectionCreateOptionsGatewayAuthentication) SetSecretBase64Encoded(v bool) {
	o.SecretBase64Encoded = &v
}

func (o ConnectionCreateOptionsGatewayAuthentication) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionCreateOptionsGatewayAuthentication) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["method"] = o.Method
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	toSerialize["audience"] = o.Audience
	toSerialize["secret"] = o.Secret
	if !IsNil(o.SecretBase64Encoded) {
		toSerialize["secret_base64_encoded"] = o.SecretBase64Encoded
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ConnectionCreateOptionsGatewayAuthentication) UnmarshalJSON(data []byte) (err error) {
	varConnectionCreateOptionsGatewayAuthentication := _ConnectionCreateOptionsGatewayAuthentication{}

	err = json.Unmarshal(data, &varConnectionCreateOptionsGatewayAuthentication)

	if err != nil {
		return err
	}

	*o = ConnectionCreateOptionsGatewayAuthentication(varConnectionCreateOptionsGatewayAuthentication)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "method")
		delete(additionalProperties, "subject")
		delete(additionalProperties, "audience")
		delete(additionalProperties, "secret")
		delete(additionalProperties, "secret_base64_encoded")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConnectionCreateOptionsGatewayAuthentication struct {
	value *ConnectionCreateOptionsGatewayAuthentication
	isSet bool
}

func (v NullableConnectionCreateOptionsGatewayAuthentication) Get() *ConnectionCreateOptionsGatewayAuthentication {
	return v.value
}

func (v *NullableConnectionCreateOptionsGatewayAuthentication) Set(val *ConnectionCreateOptionsGatewayAuthentication) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionCreateOptionsGatewayAuthentication) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionCreateOptionsGatewayAuthentication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionCreateOptionsGatewayAuthentication(val *ConnectionCreateOptionsGatewayAuthentication) *NullableConnectionCreateOptionsGatewayAuthentication {
	return &NullableConnectionCreateOptionsGatewayAuthentication{value: val, isSet: true}
}

func (v NullableConnectionCreateOptionsGatewayAuthentication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionCreateOptionsGatewayAuthentication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
