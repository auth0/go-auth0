/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PutAuthenticationMethodsRequestInnerType the model 'PutAuthenticationMethodsRequestInnerType'
type PutAuthenticationMethodsRequestInnerType string

// List of put_authentication_methods_request_inner_type
const (
	PUTAUTHENTICATIONMETHODSREQUESTINNERTYPE_PHONE PutAuthenticationMethodsRequestInnerType = "phone"
	PUTAUTHENTICATIONMETHODSREQUESTINNERTYPE_EMAIL PutAuthenticationMethodsRequestInnerType = "email"
	PUTAUTHENTICATIONMETHODSREQUESTINNERTYPE_TOTP  PutAuthenticationMethodsRequestInnerType = "totp"
)

// All allowed values of PutAuthenticationMethodsRequestInnerType enum
var AllowedPutAuthenticationMethodsRequestInnerTypeEnumValues = []PutAuthenticationMethodsRequestInnerType{
	"phone",
	"email",
	"totp",
}

func (v *PutAuthenticationMethodsRequestInnerType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PutAuthenticationMethodsRequestInnerType(value)
	for _, existing := range AllowedPutAuthenticationMethodsRequestInnerTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PutAuthenticationMethodsRequestInnerType", value)
}

// NewPutAuthenticationMethodsRequestInnerTypeFromValue returns a pointer to a valid PutAuthenticationMethodsRequestInnerType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPutAuthenticationMethodsRequestInnerTypeFromValue(v string) (*PutAuthenticationMethodsRequestInnerType, error) {
	ev := PutAuthenticationMethodsRequestInnerType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PutAuthenticationMethodsRequestInnerType: valid values are %v", v, AllowedPutAuthenticationMethodsRequestInnerTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PutAuthenticationMethodsRequestInnerType) IsValid() bool {
	for _, existing := range AllowedPutAuthenticationMethodsRequestInnerTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to put_authentication_methods_request_inner_type value
func (v PutAuthenticationMethodsRequestInnerType) Ptr() *PutAuthenticationMethodsRequestInnerType {
	return &v
}

type NullablePutAuthenticationMethodsRequestInnerType struct {
	value *PutAuthenticationMethodsRequestInnerType
	isSet bool
}

func (v NullablePutAuthenticationMethodsRequestInnerType) Get() *PutAuthenticationMethodsRequestInnerType {
	return v.value
}

func (v *NullablePutAuthenticationMethodsRequestInnerType) Set(val *PutAuthenticationMethodsRequestInnerType) {
	v.value = val
	v.isSet = true
}

func (v NullablePutAuthenticationMethodsRequestInnerType) IsSet() bool {
	return v.isSet
}

func (v *NullablePutAuthenticationMethodsRequestInnerType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutAuthenticationMethodsRequestInnerType(val *PutAuthenticationMethodsRequestInnerType) *NullablePutAuthenticationMethodsRequestInnerType {
	return &NullablePutAuthenticationMethodsRequestInnerType{value: val, isSet: true}
}

func (v NullablePutAuthenticationMethodsRequestInnerType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutAuthenticationMethodsRequestInnerType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
