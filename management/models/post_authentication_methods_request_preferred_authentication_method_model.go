/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PostAuthenticationMethodsRequestPreferredAuthenticationMethod Preferred phone authentication method.
type PostAuthenticationMethodsRequestPreferredAuthenticationMethod string

// List of post_authentication_methods_request_preferred_authentication_method
const (
	POSTAUTHENTICATIONMETHODSREQUESTPREFERREDAUTHENTICATIONMETHOD_VOICE PostAuthenticationMethodsRequestPreferredAuthenticationMethod = "voice"
	POSTAUTHENTICATIONMETHODSREQUESTPREFERREDAUTHENTICATIONMETHOD_SMS   PostAuthenticationMethodsRequestPreferredAuthenticationMethod = "sms"
)

// All allowed values of PostAuthenticationMethodsRequestPreferredAuthenticationMethod enum
var AllowedPostAuthenticationMethodsRequestPreferredAuthenticationMethodEnumValues = []PostAuthenticationMethodsRequestPreferredAuthenticationMethod{
	"voice",
	"sms",
}

func (v *PostAuthenticationMethodsRequestPreferredAuthenticationMethod) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PostAuthenticationMethodsRequestPreferredAuthenticationMethod(value)
	for _, existing := range AllowedPostAuthenticationMethodsRequestPreferredAuthenticationMethodEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PostAuthenticationMethodsRequestPreferredAuthenticationMethod", value)
}

// NewPostAuthenticationMethodsRequestPreferredAuthenticationMethodFromValue returns a pointer to a valid PostAuthenticationMethodsRequestPreferredAuthenticationMethod
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPostAuthenticationMethodsRequestPreferredAuthenticationMethodFromValue(v string) (*PostAuthenticationMethodsRequestPreferredAuthenticationMethod, error) {
	ev := PostAuthenticationMethodsRequestPreferredAuthenticationMethod(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PostAuthenticationMethodsRequestPreferredAuthenticationMethod: valid values are %v", v, AllowedPostAuthenticationMethodsRequestPreferredAuthenticationMethodEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PostAuthenticationMethodsRequestPreferredAuthenticationMethod) IsValid() bool {
	for _, existing := range AllowedPostAuthenticationMethodsRequestPreferredAuthenticationMethodEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to post_authentication_methods_request_preferred_authentication_method value
func (v PostAuthenticationMethodsRequestPreferredAuthenticationMethod) Ptr() *PostAuthenticationMethodsRequestPreferredAuthenticationMethod {
	return &v
}

type NullablePostAuthenticationMethodsRequestPreferredAuthenticationMethod struct {
	value *PostAuthenticationMethodsRequestPreferredAuthenticationMethod
	isSet bool
}

func (v NullablePostAuthenticationMethodsRequestPreferredAuthenticationMethod) Get() *PostAuthenticationMethodsRequestPreferredAuthenticationMethod {
	return v.value
}

func (v *NullablePostAuthenticationMethodsRequestPreferredAuthenticationMethod) Set(val *PostAuthenticationMethodsRequestPreferredAuthenticationMethod) {
	v.value = val
	v.isSet = true
}

func (v NullablePostAuthenticationMethodsRequestPreferredAuthenticationMethod) IsSet() bool {
	return v.isSet
}

func (v *NullablePostAuthenticationMethodsRequestPreferredAuthenticationMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostAuthenticationMethodsRequestPreferredAuthenticationMethod(val *PostAuthenticationMethodsRequestPreferredAuthenticationMethod) *NullablePostAuthenticationMethodsRequestPreferredAuthenticationMethod {
	return &NullablePostAuthenticationMethodsRequestPreferredAuthenticationMethod{value: val, isSet: true}
}

func (v NullablePostAuthenticationMethodsRequestPreferredAuthenticationMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostAuthenticationMethodsRequestPreferredAuthenticationMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
