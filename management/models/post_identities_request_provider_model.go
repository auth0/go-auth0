/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PostIdentitiesRequestProvider Identity provider of the secondary user account being linked.
type PostIdentitiesRequestProvider string

// List of post_identities_request_provider
const (
	POSTIDENTITIESREQUESTPROVIDER_AD                   PostIdentitiesRequestProvider = "ad"
	POSTIDENTITIESREQUESTPROVIDER_ADFS                 PostIdentitiesRequestProvider = "adfs"
	POSTIDENTITIESREQUESTPROVIDER_AMAZON               PostIdentitiesRequestProvider = "amazon"
	POSTIDENTITIESREQUESTPROVIDER_APPLE                PostIdentitiesRequestProvider = "apple"
	POSTIDENTITIESREQUESTPROVIDER_DROPBOX              PostIdentitiesRequestProvider = "dropbox"
	POSTIDENTITIESREQUESTPROVIDER_BITBUCKET            PostIdentitiesRequestProvider = "bitbucket"
	POSTIDENTITIESREQUESTPROVIDER_AOL                  PostIdentitiesRequestProvider = "aol"
	POSTIDENTITIESREQUESTPROVIDER_AUTH0_OIDC           PostIdentitiesRequestProvider = "auth0-oidc"
	POSTIDENTITIESREQUESTPROVIDER_AUTH0                PostIdentitiesRequestProvider = "auth0"
	POSTIDENTITIESREQUESTPROVIDER_BAIDU                PostIdentitiesRequestProvider = "baidu"
	POSTIDENTITIESREQUESTPROVIDER_BITLY                PostIdentitiesRequestProvider = "bitly"
	POSTIDENTITIESREQUESTPROVIDER_BOX                  PostIdentitiesRequestProvider = "box"
	POSTIDENTITIESREQUESTPROVIDER_CUSTOM               PostIdentitiesRequestProvider = "custom"
	POSTIDENTITIESREQUESTPROVIDER_DACCOUNT             PostIdentitiesRequestProvider = "daccount"
	POSTIDENTITIESREQUESTPROVIDER_DWOLLA               PostIdentitiesRequestProvider = "dwolla"
	POSTIDENTITIESREQUESTPROVIDER_EMAIL                PostIdentitiesRequestProvider = "email"
	POSTIDENTITIESREQUESTPROVIDER_EVERNOTE_SANDBOX     PostIdentitiesRequestProvider = "evernote-sandbox"
	POSTIDENTITIESREQUESTPROVIDER_EVERNOTE             PostIdentitiesRequestProvider = "evernote"
	POSTIDENTITIESREQUESTPROVIDER_EXACT                PostIdentitiesRequestProvider = "exact"
	POSTIDENTITIESREQUESTPROVIDER_FACEBOOK             PostIdentitiesRequestProvider = "facebook"
	POSTIDENTITIESREQUESTPROVIDER_FITBIT               PostIdentitiesRequestProvider = "fitbit"
	POSTIDENTITIESREQUESTPROVIDER_FLICKR               PostIdentitiesRequestProvider = "flickr"
	POSTIDENTITIESREQUESTPROVIDER_GITHUB               PostIdentitiesRequestProvider = "github"
	POSTIDENTITIESREQUESTPROVIDER_GOOGLE_APPS          PostIdentitiesRequestProvider = "google-apps"
	POSTIDENTITIESREQUESTPROVIDER_GOOGLE_OAUTH2        PostIdentitiesRequestProvider = "google-oauth2"
	POSTIDENTITIESREQUESTPROVIDER_INSTAGRAM            PostIdentitiesRequestProvider = "instagram"
	POSTIDENTITIESREQUESTPROVIDER_IP                   PostIdentitiesRequestProvider = "ip"
	POSTIDENTITIESREQUESTPROVIDER_LINE                 PostIdentitiesRequestProvider = "line"
	POSTIDENTITIESREQUESTPROVIDER_LINKEDIN             PostIdentitiesRequestProvider = "linkedin"
	POSTIDENTITIESREQUESTPROVIDER_MIICARD              PostIdentitiesRequestProvider = "miicard"
	POSTIDENTITIESREQUESTPROVIDER_OAUTH1               PostIdentitiesRequestProvider = "oauth1"
	POSTIDENTITIESREQUESTPROVIDER_OAUTH2               PostIdentitiesRequestProvider = "oauth2"
	POSTIDENTITIESREQUESTPROVIDER_OFFICE365            PostIdentitiesRequestProvider = "office365"
	POSTIDENTITIESREQUESTPROVIDER_OIDC                 PostIdentitiesRequestProvider = "oidc"
	POSTIDENTITIESREQUESTPROVIDER_OKTA                 PostIdentitiesRequestProvider = "okta"
	POSTIDENTITIESREQUESTPROVIDER_PAYPAL               PostIdentitiesRequestProvider = "paypal"
	POSTIDENTITIESREQUESTPROVIDER_PAYPAL_SANDBOX       PostIdentitiesRequestProvider = "paypal-sandbox"
	POSTIDENTITIESREQUESTPROVIDER_PINGFEDERATE         PostIdentitiesRequestProvider = "pingfederate"
	POSTIDENTITIESREQUESTPROVIDER_PLANNINGCENTER       PostIdentitiesRequestProvider = "planningcenter"
	POSTIDENTITIESREQUESTPROVIDER_RENREN               PostIdentitiesRequestProvider = "renren"
	POSTIDENTITIESREQUESTPROVIDER_SALESFORCE_COMMUNITY PostIdentitiesRequestProvider = "salesforce-community"
	POSTIDENTITIESREQUESTPROVIDER_SALESFORCE_SANDBOX   PostIdentitiesRequestProvider = "salesforce-sandbox"
	POSTIDENTITIESREQUESTPROVIDER_SALESFORCE           PostIdentitiesRequestProvider = "salesforce"
	POSTIDENTITIESREQUESTPROVIDER_SAMLP                PostIdentitiesRequestProvider = "samlp"
	POSTIDENTITIESREQUESTPROVIDER_SHAREPOINT           PostIdentitiesRequestProvider = "sharepoint"
	POSTIDENTITIESREQUESTPROVIDER_SHOPIFY              PostIdentitiesRequestProvider = "shopify"
	POSTIDENTITIESREQUESTPROVIDER_SMS                  PostIdentitiesRequestProvider = "sms"
	POSTIDENTITIESREQUESTPROVIDER_SOUNDCLOUD           PostIdentitiesRequestProvider = "soundcloud"
	POSTIDENTITIESREQUESTPROVIDER_THECITY_SANDBOX      PostIdentitiesRequestProvider = "thecity-sandbox"
	POSTIDENTITIESREQUESTPROVIDER_THECITY              PostIdentitiesRequestProvider = "thecity"
	POSTIDENTITIESREQUESTPROVIDER_THIRTYSEVENSIGNALS   PostIdentitiesRequestProvider = "thirtysevensignals"
	POSTIDENTITIESREQUESTPROVIDER_TWITTER              PostIdentitiesRequestProvider = "twitter"
	POSTIDENTITIESREQUESTPROVIDER_UNTAPPD              PostIdentitiesRequestProvider = "untappd"
	POSTIDENTITIESREQUESTPROVIDER_VKONTAKTE            PostIdentitiesRequestProvider = "vkontakte"
	POSTIDENTITIESREQUESTPROVIDER_WAAD                 PostIdentitiesRequestProvider = "waad"
	POSTIDENTITIESREQUESTPROVIDER_WEIBO                PostIdentitiesRequestProvider = "weibo"
	POSTIDENTITIESREQUESTPROVIDER_WINDOWSLIVE          PostIdentitiesRequestProvider = "windowslive"
	POSTIDENTITIESREQUESTPROVIDER_WORDPRESS            PostIdentitiesRequestProvider = "wordpress"
	POSTIDENTITIESREQUESTPROVIDER_YAHOO                PostIdentitiesRequestProvider = "yahoo"
	POSTIDENTITIESREQUESTPROVIDER_YAMMER               PostIdentitiesRequestProvider = "yammer"
	POSTIDENTITIESREQUESTPROVIDER_YANDEX               PostIdentitiesRequestProvider = "yandex"
)

// All allowed values of PostIdentitiesRequestProvider enum
var AllowedPostIdentitiesRequestProviderEnumValues = []PostIdentitiesRequestProvider{
	"ad",
	"adfs",
	"amazon",
	"apple",
	"dropbox",
	"bitbucket",
	"aol",
	"auth0-oidc",
	"auth0",
	"baidu",
	"bitly",
	"box",
	"custom",
	"daccount",
	"dwolla",
	"email",
	"evernote-sandbox",
	"evernote",
	"exact",
	"facebook",
	"fitbit",
	"flickr",
	"github",
	"google-apps",
	"google-oauth2",
	"instagram",
	"ip",
	"line",
	"linkedin",
	"miicard",
	"oauth1",
	"oauth2",
	"office365",
	"oidc",
	"okta",
	"paypal",
	"paypal-sandbox",
	"pingfederate",
	"planningcenter",
	"renren",
	"salesforce-community",
	"salesforce-sandbox",
	"salesforce",
	"samlp",
	"sharepoint",
	"shopify",
	"sms",
	"soundcloud",
	"thecity-sandbox",
	"thecity",
	"thirtysevensignals",
	"twitter",
	"untappd",
	"vkontakte",
	"waad",
	"weibo",
	"windowslive",
	"wordpress",
	"yahoo",
	"yammer",
	"yandex",
}

func (v *PostIdentitiesRequestProvider) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PostIdentitiesRequestProvider(value)
	for _, existing := range AllowedPostIdentitiesRequestProviderEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PostIdentitiesRequestProvider", value)
}

// NewPostIdentitiesRequestProviderFromValue returns a pointer to a valid PostIdentitiesRequestProvider
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPostIdentitiesRequestProviderFromValue(v string) (*PostIdentitiesRequestProvider, error) {
	ev := PostIdentitiesRequestProvider(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PostIdentitiesRequestProvider: valid values are %v", v, AllowedPostIdentitiesRequestProviderEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PostIdentitiesRequestProvider) IsValid() bool {
	for _, existing := range AllowedPostIdentitiesRequestProviderEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to post_identities_request_provider value
func (v PostIdentitiesRequestProvider) Ptr() *PostIdentitiesRequestProvider {
	return &v
}

type NullablePostIdentitiesRequestProvider struct {
	value *PostIdentitiesRequestProvider
	isSet bool
}

func (v NullablePostIdentitiesRequestProvider) Get() *PostIdentitiesRequestProvider {
	return v.value
}

func (v *NullablePostIdentitiesRequestProvider) Set(val *PostIdentitiesRequestProvider) {
	v.value = val
	v.isSet = true
}

func (v NullablePostIdentitiesRequestProvider) IsSet() bool {
	return v.isSet
}

func (v *NullablePostIdentitiesRequestProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostIdentitiesRequestProvider(val *PostIdentitiesRequestProvider) *NullablePostIdentitiesRequestProvider {
	return &NullablePostIdentitiesRequestProvider{value: val, isSet: true}
}

func (v NullablePostIdentitiesRequestProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostIdentitiesRequestProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
