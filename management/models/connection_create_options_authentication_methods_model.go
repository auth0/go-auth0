/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ConnectionCreateOptionsAuthenticationMethods Options for enabling authentication methods.
type ConnectionCreateOptionsAuthenticationMethods struct {
	Password *ConnectionCreateOptionsAuthenticationMethodsPassword `json:"password,omitempty"`
	Passkey  *ConnectionCreateOptionsAuthenticationMethodsPasskey  `json:"passkey,omitempty"`
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ConnectionCreateOptionsAuthenticationMethods) GetPassword() ConnectionCreateOptionsAuthenticationMethodsPassword {
	if o == nil || IsNil(o.Password) {
		var ret ConnectionCreateOptionsAuthenticationMethodsPassword
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionCreateOptionsAuthenticationMethods) GetPasswordOk() (*ConnectionCreateOptionsAuthenticationMethodsPassword, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ConnectionCreateOptionsAuthenticationMethods) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given ConnectionCreateOptionsAuthenticationMethodsPassword and assigns it to the Password field.
func (o *ConnectionCreateOptionsAuthenticationMethods) SetPassword(v ConnectionCreateOptionsAuthenticationMethodsPassword) {
	o.Password = &v
}

// GetPasskey returns the Passkey field value if set, zero value otherwise.
func (o *ConnectionCreateOptionsAuthenticationMethods) GetPasskey() ConnectionCreateOptionsAuthenticationMethodsPasskey {
	if o == nil || IsNil(o.Passkey) {
		var ret ConnectionCreateOptionsAuthenticationMethodsPasskey
		return ret
	}
	return *o.Passkey
}

// GetPasskeyOk returns a tuple with the Passkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionCreateOptionsAuthenticationMethods) GetPasskeyOk() (*ConnectionCreateOptionsAuthenticationMethodsPasskey, bool) {
	if o == nil || IsNil(o.Passkey) {
		return nil, false
	}
	return o.Passkey, true
}

// HasPasskey returns a boolean if a field has been set.
func (o *ConnectionCreateOptionsAuthenticationMethods) HasPasskey() bool {
	if o != nil && !IsNil(o.Passkey) {
		return true
	}

	return false
}

// SetPasskey gets a reference to the given ConnectionCreateOptionsAuthenticationMethodsPasskey and assigns it to the Passkey field.
func (o *ConnectionCreateOptionsAuthenticationMethods) SetPasskey(v ConnectionCreateOptionsAuthenticationMethodsPasskey) {
	o.Passkey = &v
}

func (o ConnectionCreateOptionsAuthenticationMethods) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionCreateOptionsAuthenticationMethods) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Passkey) {
		toSerialize["passkey"] = o.Passkey
	}
	return toSerialize, nil
}

type NullableConnectionCreateOptionsAuthenticationMethods struct {
	value *ConnectionCreateOptionsAuthenticationMethods
	isSet bool
}

func (v NullableConnectionCreateOptionsAuthenticationMethods) Get() *ConnectionCreateOptionsAuthenticationMethods {
	return v.value
}

func (v *NullableConnectionCreateOptionsAuthenticationMethods) Set(val *ConnectionCreateOptionsAuthenticationMethods) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionCreateOptionsAuthenticationMethods) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionCreateOptionsAuthenticationMethods) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionCreateOptionsAuthenticationMethods(val *ConnectionCreateOptionsAuthenticationMethods) *NullableConnectionCreateOptionsAuthenticationMethods {
	return &NullableConnectionCreateOptionsAuthenticationMethods{value: val, isSet: true}
}

func (v NullableConnectionCreateOptionsAuthenticationMethods) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionCreateOptionsAuthenticationMethods) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
