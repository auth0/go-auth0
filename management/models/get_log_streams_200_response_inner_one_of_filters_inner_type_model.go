/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// GetLogStreams200ResponseInnerOneOfFiltersInnerType Filter type. Currently `category` is the only valid type.
type GetLogStreams200ResponseInnerOneOfFiltersInnerType string

// List of get_log_streams_200_response_inner_oneOf_filters_inner_type
const (
	GETLOGSTREAMS200RESPONSEINNERONEOFFILTERSINNERTYPE_CATEGORY GetLogStreams200ResponseInnerOneOfFiltersInnerType = "category"
)

// All allowed values of GetLogStreams200ResponseInnerOneOfFiltersInnerType enum
var AllowedGetLogStreams200ResponseInnerOneOfFiltersInnerTypeEnumValues = []GetLogStreams200ResponseInnerOneOfFiltersInnerType{
	"category",
}

func (v *GetLogStreams200ResponseInnerOneOfFiltersInnerType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GetLogStreams200ResponseInnerOneOfFiltersInnerType(value)
	for _, existing := range AllowedGetLogStreams200ResponseInnerOneOfFiltersInnerTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GetLogStreams200ResponseInnerOneOfFiltersInnerType", value)
}

// NewGetLogStreams200ResponseInnerOneOfFiltersInnerTypeFromValue returns a pointer to a valid GetLogStreams200ResponseInnerOneOfFiltersInnerType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGetLogStreams200ResponseInnerOneOfFiltersInnerTypeFromValue(v string) (*GetLogStreams200ResponseInnerOneOfFiltersInnerType, error) {
	ev := GetLogStreams200ResponseInnerOneOfFiltersInnerType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GetLogStreams200ResponseInnerOneOfFiltersInnerType: valid values are %v", v, AllowedGetLogStreams200ResponseInnerOneOfFiltersInnerTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GetLogStreams200ResponseInnerOneOfFiltersInnerType) IsValid() bool {
	for _, existing := range AllowedGetLogStreams200ResponseInnerOneOfFiltersInnerTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to get_log_streams_200_response_inner_oneOf_filters_inner_type value
func (v GetLogStreams200ResponseInnerOneOfFiltersInnerType) Ptr() *GetLogStreams200ResponseInnerOneOfFiltersInnerType {
	return &v
}

type NullableGetLogStreams200ResponseInnerOneOfFiltersInnerType struct {
	value *GetLogStreams200ResponseInnerOneOfFiltersInnerType
	isSet bool
}

func (v NullableGetLogStreams200ResponseInnerOneOfFiltersInnerType) Get() *GetLogStreams200ResponseInnerOneOfFiltersInnerType {
	return v.value
}

func (v *NullableGetLogStreams200ResponseInnerOneOfFiltersInnerType) Set(val *GetLogStreams200ResponseInnerOneOfFiltersInnerType) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLogStreams200ResponseInnerOneOfFiltersInnerType) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLogStreams200ResponseInnerOneOfFiltersInnerType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLogStreams200ResponseInnerOneOfFiltersInnerType(val *GetLogStreams200ResponseInnerOneOfFiltersInnerType) *NullableGetLogStreams200ResponseInnerOneOfFiltersInnerType {
	return &NullableGetLogStreams200ResponseInnerOneOfFiltersInnerType{value: val, isSet: true}
}

func (v NullableGetLogStreams200ResponseInnerOneOfFiltersInnerType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLogStreams200ResponseInnerOneOfFiltersInnerType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
