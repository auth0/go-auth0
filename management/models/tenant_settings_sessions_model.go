/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
)

// TenantSettingsSessions Sessions related settings for tenant
type TenantSettingsSessions struct {
	// Whether to bypass prompting logic (false) when performing OIDC Logout
	OidcLogoutPromptEnabled bool `json:"oidc_logout_prompt_enabled"`
}

type _TenantSettingsSessions TenantSettingsSessions

// GetOidcLogoutPromptEnabled returns the OidcLogoutPromptEnabled field value
func (o *TenantSettingsSessions) GetOidcLogoutPromptEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.OidcLogoutPromptEnabled
}

// GetOidcLogoutPromptEnabledOk returns a tuple with the OidcLogoutPromptEnabled field value
// and a boolean to check if the value has been set.
func (o *TenantSettingsSessions) GetOidcLogoutPromptEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OidcLogoutPromptEnabled, true
}

// SetOidcLogoutPromptEnabled sets field value
func (o *TenantSettingsSessions) SetOidcLogoutPromptEnabled(v bool) {
	o.OidcLogoutPromptEnabled = v
}

func (o TenantSettingsSessions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantSettingsSessions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["oidc_logout_prompt_enabled"] = o.OidcLogoutPromptEnabled
	return toSerialize, nil
}

func (o *TenantSettingsSessions) UnmarshalJSON(data []byte) (err error) {
	varTenantSettingsSessions := _TenantSettingsSessions{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTenantSettingsSessions)

	if err != nil {
		return err
	}

	*o = TenantSettingsSessions(varTenantSettingsSessions)

	return err
}

type NullableTenantSettingsSessions struct {
	value *TenantSettingsSessions
	isSet bool
}

func (v NullableTenantSettingsSessions) Get() *TenantSettingsSessions {
	return v.value
}

func (v *NullableTenantSettingsSessions) Set(val *TenantSettingsSessions) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantSettingsSessions) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantSettingsSessions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantSettingsSessions(val *TenantSettingsSessions) *NullableTenantSettingsSessions {
	return &NullableTenantSettingsSessions{value: val, isSet: true}
}

func (v NullableTenantSettingsSessions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantSettingsSessions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
