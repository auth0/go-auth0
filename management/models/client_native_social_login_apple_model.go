/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
)

// ClientNativeSocialLoginApple Native Social Login support for the Apple connection
type ClientNativeSocialLoginApple struct {
	// Determine whether or not to allow signing in natively using an Apple authorization code
	Enabled bool `json:"enabled"`
}

type _ClientNativeSocialLoginApple ClientNativeSocialLoginApple

// GetEnabled returns the Enabled field value
func (o *ClientNativeSocialLoginApple) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ClientNativeSocialLoginApple) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ClientNativeSocialLoginApple) SetEnabled(v bool) {
	o.Enabled = v
}

func (o ClientNativeSocialLoginApple) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientNativeSocialLoginApple) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enabled"] = o.Enabled
	return toSerialize, nil
}

func (o *ClientNativeSocialLoginApple) UnmarshalJSON(data []byte) (err error) {
	varClientNativeSocialLoginApple := _ClientNativeSocialLoginApple{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClientNativeSocialLoginApple)

	if err != nil {
		return err
	}

	*o = ClientNativeSocialLoginApple(varClientNativeSocialLoginApple)

	return err
}

type NullableClientNativeSocialLoginApple struct {
	value *ClientNativeSocialLoginApple
	isSet bool
}

func (v NullableClientNativeSocialLoginApple) Get() *ClientNativeSocialLoginApple {
	return v.value
}

func (v *NullableClientNativeSocialLoginApple) Set(val *ClientNativeSocialLoginApple) {
	v.value = val
	v.isSet = true
}

func (v NullableClientNativeSocialLoginApple) IsSet() bool {
	return v.isSet
}

func (v *NullableClientNativeSocialLoginApple) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientNativeSocialLoginApple(val *ClientNativeSocialLoginApple) *NullableClientNativeSocialLoginApple {
	return &NullableClientNativeSocialLoginApple{value: val, isSet: true}
}

func (v NullableClientNativeSocialLoginApple) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientNativeSocialLoginApple) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
