/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// GetScimConfiguration200Response struct for GetScimConfiguration200Response
type GetScimConfiguration200Response struct {
	// The connection's identifier
	ConnectionId string `json:"connection_id"`
	// The connection's identifier
	ConnectionName string `json:"connection_name"`
	// The connection's strategy
	Strategy string `json:"strategy"`
	// The tenant's name
	TenantName string `json:"tenant_name"`
	// User ID attribute for generating unique user ids
	UserIdAttribute string `json:"user_id_attribute"`
	// The mapping between auth0 and SCIM
	Mapping []GetScimConfiguration200ResponseMappingInner `json:"mapping"`
	// The Date Time Scim Configuration was created
	CreatedAt string `json:"created_at"`
	// The Date Time Scim Configuration was last updated
	UpdatedOn string `json:"updated_on"`
}

type _GetScimConfiguration200Response GetScimConfiguration200Response

// GetConnectionId returns the ConnectionId field value
func (o *GetScimConfiguration200Response) GetConnectionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionId
}

// GetConnectionIdOk returns a tuple with the ConnectionId field value
// and a boolean to check if the value has been set.
func (o *GetScimConfiguration200Response) GetConnectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionId, true
}

// SetConnectionId sets field value
func (o *GetScimConfiguration200Response) SetConnectionId(v string) {
	o.ConnectionId = v
}

// GetConnectionName returns the ConnectionName field value
func (o *GetScimConfiguration200Response) GetConnectionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionName
}

// GetConnectionNameOk returns a tuple with the ConnectionName field value
// and a boolean to check if the value has been set.
func (o *GetScimConfiguration200Response) GetConnectionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionName, true
}

// SetConnectionName sets field value
func (o *GetScimConfiguration200Response) SetConnectionName(v string) {
	o.ConnectionName = v
}

// GetStrategy returns the Strategy field value
func (o *GetScimConfiguration200Response) GetStrategy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value
// and a boolean to check if the value has been set.
func (o *GetScimConfiguration200Response) GetStrategyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Strategy, true
}

// SetStrategy sets field value
func (o *GetScimConfiguration200Response) SetStrategy(v string) {
	o.Strategy = v
}

// GetTenantName returns the TenantName field value
func (o *GetScimConfiguration200Response) GetTenantName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantName
}

// GetTenantNameOk returns a tuple with the TenantName field value
// and a boolean to check if the value has been set.
func (o *GetScimConfiguration200Response) GetTenantNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantName, true
}

// SetTenantName sets field value
func (o *GetScimConfiguration200Response) SetTenantName(v string) {
	o.TenantName = v
}

// GetUserIdAttribute returns the UserIdAttribute field value
func (o *GetScimConfiguration200Response) GetUserIdAttribute() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserIdAttribute
}

// GetUserIdAttributeOk returns a tuple with the UserIdAttribute field value
// and a boolean to check if the value has been set.
func (o *GetScimConfiguration200Response) GetUserIdAttributeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserIdAttribute, true
}

// SetUserIdAttribute sets field value
func (o *GetScimConfiguration200Response) SetUserIdAttribute(v string) {
	o.UserIdAttribute = v
}

// GetMapping returns the Mapping field value
func (o *GetScimConfiguration200Response) GetMapping() []GetScimConfiguration200ResponseMappingInner {
	if o == nil {
		var ret []GetScimConfiguration200ResponseMappingInner
		return ret
	}

	return o.Mapping
}

// GetMappingOk returns a tuple with the Mapping field value
// and a boolean to check if the value has been set.
func (o *GetScimConfiguration200Response) GetMappingOk() ([]GetScimConfiguration200ResponseMappingInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mapping, true
}

// SetMapping sets field value
func (o *GetScimConfiguration200Response) SetMapping(v []GetScimConfiguration200ResponseMappingInner) {
	o.Mapping = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *GetScimConfiguration200Response) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *GetScimConfiguration200Response) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *GetScimConfiguration200Response) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedOn returns the UpdatedOn field value
func (o *GetScimConfiguration200Response) GetUpdatedOn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedOn
}

// GetUpdatedOnOk returns a tuple with the UpdatedOn field value
// and a boolean to check if the value has been set.
func (o *GetScimConfiguration200Response) GetUpdatedOnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedOn, true
}

// SetUpdatedOn sets field value
func (o *GetScimConfiguration200Response) SetUpdatedOn(v string) {
	o.UpdatedOn = v
}

func (o GetScimConfiguration200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetScimConfiguration200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["connection_id"] = o.ConnectionId
	toSerialize["connection_name"] = o.ConnectionName
	toSerialize["strategy"] = o.Strategy
	toSerialize["tenant_name"] = o.TenantName
	toSerialize["user_id_attribute"] = o.UserIdAttribute
	toSerialize["mapping"] = o.Mapping
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_on"] = o.UpdatedOn
	return toSerialize, nil
}

func (o *GetScimConfiguration200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"connection_id",
		"connection_name",
		"strategy",
		"tenant_name",
		"user_id_attribute",
		"mapping",
		"created_at",
		"updated_on",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetScimConfiguration200Response := _GetScimConfiguration200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetScimConfiguration200Response)

	if err != nil {
		return err
	}

	*o = GetScimConfiguration200Response(varGetScimConfiguration200Response)

	return err
}

type NullableGetScimConfiguration200Response struct {
	value *GetScimConfiguration200Response
	isSet bool
}

func (v NullableGetScimConfiguration200Response) Get() *GetScimConfiguration200Response {
	return v.value
}

func (v *NullableGetScimConfiguration200Response) Set(val *GetScimConfiguration200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetScimConfiguration200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetScimConfiguration200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetScimConfiguration200Response(val *GetScimConfiguration200Response) *NullableGetScimConfiguration200Response {
	return &NullableGetScimConfiguration200Response{value: val, isSet: true}
}

func (v NullableGetScimConfiguration200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetScimConfiguration200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
