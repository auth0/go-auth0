/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// PatchLogStreamsByIdRequestSinkOneOf3 struct for PatchLogStreamsByIdRequestSinkOneOf3
type PatchLogStreamsByIdRequestSinkOneOf3 struct {
	MixpanelRegion GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion `json:"mixpanelRegion"`
	// Mixpanel Project Id
	MixpanelProjectId string `json:"mixpanelProjectId"`
	// Mixpanel Service Account Username
	MixpanelServiceAccountUsername string `json:"mixpanelServiceAccountUsername"`
	// Mixpanel Service Account Password
	MixpanelServiceAccountPassword *string `json:"mixpanelServiceAccountPassword,omitempty"`
}

type _PatchLogStreamsByIdRequestSinkOneOf3 PatchLogStreamsByIdRequestSinkOneOf3

// GetMixpanelRegion returns the MixpanelRegion field value
func (o *PatchLogStreamsByIdRequestSinkOneOf3) GetMixpanelRegion() GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion {
	if o == nil {
		var ret GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion
		return ret
	}

	return o.MixpanelRegion
}

// GetMixpanelRegionOk returns a tuple with the MixpanelRegion field value
// and a boolean to check if the value has been set.
func (o *PatchLogStreamsByIdRequestSinkOneOf3) GetMixpanelRegionOk() (*GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MixpanelRegion, true
}

// SetMixpanelRegion sets field value
func (o *PatchLogStreamsByIdRequestSinkOneOf3) SetMixpanelRegion(v GetLogStreams200ResponseInnerOneOf7SinkMixpanelRegion) {
	o.MixpanelRegion = v
}

// GetMixpanelProjectId returns the MixpanelProjectId field value
func (o *PatchLogStreamsByIdRequestSinkOneOf3) GetMixpanelProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MixpanelProjectId
}

// GetMixpanelProjectIdOk returns a tuple with the MixpanelProjectId field value
// and a boolean to check if the value has been set.
func (o *PatchLogStreamsByIdRequestSinkOneOf3) GetMixpanelProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MixpanelProjectId, true
}

// SetMixpanelProjectId sets field value
func (o *PatchLogStreamsByIdRequestSinkOneOf3) SetMixpanelProjectId(v string) {
	o.MixpanelProjectId = v
}

// GetMixpanelServiceAccountUsername returns the MixpanelServiceAccountUsername field value
func (o *PatchLogStreamsByIdRequestSinkOneOf3) GetMixpanelServiceAccountUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MixpanelServiceAccountUsername
}

// GetMixpanelServiceAccountUsernameOk returns a tuple with the MixpanelServiceAccountUsername field value
// and a boolean to check if the value has been set.
func (o *PatchLogStreamsByIdRequestSinkOneOf3) GetMixpanelServiceAccountUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MixpanelServiceAccountUsername, true
}

// SetMixpanelServiceAccountUsername sets field value
func (o *PatchLogStreamsByIdRequestSinkOneOf3) SetMixpanelServiceAccountUsername(v string) {
	o.MixpanelServiceAccountUsername = v
}

// GetMixpanelServiceAccountPassword returns the MixpanelServiceAccountPassword field value if set, zero value otherwise.
func (o *PatchLogStreamsByIdRequestSinkOneOf3) GetMixpanelServiceAccountPassword() string {
	if o == nil || IsNil(o.MixpanelServiceAccountPassword) {
		var ret string
		return ret
	}
	return *o.MixpanelServiceAccountPassword
}

// GetMixpanelServiceAccountPasswordOk returns a tuple with the MixpanelServiceAccountPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchLogStreamsByIdRequestSinkOneOf3) GetMixpanelServiceAccountPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.MixpanelServiceAccountPassword) {
		return nil, false
	}
	return o.MixpanelServiceAccountPassword, true
}

// HasMixpanelServiceAccountPassword returns a boolean if a field has been set.
func (o *PatchLogStreamsByIdRequestSinkOneOf3) HasMixpanelServiceAccountPassword() bool {
	if o != nil && !IsNil(o.MixpanelServiceAccountPassword) {
		return true
	}

	return false
}

// SetMixpanelServiceAccountPassword gets a reference to the given string and assigns it to the MixpanelServiceAccountPassword field.
func (o *PatchLogStreamsByIdRequestSinkOneOf3) SetMixpanelServiceAccountPassword(v string) {
	o.MixpanelServiceAccountPassword = &v
}

func (o PatchLogStreamsByIdRequestSinkOneOf3) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchLogStreamsByIdRequestSinkOneOf3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mixpanelRegion"] = o.MixpanelRegion
	toSerialize["mixpanelProjectId"] = o.MixpanelProjectId
	toSerialize["mixpanelServiceAccountUsername"] = o.MixpanelServiceAccountUsername
	if !IsNil(o.MixpanelServiceAccountPassword) {
		toSerialize["mixpanelServiceAccountPassword"] = o.MixpanelServiceAccountPassword
	}
	return toSerialize, nil
}

func (o *PatchLogStreamsByIdRequestSinkOneOf3) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"mixpanelRegion",
		"mixpanelProjectId",
		"mixpanelServiceAccountUsername",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPatchLogStreamsByIdRequestSinkOneOf3 := _PatchLogStreamsByIdRequestSinkOneOf3{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varPatchLogStreamsByIdRequestSinkOneOf3)

	if err != nil {
		return err
	}

	*o = PatchLogStreamsByIdRequestSinkOneOf3(varPatchLogStreamsByIdRequestSinkOneOf3)

	return err
}

type NullablePatchLogStreamsByIdRequestSinkOneOf3 struct {
	value *PatchLogStreamsByIdRequestSinkOneOf3
	isSet bool
}

func (v NullablePatchLogStreamsByIdRequestSinkOneOf3) Get() *PatchLogStreamsByIdRequestSinkOneOf3 {
	return v.value
}

func (v *NullablePatchLogStreamsByIdRequestSinkOneOf3) Set(val *PatchLogStreamsByIdRequestSinkOneOf3) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchLogStreamsByIdRequestSinkOneOf3) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchLogStreamsByIdRequestSinkOneOf3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchLogStreamsByIdRequestSinkOneOf3(val *PatchLogStreamsByIdRequestSinkOneOf3) *NullablePatchLogStreamsByIdRequestSinkOneOf3 {
	return &NullablePatchLogStreamsByIdRequestSinkOneOf3{value: val, isSet: true}
}

func (v NullablePatchLogStreamsByIdRequestSinkOneOf3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchLogStreamsByIdRequestSinkOneOf3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
