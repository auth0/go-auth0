/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// ConnectionCreateOptionsAttributesUsernameValidation struct for ConnectionCreateOptionsAttributesUsernameValidation
type ConnectionCreateOptionsAttributesUsernameValidation struct {
	// Minimum allowed length
	MinLength *float32 `json:"min_length,omitempty"`
	// Maximum allowed length
	MaxLength    *float32                                                         `json:"max_length,omitempty"`
	AllowedTypes *ConnectionCreateOptionsAttributesUsernameValidationAllowedTypes `json:"allowed_types,omitempty"`
}

// GetMinLength returns the MinLength field value if set, zero value otherwise.
func (o *ConnectionCreateOptionsAttributesUsernameValidation) GetMinLength() float32 {
	if o == nil || IsNil(o.MinLength) {
		var ret float32
		return ret
	}
	return *o.MinLength
}

// GetMinLengthOk returns a tuple with the MinLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionCreateOptionsAttributesUsernameValidation) GetMinLengthOk() (*float32, bool) {
	if o == nil || IsNil(o.MinLength) {
		return nil, false
	}
	return o.MinLength, true
}

// HasMinLength returns a boolean if a field has been set.
func (o *ConnectionCreateOptionsAttributesUsernameValidation) HasMinLength() bool {
	if o != nil && !IsNil(o.MinLength) {
		return true
	}

	return false
}

// SetMinLength gets a reference to the given float32 and assigns it to the MinLength field.
func (o *ConnectionCreateOptionsAttributesUsernameValidation) SetMinLength(v float32) {
	o.MinLength = &v
}

// GetMaxLength returns the MaxLength field value if set, zero value otherwise.
func (o *ConnectionCreateOptionsAttributesUsernameValidation) GetMaxLength() float32 {
	if o == nil || IsNil(o.MaxLength) {
		var ret float32
		return ret
	}
	return *o.MaxLength
}

// GetMaxLengthOk returns a tuple with the MaxLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionCreateOptionsAttributesUsernameValidation) GetMaxLengthOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxLength) {
		return nil, false
	}
	return o.MaxLength, true
}

// HasMaxLength returns a boolean if a field has been set.
func (o *ConnectionCreateOptionsAttributesUsernameValidation) HasMaxLength() bool {
	if o != nil && !IsNil(o.MaxLength) {
		return true
	}

	return false
}

// SetMaxLength gets a reference to the given float32 and assigns it to the MaxLength field.
func (o *ConnectionCreateOptionsAttributesUsernameValidation) SetMaxLength(v float32) {
	o.MaxLength = &v
}

// GetAllowedTypes returns the AllowedTypes field value if set, zero value otherwise.
func (o *ConnectionCreateOptionsAttributesUsernameValidation) GetAllowedTypes() ConnectionCreateOptionsAttributesUsernameValidationAllowedTypes {
	if o == nil || IsNil(o.AllowedTypes) {
		var ret ConnectionCreateOptionsAttributesUsernameValidationAllowedTypes
		return ret
	}
	return *o.AllowedTypes
}

// GetAllowedTypesOk returns a tuple with the AllowedTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionCreateOptionsAttributesUsernameValidation) GetAllowedTypesOk() (*ConnectionCreateOptionsAttributesUsernameValidationAllowedTypes, bool) {
	if o == nil || IsNil(o.AllowedTypes) {
		return nil, false
	}
	return o.AllowedTypes, true
}

// HasAllowedTypes returns a boolean if a field has been set.
func (o *ConnectionCreateOptionsAttributesUsernameValidation) HasAllowedTypes() bool {
	if o != nil && !IsNil(o.AllowedTypes) {
		return true
	}

	return false
}

// SetAllowedTypes gets a reference to the given ConnectionCreateOptionsAttributesUsernameValidationAllowedTypes and assigns it to the AllowedTypes field.
func (o *ConnectionCreateOptionsAttributesUsernameValidation) SetAllowedTypes(v ConnectionCreateOptionsAttributesUsernameValidationAllowedTypes) {
	o.AllowedTypes = &v
}

func (o ConnectionCreateOptionsAttributesUsernameValidation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionCreateOptionsAttributesUsernameValidation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MinLength) {
		toSerialize["min_length"] = o.MinLength
	}
	if !IsNil(o.MaxLength) {
		toSerialize["max_length"] = o.MaxLength
	}
	if !IsNil(o.AllowedTypes) {
		toSerialize["allowed_types"] = o.AllowedTypes
	}
	return toSerialize, nil
}

type NullableConnectionCreateOptionsAttributesUsernameValidation struct {
	value *ConnectionCreateOptionsAttributesUsernameValidation
	isSet bool
}

func (v NullableConnectionCreateOptionsAttributesUsernameValidation) Get() *ConnectionCreateOptionsAttributesUsernameValidation {
	return v.value
}

func (v *NullableConnectionCreateOptionsAttributesUsernameValidation) Set(val *ConnectionCreateOptionsAttributesUsernameValidation) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionCreateOptionsAttributesUsernameValidation) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionCreateOptionsAttributesUsernameValidation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionCreateOptionsAttributesUsernameValidation(val *ConnectionCreateOptionsAttributesUsernameValidation) *NullableConnectionCreateOptionsAttributesUsernameValidation {
	return &NullableConnectionCreateOptionsAttributesUsernameValidation{value: val, isSet: true}
}

func (v NullableConnectionCreateOptionsAttributesUsernameValidation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionCreateOptionsAttributesUsernameValidation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
