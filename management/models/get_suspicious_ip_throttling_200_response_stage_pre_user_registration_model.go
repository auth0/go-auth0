/*
Auth0 Management API

Auth0 Management API v2.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
)

// GetSuspiciousIpThrottling200ResponseStagePreUserRegistration Configuration options that apply before every user registration attempt.
type GetSuspiciousIpThrottling200ResponseStagePreUserRegistration struct {
	// Total number of attempts allowed.
	MaxAttempts int32 `json:"max_attempts"`
	// Interval of time, given in milliseconds, at which new attempts are granted.
	Rate int32 `json:"rate"`
}

type _GetSuspiciousIpThrottling200ResponseStagePreUserRegistration GetSuspiciousIpThrottling200ResponseStagePreUserRegistration

// GetMaxAttempts returns the MaxAttempts field value
func (o *GetSuspiciousIpThrottling200ResponseStagePreUserRegistration) GetMaxAttempts() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxAttempts
}

// GetMaxAttemptsOk returns a tuple with the MaxAttempts field value
// and a boolean to check if the value has been set.
func (o *GetSuspiciousIpThrottling200ResponseStagePreUserRegistration) GetMaxAttemptsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxAttempts, true
}

// SetMaxAttempts sets field value
func (o *GetSuspiciousIpThrottling200ResponseStagePreUserRegistration) SetMaxAttempts(v int32) {
	o.MaxAttempts = v
}

// GetRate returns the Rate field value
func (o *GetSuspiciousIpThrottling200ResponseStagePreUserRegistration) GetRate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Rate
}

// GetRateOk returns a tuple with the Rate field value
// and a boolean to check if the value has been set.
func (o *GetSuspiciousIpThrottling200ResponseStagePreUserRegistration) GetRateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rate, true
}

// SetRate sets field value
func (o *GetSuspiciousIpThrottling200ResponseStagePreUserRegistration) SetRate(v int32) {
	o.Rate = v
}

func (o GetSuspiciousIpThrottling200ResponseStagePreUserRegistration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSuspiciousIpThrottling200ResponseStagePreUserRegistration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["max_attempts"] = o.MaxAttempts
	toSerialize["rate"] = o.Rate
	return toSerialize, nil
}

func (o *GetSuspiciousIpThrottling200ResponseStagePreUserRegistration) UnmarshalJSON(data []byte) (err error) {
	varGetSuspiciousIpThrottling200ResponseStagePreUserRegistration := _GetSuspiciousIpThrottling200ResponseStagePreUserRegistration{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetSuspiciousIpThrottling200ResponseStagePreUserRegistration)

	if err != nil {
		return err
	}

	*o = GetSuspiciousIpThrottling200ResponseStagePreUserRegistration(varGetSuspiciousIpThrottling200ResponseStagePreUserRegistration)

	return err
}

type NullableGetSuspiciousIpThrottling200ResponseStagePreUserRegistration struct {
	value *GetSuspiciousIpThrottling200ResponseStagePreUserRegistration
	isSet bool
}

func (v NullableGetSuspiciousIpThrottling200ResponseStagePreUserRegistration) Get() *GetSuspiciousIpThrottling200ResponseStagePreUserRegistration {
	return v.value
}

func (v *NullableGetSuspiciousIpThrottling200ResponseStagePreUserRegistration) Set(val *GetSuspiciousIpThrottling200ResponseStagePreUserRegistration) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSuspiciousIpThrottling200ResponseStagePreUserRegistration) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSuspiciousIpThrottling200ResponseStagePreUserRegistration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSuspiciousIpThrottling200ResponseStagePreUserRegistration(val *GetSuspiciousIpThrottling200ResponseStagePreUserRegistration) *NullableGetSuspiciousIpThrottling200ResponseStagePreUserRegistration {
	return &NullableGetSuspiciousIpThrottling200ResponseStagePreUserRegistration{value: val, isSet: true}
}

func (v NullableGetSuspiciousIpThrottling200ResponseStagePreUserRegistration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSuspiciousIpThrottling200ResponseStagePreUserRegistration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
