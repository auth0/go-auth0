openapi: 3.0.0
info:
  description: Auth0 Management API v2.
  termsOfService: https://auth0.com/web-terms/
  title: Auth0 Management API
  version: "2.0"
externalDocs:
  description: Auth0 Management API Documentation
  url: https://auth0.com/docs/api/management/v2/
servers:
- url: https://login0.local.dev.auth0.com/api/v2
security:
- bearerAuth: []
paths:
  /actions/actions:
    get:
      description: |
        Retrieve all actions.
      operationId: get_actions
      parameters:
      - description: "An actions extensibility point. Acceptable values: <code>post-login,\
          \ credentials-exchange, pre-user-registration, post-user-registration, post-change-password,\
          \ send-phone-message, password-reset-post-challenge</code>"
        explode: true
        in: query
        name: triggerId
        required: false
        schema:
          type: string
        style: form
      - description: The name of the action to retrieve.
        explode: true
        in: query
        name: actionName
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter to only retrieve actions that are deployed.
        explode: true
        in: query
        name: deployed
        required: false
        schema:
          type: boolean
        style: form
      - description: Use this field to request a specific page of the list results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: The maximum number of results to be returned by the server in
          single response. 20 by default
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: number
        style: form
      - description: "Optional. When true, return only installed actions. When false,\
          \ return only custom actions. Returns all actions by default."
        explode: true
        in: query
        name: installed
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_actions_200_response'
          description: The actions were retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope, expected: read:actions."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:actions
      summary: Get actions
      tags:
      - actions
      x-sdk-method-name: getAll
    post:
      description: |
        Create an action. Once an action is created, it must be deployed, and then
        bound to a trigger before it will be executed as part of a flow.
      operationId: post_action
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_action_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_action_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_actions_200_response_actions_inner'
          description: Action successfully created.
        "400":
          description: Invalid Request Body.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope, expected: create:actions."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:actions
      summary: Create an action
      tags:
      - actions
      x-sdk-method-name: create
  /actions/actions/{actionId}/versions:
    get:
      description: |
        Retrieve all of an action's versions. An action version is created whenever
        an action is deployed. An action version is immutable, once created.
      operationId: get_action_versions
      parameters:
      - description: The ID of the action.
        explode: false
        in: path
        name: actionId
        required: true
        schema:
          type: string
        style: simple
      - description: Use this field to request a specific page of the list results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: This field specify the maximum number of results to be returned
          by the server. 20 by default
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_action_versions_200_response'
          description: The action versions were retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope, expected: read:actions."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:actions
      summary: Get an action's versions
      tags:
      - actions
      x-sdk-method-name: getVersions
  /actions/actions/{actionId}/versions/{id}:
    get:
      description: |
        Retrieve a specific version of an action. An action version is created whenever
        an action is deployed. An action version is immutable, once created.
      operationId: get_action_version
      parameters:
      - description: The ID of the action.
        explode: false
        in: path
        name: actionId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the action version.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_action_versions_200_response_versions_inner'
          description: The action version was retrieved. See <strong>Response Class</strong>
            below for schema.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope, expected: read:actions."
        "404":
          description: The action version does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:actions
      summary: Get a specific version of an action
      tags:
      - actions
      x-sdk-method-name: getVersion
  /actions/actions/{actionId}/versions/{id}/deploy:
    post:
      description: |
        Performs the equivalent of a roll-back of an action to an earlier, specified version. Creates a new, deployed
        action version that is identical to the specified version. If this action is currently bound to a trigger, the
        system will begin executing the newly-created version immediately.
      operationId: post_deploy_draft_version
      parameters:
      - description: The ID of an action version.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of an action.
        explode: false
        in: path
        name: actionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_deploy_draft_version_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_deploy_draft_version_request'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_action_versions_200_response_versions_inner'
          description: Request to create action version was accepted.
        "400":
          description: Invalid Request Body.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope, expected: create:actions."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:actions
      summary: Roll back to a previous action version
      tags:
      - actions
      x-sdk-method-name: deployVersion
  /actions/actions/{id}:
    delete:
      description: |
        Deletes an action and all of its associated versions. An action must be unbound from all triggers
        before it can be deleted.
      operationId: delete_action
      parameters:
      - description: The ID of the action to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Force action deletion detaching bindings
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "204":
          description: Action successfully deleted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope, expected: delete:actions."
        "404":
          description: The action version does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:actions
      summary: Delete an action
      tags:
      - actions
      x-sdk-method-name: delete
    get:
      description: |
        Retrieve an action by its ID.
      operationId: get_action
      parameters:
      - description: The ID of the action to retrieve.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_actions_200_response_actions_inner'
          description: The action was retrieved. See <strong>Response Class</strong>
            below for schema.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope, expected: read:actions."
        "404":
          description: The action does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:actions
      summary: Get an action
      tags:
      - actions
      x-sdk-method-name: get
    patch:
      description: |
        Update an existing action. If this action is currently bound to a trigger, updating it will <strong>not</strong> affect
        any user flows until the action is deployed.
      operationId: patch_action
      parameters:
      - description: The id of the action to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patch_action_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/patch_action_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_actions_200_response_actions_inner'
          description: Action successfully updated.
        "400":
          description: Invalid Request Body.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope, expected: update:actions."
        "404":
          description: Action not found and cannot be updated.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:actions
      summary: Update an action
      tags:
      - actions
      x-sdk-method-name: update
  /actions/actions/{id}/deploy:
    post:
      description: |
        Deploy an action. Deploying an action will create a new immutable version of the action. If the action is
        currently bound to a trigger, then the system will begin executing the newly deployed version of the action immediately. Otherwise, the action will only be executed as a part of a flow once it is bound to that flow.
      operationId: post_deploy_action
      parameters:
      - description: The ID of an action.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_action_versions_200_response_versions_inner'
          description: Request to create action version was accepted.
        "400":
          description: Invalid Request Body.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope, expected: create:actions."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:actions
      summary: Deploy an action
      tags:
      - actions
      x-sdk-method-name: deploy
  /actions/actions/{id}/test:
    post:
      description: |
        Test an action. After updating an action, it can be tested prior to being deployed to ensure it behaves as expected.
      operationId: post_test_action
      parameters:
      - description: The id of the action to test.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_test_action_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_test_action_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_test_action_200_response'
          description: Test action version successfully created.
        "400":
          description: Invalid Request Body.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope, expected: create:actions."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:actions
      summary: Test an Action
      tags:
      - actions
      x-sdk-method-name: test
  /actions/executions/{id}:
    get:
      description: |
        Retrieve information about a specific execution of a trigger. Relevant execution IDs will be included in tenant logs
        generated as part of that authentication flow. Executions will only be stored for 10 days after their creation.
      operationId: get_execution
      parameters:
      - description: The ID of the execution to retrieve.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_execution_200_response'
          description: The execution was retrieved. See <strong>Response Class</strong>
            below for schema.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope, expected: read:actions."
        "404":
          description: The execution does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:actions
      summary: Get an execution
      tags:
      - actions
      x-sdk-method-name: getExecution
  /actions/triggers:
    get:
      description: "Retrieve the set of triggers currently available within actions.\
        \ A trigger is an extensibility point to which actions \ncan be bound.\n"
      operationId: get_triggers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_triggers_200_response'
          description: The triggers were retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope, expected: read:actions."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:actions
      summary: Get triggers
      tags:
      - actions
      x-sdk-method-name: getAllTriggers
  /actions/triggers/{triggerId}/bindings:
    get:
      description: |
        Retrieve the actions that are bound to a trigger. Once an action is created and deployed, it must be
        attached (i.e. bound) to a trigger so that it will be executed as part of a flow. The list of actions returned
        reflects the order in which they will be executed during the appropriate flow.
      operationId: get_bindings
      parameters:
      - description: "An actions extensibility point. Acceptable values: <code>post-login,\
          \ credentials-exchange, pre-user-registration, post-user-registration, post-change-password,\
          \ send-phone-message, password-reset-post-challenge</code>"
        explode: false
        in: path
        name: triggerId
        required: true
        schema:
          type: string
        style: simple
      - description: Use this field to request a specific page of the list results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: The maximum number of results to be returned in a single request.
          20 by default
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_bindings_200_response'
          description: The bindings were retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope, expected: read:actions."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:actions
      summary: Get trigger bindings
      tags:
      - actions
      x-sdk-method-name: getTriggerBindings
    patch:
      description: |
        Update the actions that are bound (i.e. attached) to a trigger. Once an action is created and deployed, it must be
        attached (i.e. bound) to a trigger so that it will be executed as part of a flow. The order in which the actions are
        provided will determine the order in which they are executed.
      operationId: patch_bindings
      parameters:
      - description: "An actions extensibility point. Acceptable values: <code>post-login,\
          \ credentials-exchange, pre-user-registration, post-user-registration, post-change-password,\
          \ send-phone-message, password-reset-post-challenge</code>"
        explode: false
        in: path
        name: triggerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patch_bindings_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/patch_bindings_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patch_bindings_200_response'
          description: The bindings were updated.
        "400":
          description: Invalid Request Body.
          x-description-1: Invalid request URI. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope, expected: update:actions."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:actions
      summary: Update trigger bindings
      tags:
      - actions
      x-sdk-method-name: updateTriggerBindings
  /anomaly/blocks/ips/{id}:
    delete:
      description: Unblock an IP address currently blocked by the <a href="https://auth0.com/docs/configure/attack-protection/suspicious-ip-throttling">Suspicious
        IP Throttling</a> due to multiple suspicious attempts.
      operationId: delete_ips_by_id
      parameters:
      - description: IP address to unblock.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: IP address specified successfully unblocked.
        "400":
          description: Connection does not exist.
          x-description-1: Invalid request URI. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: delete:anomaly_block."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:anomaly_blocks
      summary: Remove the blocked IP address
      tags:
      - anomaly
      x-sdk-method-name: deleteBlockedIp
    get:
      description: Check if a given IP address is blocked via the <a href="https://auth0.com/docs/configure/attack-protection/suspicious-ip-throttling">Suspicious
        IP Throttling</a> due to multiple suspicious attempts.
      operationId: get_ips_by_id
      parameters:
      - description: IP address to check.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: IP address specified is currently blocked.
        "400":
          description: Connection does not exist.
          x-description-1: Invalid request URI. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: get:anomaly_block."
        "404":
          description: IP address specified is not currently blocked.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:anomaly_blocks
      summary: Check if an IP address is blocked
      tags:
      - anomaly
      x-sdk-method-name: checkIfIpIsBlocked
  /attack-protection/breached-password-detection:
    get:
      description: Get breached password detection settings
      operationId: get_breached-password-detection
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_breached_password_detection_200_response'
          description: Breached password detection settings successfully retrieved.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: read:attack_protection."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:attack_protection
      summary: Get breached password detection settings
      tags:
      - attack-protection
      x-sdk-method-name: getBreachedPasswordDetectionConfig
    patch:
      description: Update breached password detection settings
      operationId: patch_breached-password-detection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patch_breached_password_detection_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/patch_breached_password_detection_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_breached_password_detection_200_response'
          description: Breached password detection settings successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: update:attack_protection."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:attack_protection
      summary: Update breached password detection settings
      tags:
      - attack-protection
      x-sdk-method-name: updateBreachedPasswordDetectionConfig
  /attack-protection/brute-force-protection:
    get:
      description: Get the brute force configuration
      operationId: get_brute-force-protection
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_brute_force_protection_200_response'
          description: Brute force config successfully retrieved.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: read:attack_protection."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:attack_protection
      summary: Get the brute force configuration
      tags:
      - attack-protection
      x-sdk-method-name: getBruteForceConfig
    patch:
      description: Update the brute force configuration
      operationId: patch_brute-force-protection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patch_brute_force_protection_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/patch_brute_force_protection_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_brute_force_protection_200_response'
          description: Brute force config successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: update:attack_protection."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:attack_protection
      summary: Update the brute force configuration
      tags:
      - attack-protection
      x-sdk-method-name: updateBruteForceConfig
  /attack-protection/suspicious-ip-throttling:
    get:
      description: Get the suspicious IP throttling configuration
      operationId: get_suspicious-ip-throttling
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_suspicious_ip_throttling_200_response'
          description: Suspicious IP throttling config successfully retrieved.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: read:attack_protection."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:attack_protection
      summary: Get the suspicious IP throttling configuration
      tags:
      - attack-protection
      x-sdk-method-name: getSuspiciousIpThrottlingConfig
    patch:
      description: Update the suspicious IP throttling configuration
      operationId: patch_suspicious-ip-throttling
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patch_suspicious_ip_throttling_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/patch_suspicious_ip_throttling_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_suspicious_ip_throttling_200_response'
          description: Suspicious IP throttling config successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: update:attack_protection."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:attack_protection
      summary: Update the suspicious IP throttling configuration
      tags:
      - attack-protection
      x-sdk-method-name: updateSuspiciousIpThrottlingConfig
  /blacklists/tokens:
    get:
      description: |
        Retrieve the `jti` and `aud` of all tokens that are blacklisted.

        Note: The <a href="https://auth0.com/docs/jwt">JWT specification</a> states that the `jti` field can be used to prevent replay attacks. Though Auth0 tokens do not include a `jti`, you can nevertheless blacklist a `jti` to prevent a token being used more than a predetermined number of times. This behavior is similar to implementing a nonce (where the token's signature can be thought of as the nonce). If a token gets stolen, it (or the tokens issued after it) should be blacklisted and let expire.
      operationId: get_tokens
      parameters:
      - description: Optional filter on the JWT's aud claim (the client_id to which
          the JWT was issued).
        explode: true
        in: query
        name: aud
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/token'
                type: array
          description: Tokens successfully retrieved.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: blacklist:tokens."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - blacklist:tokens
      summary: Get blacklisted tokens
      tags:
      - blacklists
      x-sdk-method-name: getAll
    post:
      description: |
        Add the token identified by the `jti` to a blacklist for the tenant.
      operationId: post_tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/token'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/token'
      responses:
        "204":
          description: Token successfully blacklisted.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: blacklist:tokens."
          x-description-1: You cannot blacklist tokens for the specified audience.
            You must own the client.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - blacklist:tokens
      summary: Blacklist a token
      tags:
      - blacklists
      x-sdk-method-name: add
  /branding:
    get:
      description: Retrieve branding settings.
      operationId: get_branding
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_branding_200_response'
          description: Branding settings successfully retrieved.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: The specified client cannot perform the requested operation.
          x-description-1: "Insufficient scope; expected any of: read:branding."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:branding
      summary: Get branding settings
      tags:
      - branding
      x-sdk-method-name: getSettings
    patch:
      description: Update branding settings.
      operationId: patch_branding
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patch_branding_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/patch_branding_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_branding_200_response'
          description: Branding settings successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:branding."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:branding
      summary: Update branding settings
      tags:
      - branding
      x-sdk-method-name: updateSettings
  /branding/templates/universal-login:
    delete:
      operationId: delete_universal-login
      responses:
        "204":
          description: Template successfully deleted.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: delete:branding."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:branding
      summary: Delete template for New Universal Login Experience
      tags:
      - branding
      x-sdk-method-name: deleteUniversalLoginTemplate
    get:
      operationId: get_universal-login
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_universal_login_200_response'
          description: Template successfully retrieved.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: read:branding"
        "404":
          description: Template does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:branding
      summary: Get template for New Universal Login Experience
      tags:
      - branding
      x-sdk-method-name: getUniversalLoginTemplate
    put:
      description: |
        Update the Universal Login branding template.

        <p>When <code>content-type</code> header is set to <code>application/json</code>, the expected body must be JSON:</p>
        <pre>
        {
          "template": "&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;{%- auth0:head -%}&lt;/head&gt;&lt;body&gt;{%- auth0:widget -%}&lt;/body&gt;&lt;/html&gt;"
        }
        </pre>

        <p>
          When <code>content-type</code> header is set to <code>text/html</code>, the expected body must be the HTML template:
        </p>
        <pre>
        &lt!DOCTYPE html&gt;
        &lt;code&gt;
          &lt;html&gt;
            &lt;head&gt;
             {%- auth0:head -%}
            &lt;/head&gt;
            &lt;body&gt;
              {%- auth0:widget -%}
            &lt;/body&gt;
          &lt;/html&gt;
        &lt;/code&gt;
        </pre>
      operationId: put_universal-login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_universal_login_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/put_universal_login_request'
      responses:
        "201":
          description: Template successfully created.
        "204":
          description: Template successfully updated.
        "400":
          description: "Payload content length greater than maximum allowed: 102400."
          x-description-1: Payload content missing required Liquid tags (auth0:head
            and auth0:widget).
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: update:branding."
        "409":
          description: Template update conflict.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:branding
      summary: Set template for New Universal Login Experience
      tags:
      - branding
      x-sdk-method-name: setUniversalLoginTemplate
  /branding/themes:
    post:
      description: Create branding theme.
      operationId: post_branding_theme
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_branding_theme_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_branding_theme_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_branding_theme_200_response'
          description: Branding settings successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
          x-description-1: Your account does not have universal login customizations
            enabled
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:branding."
        "409":
          description: "There was an error updating branding settings: The theme already\
            \ exists"
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:branding
      summary: Create branding theme
      tags:
      - branding
      x-sdk-method-name: createTheme
  /branding/themes/default:
    get:
      description: Retrieve default branding theme.
      operationId: get_default_branding_theme
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_branding_theme_200_response'
          description: Branding theme successfully retrieved.
        "400":
          description: Your account does not have universal login customizations enabled
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: The specified client cannot perform the requested operation.
          x-description-1: "Insufficient scope; expected any of: read:branding."
        "404":
          description: "There was an error retrieving branding settings: invalid theme\
            \ ID"
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:branding
      summary: Get default branding theme
      tags:
      - branding
      x-sdk-method-name: getDefaultTheme
  /branding/themes/{themeId}:
    delete:
      description: Delete branding theme.
      operationId: delete_branding_theme
      parameters:
      - description: The ID of the theme
        explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Branding theme successfully deleted.
        "400":
          description: Your account does not have universal login customizations enabled
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: The specified client cannot perform the requested operation.
          x-description-1: "Insufficient scope; expected any of: delete:branding."
        "404":
          description: "There was an error deleting branding settings: invalid theme\
            \ ID"
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:branding
      summary: Delete branding theme
      tags:
      - branding
      x-sdk-method-name: deleteTheme
    get:
      description: Retrieve branding theme.
      operationId: get_branding_theme
      parameters:
      - description: The ID of the theme
        explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_branding_theme_200_response'
          description: Branding theme successfully retrieved.
        "400":
          description: Your account does not have universal login customizations enabled
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: The specified client cannot perform the requested operation.
          x-description-1: "Insufficient scope; expected any of: read:branding."
        "404":
          description: "There was an error retrieving branding settings: invalid theme\
            \ ID"
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:branding
      summary: Get branding theme
      tags:
      - branding
      x-sdk-method-name: getTheme
    patch:
      description: Update branding theme.
      operationId: patch_branding_theme
      parameters:
      - description: The ID of the theme
        explode: false
        in: path
        name: themeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_branding_theme_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_branding_theme_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_branding_theme_200_response'
          description: Branding settings successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
          x-description-1: Your account does not have universal login customizations
            enabled
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:branding."
        "404":
          description: "There was an error updating branding settings: invalid theme\
            \ ID"
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:branding
      summary: Update branding theme
      tags:
      - branding
      x-sdk-method-name: updateTheme
  /client-grants:
    get:
      description: |
        Retrieve <a href="https://auth0.com/docs/api-auth/grant/client-credentials">client grants</a>.
      operationId: get_client-grants
      parameters:
      - description: Number of results per page. Paging is disabled if parameter not
          sent.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter on audience.
        explode: true
        in: query
        name: audience
        required: false
        schema:
          type: string
        style: form
      - description: Optional filter on client_id.
        explode: true
        in: query
        name: client_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_client_grants_200_response'
          description: Client grants successfully retrieved.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:client_grants."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:client_grants
      summary: Get client grants
      tags:
      - client-grants
      x-sdk-method-name: getAll
    post:
      description: Create a client grant.
      operationId: post_client-grants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clientGrantCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/clientGrantCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clientGrant'
          description: Client grant successfully updated.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clientGrant'
          description: Client grant successfully created.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: create:client_grants."
        "404":
          description: Resource server not found
          x-description-1: Client not found
        "409":
          description: A resource server with the same identifier already exists.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:client_grants
      summary: Create client grant
      tags:
      - client-grants
      x-sdk-method-name: create
  /client-grants/{id}:
    delete:
      description: Delete a client grant.
      operationId: delete_client-grants_by_id
      parameters:
      - description: ID of the client grant to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Client grant successfully deleted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: delete:client_grants."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:client_grants
      summary: Delete client grant
      tags:
      - client-grants
      x-sdk-method-name: delete
    patch:
      description: Update a client grant.
      operationId: patch_client-grants_by_id
      parameters:
      - description: ID of the client grant to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patch_client_grants_by_id_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/patch_client_grants_by_id_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clientGrant'
          description: Client grant successfully updated.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:client_grants."
        "404":
          description: The client grant does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:client_grants
      summary: Update client grant
      tags:
      - client-grants
      x-sdk-method-name: update
  /clients:
    get:
      description: |
        Retrieve clients (applications and SSO integrations) matching provided filters. A list of fields to include or exclude
        may also be specified. Note:
        <ul>
          <li>
            <code>client_id</code>, <code>app_type</code>, <code>name</code>, and <code>description</code> can be retrieved with
            any scope.
          </li>
          <li>
            <code>callbacks</code>, <code>oidc_backchannel_logout</code>, <code>allowed_origins</code>,
            <code>web_origins</code>, <code>tenant</code>, <code>global</code>, <code>config_route</code>,
            <code>callback_url_template</code>, <code>jwt_configuration</code>,
            <code>jwt_configuration.lifetime_in_seconds</code>, <code>jwt_configuration.secret_encoded</code>,
            <code>jwt_configuration.scopes</code>, <code>jwt_configuration.alg</code>, <code>api_type</code>,
            <code>logo_uri</code>, <code>allowed_clients</code>, <code>owners</code>, <code>custom_login_page</code>,
            <code>custom_login_page_off</code>, <code>sso</code>, <code>addons</code>, <code>form_template</code>,
            <code>custom_login_page_codeview</code>, <code>resource_servers</code>, <code>client_metadata</code>,
            <code>mobile</code>, <code>mobile.android</code>, <code>mobile.ios</code>, <code>allowed_logout_urls</code>,
            <code>token_endpoint_auth_method</code>, <code>is_first_party</code>, <code>oidc_conformant</code>,
            <code>is_token_endpoint_ip_header_trusted</code>, <code>initiate_login_uri</code>, <code>grant_types</code>,
            <code>refresh_token</code>, <code>refresh_token.rotation_type</code>, <code>refresh_token.expiration_type</code>,
            <code>refresh_token.leeway</code>, <code>refresh_token.token_lifetime</code>, <code>organization_usage</code>,
            <code>organization_require_behavior</code>
            properties can only be retrieved with the <code>read:clients</code> or
            <code>read:client_keys</code> scope.
          </li>
          <li>
            <code>encryption_key</code>, <code>encryption_key.pub</code>, <code>encryption_key.cert</code>,
            <code>client_secret</code>, <code>client_authentication_methods</code> and <code>signing_key</code> properties can only be retrieved with the
            <code>read:client_keys</code> or <code>read:client_credentials</code> scope.
          </li>
        </ul>
      operationId: get_clients
      parameters:
      - description: Comma-separated list of fields to include or exclude (based on
          value provided for include_fields) in the result. Leave empty to retrieve
          all fields.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          pattern: "^((name)|(description)|(callbacks)|(oidc_backchannel_logout)|(oidc_logout)|(allowed_origins)|(web_origins)|(client_id)|(tenant)|(global)|(config_route)|(callback_url_template)|(jwt_configuration)|(jwt_configuration\\\
            .lifetime_in_seconds)|(jwt_configuration\\.secret_encoded)|(jwt_configuration\\\
            .scopes)|(jwt_configuration\\.alg)|(api_type)|(logo_uri)|(allowed_clients)|(owners)|(custom_login_page)|(custom_login_page_on)|(sso)|(addons)|(form_template)|(custom_login_page_preview)|(encryption_key)|(encryption_key\\\
            .pub)|(encryption_key\\.cert)|(client_secret)|(signing_keys)|(mobile)|(mobile\\\
            .android)|(mobile\\.ios)|(token_endpoint_auth_method)|(allowed_logout_urls)|(app_type)|(is_first_party)|(oidc_conformant)|(client_metadata)|(is_token_endpoint_ip_header_trusted)|(initiate_login_uri)|(grant_types)|(refresh_token)|(refresh_token\\\
            .rotation_type)|(refresh_token\\.expiration_type)|(refresh_token\\.leeway)|(refresh_token\\\
            .token_lifetime)|(organization_usage)|(organization_require_behavior)|(client_authentication_methods)|(client_authentication_methods\\\
            .private_key_jwt)|(require_pushed_authorization_requests)|(id_token)|(signed_request_object)|(signed_request_object\\\
            .required)|(signed_request_object\\.credentials)|(compliance_level))(,((name)|(description)|(callbacks)|(oidc_backchannel_logout)|(oidc_logout)|(allowed_origins)|(web_origins)|(client_id)|(tenant)|(global)|(config_route)|(callback_url_template)|(jwt_configuration)|(jwt_configuration\\\
            .lifetime_in_seconds)|(jwt_configuration\\.secret_encoded)|(jwt_configuration\\\
            .scopes)|(jwt_configuration\\.alg)|(api_type)|(logo_uri)|(allowed_clients)|(owners)|(custom_login_page)|(custom_login_page_on)|(sso)|(addons)|(form_template)|(custom_login_page_preview)|(encryption_key)|(encryption_key\\\
            .pub)|(encryption_key\\.cert)|(client_secret)|(signing_keys)|(mobile)|(mobile\\\
            .android)|(mobile\\.ios)|(token_endpoint_auth_method)|(allowed_logout_urls)|(app_type)|(is_first_party)|(oidc_conformant)|(client_metadata)|(is_token_endpoint_ip_header_trusted)|(initiate_login_uri)|(grant_types)|(refresh_token)|(refresh_token\\\
            .rotation_type)|(refresh_token\\.expiration_type)|(refresh_token\\.leeway)|(refresh_token\\\
            .token_lifetime)|(organization_usage)|(organization_require_behavior)|(client_authentication_methods)|(client_authentication_methods\\\
            .private_key_jwt)|(require_pushed_authorization_requests)|(id_token)|(signed_request_object)|(signed_request_object\\\
            .required)|(signed_request_object\\.credentials)|(compliance_level)))*$"
          type: string
        style: form
      - description: Whether specified fields are to be included (true) or excluded
          (false).
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: "Number of results per page. Default value is 50, maximum value\
          \ is 100"
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter on the global client parameter.
        explode: true
        in: query
        name: is_global
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter on whether or not a client is a first-party client.
        explode: true
        in: query
        name: is_first_party
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter by a comma-separated list of application types.
        explode: true
        in: query
        name: app_type
        required: false
        schema:
          pattern: "^((native)|(spa)|(regular_web)|(non_interactive)|(rms)|(box)|(cloudbees)|(concur)|(dropbox)|(mscrm)|(echosign)|(egnyte)|(newrelic)|(office365)|(salesforce)|(sentry)|(sharepoint)|(slack)|(springcm)|(zendesk)|(zoom)|(sso_integration)|(oag))(,((native)|(spa)|(regular_web)|(non_interactive)|(rms)|(box)|(cloudbees)|(concur)|(dropbox)|(mscrm)|(echosign)|(egnyte)|(newrelic)|(office365)|(salesforce)|(sentry)|(sharepoint)|(slack)|(springcm)|(zendesk)|(zoom)|(sso_integration)|(oag)))*$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_clients_200_response'
          description: Clients successfully retrieved.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:clients, read:client_keys,\
            \ read:client_summary"
          x-description-1: Some fields cannot be read with the permissions granted
            by the bearer token scopes. The message will vary depending on the fields
            and the scopes.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:clients
        - read:client_keys
        - read:client_credentials
        - read:client_summary
      summary: Get clients
      tags:
      - clients
      x-sdk-method-name: getAll
    post:
      description: "Create a new client (application or SSO integration).\n\nNotes:\
        \ \n- We recommend leaving the `client_secret` parameter unspecified to allow\
        \ the generation of a safe secret.\n- The <code>client_authentication_methods</code>\
        \ and <code>token_endpoint_auth_method</code> properties are mutually exclusive.\
        \ Use \n<code>client_authentication_methods</code> to configure the client\
        \ with Private Key JWT authentication method. Otherwise, use <code>token_endpoint_auth_method</code>\n\
        to configure the client with client secret (basic or post) or with no authentication\
        \ method (none).\n- When using <code>client_authentication_methods</code>\
        \ to configure the client with Private Key JWT authentication method, specify\
        \ fully defined credentials. \nThese credentials will be automatically enabled\
        \ for Private Key JWT authentication on the client. \n- To configure <code>client_authentication_methods</code>,\
        \ the <code>create:client_credentials</code> scope is required.\n- To configure\
        \ <code>client_authentication_methods</code>, the property <code>jwt_configuration.alg</code>\
        \ must be set to RS256.\n\n<div class=\"alert alert-warning\">SSO Integrations\
        \ created via this endpoint will accept login requests and share user profile\
        \ information.</div>\n"
      operationId: post_clients
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clientCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/clientCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
          description: Client successfully created.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: create:clients."
          x-description-1: The account is not allowed to perform this operation.
          x-description-2: You reached the limit of entities of this type for this
            tenant.
          x-description-3: Organizations are only available to first party clients.
        "409":
          description: Another client exists with the same alias.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:clients
      summary: Create a client
      tags:
      - clients
      x-sdk-method-name: create
  /clients/{client_id}/credentials:
    get:
      description: "Get the details of a client credential. \n\n<b>Important</b>:\
        \ To enable credentials to be used for Private Key JWT authentication method,\
        \ set the <code>client_authentication_methods</code> property on the client."
      operationId: get_credentials
      parameters:
      - description: ID of the client.
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_credentials_200_response_inner'
                type: array
          description: Credentials successfully retrieved.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:client_credentials."
        "404":
          description: Client not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:client_credentials
      summary: Get client credentials
      tags:
      - clients
      x-sdk-method-name: getCredentials
    post:
      description: "Create a client credential associated to your application. The\
        \ credential will be created but not yet enabled for use with Private Key\
        \ JWT authentication method. To enable the credential, set the <code>client_authentication_methods</code>\
        \ property on the client. \nFor more information, read <a href=\"https://www.auth0.com//docs/get-started/applications/configure-private-key-jwt\"\
        >Configure Private Key JWT Authentication</a>."
      operationId: post_credentials
      parameters:
      - description: ID of the client.
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_credentials_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_credentials_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_credentials_200_response_inner'
          description: Credential successfully created.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: create:client_credentials."
        "404":
          description: Client not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:client_credentials
      summary: Create a client credential
      tags:
      - clients
      x-sdk-method-name: createCredential
  /clients/{client_id}/credentials/{credential_id}:
    delete:
      description: "Delete a client credential you previously created. May be enabled\
        \ or disabled. For more information, read <a href=\"https://www.auth0.com/docs/get-started/authentication-and-authorization-flow/client-credentials-flow\"\
        >Client Credential Flow</a>."
      operationId: delete_credentials_by_credential_id
      parameters:
      - description: ID of the client.
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the credential to delete.
        explode: false
        in: path
        name: credential_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Credential successfully deleted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: delete:client_credentials."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:client_credentials
      summary: Delete a client credential
      tags:
      - clients
      x-sdk-method-name: deleteCredential
    get:
      description: "Get the details of a client credential. \n\n<b>Important</b>:\
        \ To enable credentials to be used for Private Key JWT authentication method,\
        \ set the <code>client_authentication_methods</code> property on the client."
      operationId: get_credentials_by_credential_id
      parameters:
      - description: ID of the client.
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the credential.
        explode: false
        in: path
        name: credential_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_credentials_200_response_inner'
          description: Credential successfully retrieved.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:client_credentials."
        "404":
          description: Client not found.
          x-description-1: Credential does not exist
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:client_credentials
      summary: Get client credential details
      tags:
      - clients
      x-sdk-method-name: getCredential
    patch:
      description: "Change a client credential you previously created. May be enabled\
        \ or disabled. For more information, read <a href=\"https://www.auth0.com/docs/get-started/authentication-and-authorization-flow/client-credentials-flow\"\
        >Client Credential Flow</a>."
      operationId: patch_credentials_by_credential_id
      parameters:
      - description: ID of the client.
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the credential.
        explode: false
        in: path
        name: credential_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patch_credentials_by_credential_id_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/patch_credentials_by_credential_id_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_credentials_200_response_inner'
          description: Credential successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:client_credentials."
        "404":
          description: Client not found.
          x-description-1: Credential does not exist
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:client_credentials
      summary: Update a client credential
      tags:
      - clients
      x-sdk-method-name: updateCredential
  /connections:
    get:
      description: "Retrieves every connection matching the specified strategy. All\
        \ connections are retrieved if no strategy is being specified. Accepts a list\
        \ of fields to include or exclude in the resulting list of connection objects.\n\
        This endpoint supports two types of pagination:\n- Offset pagination\n- Checkpoint\
        \ pagination\n\nCheckpoint pagination should be used if you need to retrieve\
        \ more than 1000 connections.\n\n<h2>Checkpoint Pagination</h2>\n\nTo search\
        \ by checkpoint, use the following parameters:\n- from: Optional id from which\
        \ to start selection.\n- take: The total amount of entries to retrieve when\
        \ using the from parameter. Defaults to 50.\n\nThe first time you call this\
        \ endpoint using Checkpoint Pagination, you should omit the <code>from</code>\
        \ parameter. \nIf there are more results, a <code>next</code> value will be\
        \ included in the response. You can use this for subsequent API calls. \n\
        When <code>next</code> is no longer included in the response, this indicates\
        \ there are no more pages remaining.\n\nNote: The <code>include_totals</code>\
        \ parameter is not supported when using checkpoint pagination."
      operationId: get_connections
      parameters:
      - description: "The amount of entries per page. Default: no paging is used,\
          \ all connections are returned"
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The page number. Zero based
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: "true if a query summary must be included in the result, false\
          \ otherwise. Not returned when using checkpoint pagination. Default <code>false</code>."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional Id from which to start selection.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: Number of results per page. Defaults to 50.
        explode: true
        in: query
        name: take
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Provide strategies to only retrieve connections with such strategies
        explode: true
        in: query
        name: strategy
        required: false
        schema:
          items:
            $ref: '#/components/schemas/get_connections_strategy_parameter_inner'
          type: array
        style: form
      - description: Provide the name of the connection to retrieve
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: "A comma separated list of fields to include or exclude (depending\
          \ on include_fields) from the result, empty to retrieve all fields"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          pattern: "^((name)|(display_name)|(strategy)|(options)|(enabled_clients)|(id)|(provisioning_ticket_url)|(metadata)|(show_as_button))(,((name)|(display_name)|(strategy)|(options)|(enabled_clients)|(id)|(provisioning_ticket_url)|(metadata)|(show_as_button)))*$"
          type: string
        style: form
      - description: "<code>true</code> if the fields specified are to be included\
          \ in the result, <code>false</code> otherwise (defaults to <code>true</code>)"
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_connections_200_response'
          description: The conections were retrieved. See <strong>Response Class</strong>
            below for schema.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation
        "403":
          description: "Insufficient scope, expected any of: read:connections"
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:connections
      summary: Get all connections
      tags:
      - connections
      x-sdk-method-name: getAll
    post:
      description: Creates a new connection according to the JSON object received
        in <code>body</code>.<br/>
      operationId: post_connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectionCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/connectionCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection'
          description: The connection was created. See <strong>Response Class</strong>
            below for schema.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
          x-description-1: Your account is not allowed to set options.set_user_root_attributes
          x-description-2: "options.set_user_root_attributes can be set only for enterprise\
            \ connections, social connections or custom database connections (using\
            \ external users store)"
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation
        "403":
          description: "Insufficient scope, expected any of: create:connections"
          x-description-1: You reached the limit of entities of this type for this
            tenant.
        "409":
          description: A connection with the same name already exists
          x-description-1: "A connection with the same name is being deleted, try\
            \ again later"
          x-description-2: There is already another connection with some realms from
            "realms" parameter
          x-description-3: There is already a domain connection enabled for strategy
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:connections
      summary: Create a connection
      tags:
      - connections
      x-sdk-method-name: create
  /connections/{id}:
    delete:
      description: |
        Deletes a connection and all its users.
      operationId: delete_connections_by_id
      parameters:
      - description: The id of the connection to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: The connection is being deleted.
        "204":
          description: The connection no longer exists.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation
        "403":
          description: "Insufficient scope, expected any of: delete:connections"
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:connections
      summary: Delete a connection
      tags:
      - connections
      x-sdk-method-name: delete
    get:
      description: |
        Retrieves a connection by its <code>ID</code>.
      operationId: get_connections_by_id
      parameters:
      - description: The id of the connection to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "A comma separated list of fields to include or exclude (depending\
          \ on include_fields) from the result, empty to retrieve all fields"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          pattern: "^((name)|(display_name)|(strategy)|(options)|(enabled_clients)|(id)|(provisioning_ticket_url)|(metadata)|(show_as_button))(,((name)|(display_name)|(strategy)|(options)|(enabled_clients)|(id)|(provisioning_ticket_url)|(metadata)|(show_as_button)))*$"
          type: string
        style: form
      - description: "<code>true</code> if the fields specified are to be included\
          \ in the result, <code>false</code> otherwise (defaults to <code>true</code>)"
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection'
          description: The connection was retrieved. See <strong>Response Class</strong>
            below for schema.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation
        "403":
          description: "Insufficient scope, expected any of: read:connections"
        "404":
          description: The connection does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:connections
      summary: Get a connection
      tags:
      - connections
      x-sdk-method-name: get
    patch:
      description: |
        <b>Note:</b> if you use the options parameter, the whole options object will be overridden, so ensure that all parameters are present
      operationId: patch_connections_by_id
      parameters:
      - description: The id of the connection to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectionUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/connectionUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connection'
          description: The connection was updated. See <strong>Response Class</strong>
            below for schema.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
          x-description-2: This database contains users. You cannot change "options.enabledDatabaseCustomization"
            setting.
          x-description-3: Your account is not allowed to set options.set_user_root_attributes
          x-description-4: The Azure AD common endpoint cannot be enabled for this
            connection when SCIM is enabled.
          x-description-5: "options.set_user_root_attributes can be set only for enterprise\
            \ connections, social connections or custom database connections (using\
            \ external users store)"
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation
        "403":
          description: "Insufficient scope, expected any of: update:connections"
        "404":
          description: The connection does not exist
        "409":
          description: The name/client_id tuple has already been used for another
            connection
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:connections
      summary: Update a connection
      tags:
      - connections
      x-sdk-method-name: update
  /connections/{id}/scim-configuration:
    delete:
      description: |
        Deletes a scim configuration by its <code>connectionId</code>.
      operationId: delete_scim-configuration
      parameters:
      - description: The id of the connection to delete its SCIM configuration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The connection's SCIM configuration has been deleted.
        "400":
          description: Path validation error
        "404":
          description: The connection does not exist
      summary: Delete a connection's SCIM configuration
      tags:
      - connections
      x-sdk-method-name: deleteScimConfiguration
    get:
      description: |
        Retrieves a scim configuration by its <code>connectionId</code>.
      operationId: get_scim-configuration
      parameters:
      - description: The id of the connection to retrieve its SCIM configuration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_scim_configuration_200_response'
          description: The connection's SCIM configuration was retrieved. See <strong>Response
            Schemas</strong> for schema.
        "400":
          description: Path validation error
        "404":
          description: The connection does not exist
          x-description-1: Not Found
      summary: Get a connection's SCIM configuration
      tags:
      - connections
      x-sdk-method-name: getScimConfiguration
    patch:
      description: |
        Update a scim configuration by its <code>connectionId</code>.
      operationId: patch_scim-configuration
      parameters:
      - description: The id of the connection to update its SCIM configuration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patch_scim_configuration_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/patch_scim_configuration_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_scim_configuration_200_response'
          description: The connection's SCIM configuration was updated. See <strong>Response
            Schemas</strong> for schema.
        "400":
          description: Invalid mapping provided
          x-description-1: Invalid payload
          x-description-2: Path validation error
        "404":
          description: The connection does not exist
      summary: Patch a connection's SCIM configuration
      tags:
      - connections
      x-sdk-method-name: updateScimConfiguration
    post:
      description: |
        Create a scim configuration for a connection.
      operationId: post_scim-configuration
      parameters:
      - description: The id of the connection to create its SCIM configuration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_scim_configuration_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_scim_configuration_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_scim_configuration_200_response'
          description: The connection's SCIM configuration was created. See <strong>Response
            Schemas</strong> for schema.
        "400":
          description: Path validation error
          x-description-1: SCIM configuration alreay exists for connection
          x-description-2: Invalid mapping provided
          x-description-3: Invalid payload
          x-description-4: SCIM cannot be enabled for this connection when the Azure
            AD common endpoint is used.
        "404":
          description: The connection does not exist
      security: []
      summary: Create a SCIM configuration
      tags:
      - connections
      x-sdk-method-name: createScimConfiguration
  /connections/{id}/scim-configuration/default-mapping:
    get:
      description: |
        Retrieves a scim configuration's default mapping by its <code>connectionId</code>.
      operationId: get_default-mapping
      parameters:
      - description: The id of the connection to retrieve its default SCIM mapping
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_default_mapping_200_response'
          description: The connection's default SCIM mapping was retrieved. See <strong>Response
            Schemas</strong> for schema.
        "400":
          description: Path validation error
        "404":
          description: Not Found
          x-description-1: The connection does not exist
      summary: Get a connection's default SCIM mapping
      tags:
      - connections
      x-sdk-method-name: getDefaultScimMapping
  /connections/{id}/scim-configuration/tokens:
    get:
      description: |
        Retrieves all scim tokens by its connection <code>id</code>.
      operationId: get_scim_tokens
      parameters:
      - description: The id of the connection to retrieve its SCIM configuration
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: The list of scim tokens for scim clients
                items:
                  $ref: '#/components/schemas/get_scim_tokens_200_response_inner'
                type: array
          description: The connection's SCIM tokens were retrieved. See <strong>Response
            Schemas</strong> for schema.
        "400":
          description: Path validation error
        "404":
          description: The connection does not exist
      summary: Get a connection's SCIM tokens
      tags:
      - connections
      x-sdk-method-name: getScimTokens
    post:
      description: |
        Create a scim token for a scim client.
      operationId: post_scim_token
      parameters:
      - description: The id of the connection to create its SCIM token
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_scim_token_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_scim_token_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_scim_token_201_response'
          description: The connection's SCIM token was created. See <strong>Response
            Schemas</strong> for schema.
        "400":
          description: Path validation error
        "404":
          description: The connection does not exist
        "409":
          description: Maximum of 2 tokens already issued for this connection
      summary: Create a SCIM Token
      tags:
      - connections
      x-sdk-method-name: createScimToken
  /connections/{id}/scim-configuration/tokens/{tokenId}:
    delete:
      description: |
        Deletes a scim token by its connection <code>id</code> and <code>tokenId</code>.
      operationId: delete_tokens_by_tokenId
      parameters:
      - description: The connection id that owns the SCIM token to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the scim token to delete
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The SCIM token has been deleted.
        "400":
          description: Path validation error
        "404":
          description: The connection does not exist
      summary: Delete a connection's SCIM token
      tags:
      - connections
      x-sdk-method-name: deleteScimToken
  /connections/{id}/status:
    get:
      description: "Retrieves the status of an ad/ldap connection referenced by its\
        \ <code>ID</code>. <code>200 OK</code> http status code response is returned\
        \  when the connection is online, otherwise a <code>404</code> status code\
        \ is returned along with an error message"
      operationId: get_status
      parameters:
      - description: ID of the connection to check
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Connection status successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:connections."
        "404":
          description: Connection not found.
          x-description-1: not connected to any node
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:connections
      summary: Check connection status
      tags:
      - connections
      x-sdk-method-name: checkStatus
  /connections/{id}/users:
    delete:
      description: |
        Deletes a specified connection user by its email (you cannot delete all users from specific connection). Currently, only Database Connections are supported.
      operationId: delete_users_by_email
      parameters:
      - description: The id of the connection (currently only database connections
          are supported)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The email of the user to delete
        explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: The user no longer exists.
        "400":
          description: The connection does not exist
          x-description-1: Connection must be a database connection
          x-description-2: Invalid request URI. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation
        "403":
          description: "Insufficient scope, expected any of: delete:users"
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:users
      summary: Delete a connection user
      tags:
      - connections
      x-sdk-method-name: deleteUserByEmail
  /custom-domains:
    get:
      description: Retrieve details on <a href="https://auth0.com/docs/custom-domains">custom
        domains</a>.
      operationId: get_custom-domains
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/customDomain'
                type: array
          description: Custom domains successfully retrieved.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:custom_domains."
          x-description-1: Some fields cannot be read with the permissions granted
            by the bearer token scopes. The message will vary depending on the fields
            and the scopes.
          x-description-2: The account is not allowed to perform this operation.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:custom_domains
      summary: Get custom domains configurations
      tags:
      - custom-domains
      x-sdk-method-name: getAll
    post:
      description: |
        Create a new custom domain.

        Note: The custom domain will need to be verified before it will accept
        requests.

        Optional attributes that can be updated:

        - custom_client_ip_header
        - tls_policy


        TLS Policies:

        - recommended - for modern usage this includes TLS 1.2 only
        - compatible - compatible with older browsers this policy includes TLS 1.0, 1.1, 1.2


        Some considerations:

        - The TLS ciphers and protocols available in each TLS policy follow industry recommendations, and may be updated occasionally.
        - Do not use the <code>compatible</code> TLS policy unless you have clients that require TLS 1.0.
      operationId: post_custom-domains
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_custom_domains_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_custom_domains_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_custom_domains_201_response'
          description: Custom domain successfully created (verification is pending).
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
          x-description-1: The 'tls_policy' cannot be set on self_managed domains
          x-description-2: The 'custom_client_ip_header' cannot be set on auth0_managed
            domains
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: create:custom_domains."
          x-description-1: The account is not allowed to perform this operation.
        "409":
          description: Custom domain already exists.
          x-description-1: You reached the maximum number of custom domains for your
            account.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:custom_domains
      summary: Configure a new custom domain
      tags:
      - custom-domains
      x-sdk-method-name: create
  /custom-domains/{id}:
    delete:
      description: Delete a custom domain and stop serving requests for it.
      operationId: delete_custom-domains_by_id
      parameters:
      - description: ID of the custom domain to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Custom domain successfully deleted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: delete:custom_domains."
          x-description-1: The account is not allowed to perform this operation.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:custom_domains
      summary: Delete custom domain configuration
      tags:
      - custom-domains
      x-sdk-method-name: delete
    get:
      description: Retrieve a custom domain configuration and status.
      operationId: get_custom-domains_by_id
      parameters:
      - description: ID of the custom domain to retrieve.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customDomain'
          description: Custom domain successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:custom_domains."
          x-description-1: Some fields cannot be read with the permissions granted
            by the bearer token scopes. The message will vary depending on the fields
            and the scopes.
          x-description-2: The account is not allowed to perform this operation.
        "404":
          description: Custom domain not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:custom_domains
      summary: Get custom domain configuration
      tags:
      - custom-domains
      x-sdk-method-name: get
    patch:
      description: |
        Update a custom domain.

        These are the attributes that can be updated:

        - custom_client_ip_header
        - tls_policy

        <h5>Updating CUSTOM_CLIENT_IP_HEADER for a custom domain</h5>To update the <code>custom_client_ip_header</code> for a domain, the body to
        send should be:
        <pre><code>{ "custom_client_ip_header": "cf-connecting-ip" }</code></pre>

        <h5>Updating TLS_POLICY for a custom domain</h5>To update the <code>tls_policy</code> for a domain, the body to send should be:
        <pre><code>{ "tls_policy": "compatible" }</code></pre>


        TLS Policies:

        - recommended - for modern usage this includes TLS 1.2 only
        - compatible - compatible with older browsers this policy includes TLS 1.0, 1.1, 1.2


        Some considerations:

        - The TLS ciphers and protocols available in each TLS policy follow industry recommendations, and may be updated occasionally.
        - Do not use the <code>compatible</code> TLS policy unless you have clients that require TLS 1.0.
      operationId: patch_custom-domains_by_id
      parameters:
      - description: The id of the custom domain to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patch_custom_domains_by_id_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/patch_custom_domains_by_id_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_custom_domains_201_response'
          description: Custom domain updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
          x-description-1: The 'tls_policy' cannot be set on self_managed domains
          x-description-2: The 'custom_client_ip_header' cannot be set on auth0_managed
            domains
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: update:custom_domains."
          x-description-1: Your account is not allowed to perform this operation.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:custom_domains
      summary: Update custom domain configuration
      tags:
      - custom-domains
      x-sdk-method-name: update
  /custom-domains/{id}/verify:
    post:
      description: |
        Run the verification process on a custom domain.

        Note: Check the <code>status</code> field to see its verification status. Once verification is complete, it may take up to 10 minutes before the custom domain can start accepting requests.

        For <code>self_managed_certs</code>, when the custom domain is verified for the first time, the response will also include the <code>cname_api_key</code> which you will need to configure your proxy. This key must be kept secret, and is used to validate the proxy requests.

        <a href="https://auth0.com/docs/custom-domains#step-2-verify-ownership">Learn more</a> about verifying custom domains that use Auth0 Managed certificates.
        <a href="https://auth0.com/docs/custom-domains/self-managed-certificates#step-2-verify-ownership">Learn more</a> about verifying custom domains that use Self Managed certificates.
      operationId: post_verify
      parameters:
      - description: ID of the custom domain to verify.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_verify_200_response'
          description: Custom domain successfully verified.
          x-description-1: Custom domain failed verification.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Custom domain already verified.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: create:custom_domains."
          x-description-1: The account is not allowed to perform this operation.
        "404":
          description: Custom domain not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:custom_domains
      summary: Verify a custom domain
      tags:
      - custom-domains
      x-sdk-method-name: verify
  /device-credentials:
    get:
      description: |
        Device Credentials relate to refresh tokens and rotating refresh tokens for a given user_id.

        Note: Device Credentials APIs are designed for ad-hoc administrative use only, and paging is by default enabled for GET requests.
        Note: When Refresh Token Rotation is enabled, the endpoint becomes eventual consistent.
      operationId: get_device-credentials
      parameters:
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of results per page.  There is a maximum of 1000 results
          allowed from this endpoint.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      - description: Comma-separated list of fields to include or exclude (based on
          value provided for include_fields) in the result. Leave empty to retrieve
          all fields.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          pattern: "^((device_name)|(id)|(device_id)|(type)|(user_id)|(client_id))(,((device_name)|(id)|(device_id)|(type)|(user_id)|(client_id)))*$"
          type: string
        style: form
      - description: Whether specified fields are to be included (true) or excluded
          (false).
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      - description: user_id of the devices to retrieve.
        explode: true
        in: query
        name: user_id
        required: false
        schema:
          type: string
        style: form
      - description: client_id of the devices to retrieve.
        explode: true
        in: query
        name: client_id
        required: false
        schema:
          type: string
        style: form
      - description: "Type of credentials to retrieve. Must be `public_key`, `refresh_token`\
          \ or `rotating_refresh_token`. The property will default to `refresh_token`\
          \ when paging is requested"
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/get_device_credentials_type_parameter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_device_credentials_200_response'
          description: Device credentials successfully retrieved.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
          x-description-3: "Username is malformed, try with '{connection}\\{email_or_username}'"
          x-description-4: Bad username or password.
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: "Insufficient scope, expected any of: read:device_credentials"
          x-description-2: Cannot retrieve device credentials for that user.
          x-description-3: Cannot retrieve device credentials for that client.
          x-description-4: Must provide client_id parameter.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:device_credentials
      summary: Retrieve device credentials
      tags:
      - device-credentials
      x-sdk-method-name: getAll
    post:
      description: |
        Device Credentials relate to refresh tokens and rotating refresh tokens for a given user_id.

        Note: Device Credentials APIs are designed for ad-hoc administrative use only, and paging is by default enabled for GET requests.
        Note: When Refresh Token Rotation is enabled, the endpoint becomes eventual consistent.
      operationId: post_device-credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deviceCredentialCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/deviceCredentialCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_device_credentials_201_response'
          description: Device credentials successfully created.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: "Username is malformed, try with \"{connection}\\{email_or_username}\"\
            ."
          x-description-3: Bad username or password.
        "403":
          description: Cannot create device credentials for that user.
          x-description-1: Cannot create device credentials for that client.
          x-description-2: "Insufficient scope; expected any of: create:current_user_device_credentials."
        "409":
          description: A public key already exists for the device.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:current_user_device_credentials
      summary: Create a device public key credential
      tags:
      - device-credentials
      x-sdk-method-name: createPublicKey
  /device-credentials/{id}:
    delete:
      description: Delete a device credential.
      operationId: delete_device-credentials_by_id
      parameters:
      - description: ID of the credential to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^dcr_[A-Za-z0-9]{16}$"
          type: string
        style: simple
      responses:
        "204":
          description: Device credentials successfully deleted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
          x-description-3: "Username is malformed, try with \"{connection}\\{email_or_username}\"\
            ."
          x-description-4: Bad username or password.
        "403":
          description: "Insufficient scope; expected any of: delete:device_credentials,\
            \ update:current_user, delete:current_user_device_credentials."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:device_credentials
        - delete:current_user_device_credentials
      summary: Delete a device credential
      tags:
      - device-credentials
      x-sdk-method-name: delete
  /email-templates:
    post:
      description: Create an email template.
      operationId: post_email-templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_email_templates_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_email_templates_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_email_templates_request'
          description: Template successfully created.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: create:email_templates."
        "409":
          description: Template (templateName) already exists.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:email_templates
      summary: Create an email template
      tags:
      - email-templates
      x-sdk-method-name: create
  /email-templates/{templateName}:
    get:
      description: "Retrieve an email template by pre-defined name. These names are\
        \ `verify_email`, `verify_email_by_code`, `reset_email`, `welcome_email`,\
        \ `blocked_account`, `stolen_credentials`, `enrollment_email`, `mfa_oob_code`,\
        \ and `user_invitation`. The names `change_password`, and `password_reset`\
        \ are also supported for legacy scenarios."
      operationId: get_email-templates_by_templateName
      parameters:
      - description: "Template name. Can be `verify_email`, `verify_email_by_code`,\
          \ `reset_email`, `welcome_email`, `blocked_account`, `stolen_credentials`,\
          \ `enrollment_email`, `mfa_oob_code`, `user_invitation`, `change_password`\
          \ (legacy), or `password_reset` (legacy)."
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          $ref: '#/components/schemas/get_email_templates_by_templateName_templateName_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_email_templates_by_templateName_200_response'
          description: Template successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: read:email_templates."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:email_templates
      summary: Get an email template
      tags:
      - email-templates
      x-sdk-method-name: get
    patch:
      description: Modify an email template.
      operationId: patch_email-templates_by_templateName
      parameters:
      - description: "Template name. Can be `verify_email`, `verify_email_by_code`,\
          \ `reset_email`, `welcome_email`, `blocked_account`, `stolen_credentials`,\
          \ `enrollment_email`, `mfa_oob_code`, `user_invitation`, `change_password`\
          \ (legacy), or `password_reset` (legacy)."
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          $ref: '#/components/schemas/get_email_templates_by_templateName_templateName_parameter'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/get_email_templates_by_templateName_200_response'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/get_email_templates_by_templateName_200_response'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_email_templates_by_templateName_200_response'
          description: Template successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: update:email_templates."
        "404":
          description: Template not found and cannot be updated.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:email_templates
      summary: Patch an email template
      tags:
      - email-templates
      x-sdk-method-name: update
    put:
      description: Update an email template.
      operationId: put_email-templates_by_templateName
      parameters:
      - description: "Template name. Can be `verify_email`, `verify_email_by_code`,\
          \ `reset_email`, `welcome_email`, `blocked_account`, `stolen_credentials`,\
          \ `enrollment_email`, `mfa_oob_code`, `user_invitation`, `change_password`\
          \ (legacy), or `password_reset` (legacy)."
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          $ref: '#/components/schemas/get_email_templates_by_templateName_templateName_parameter'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailTemplateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/emailTemplateUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_email_templates_request'
          description: Template successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: update:email_templates."
        "404":
          description: Template not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:email_templates
      summary: Update an email template
      tags:
      - email-templates
      x-sdk-method-name: put
  /emails/provider:
    get:
      description: |
        Retrieve <a href="https://auth0.com/docs/email/providers">email provider</a> details. A list of fields to include or exclude may also be specified.
      operationId: get_provider
      parameters:
      - description: "Comma-separated list of fields to include or exclude (dependent\
          \ upon include_fields) from the result. Leave empty to retrieve `name` and\
          \ `enabled`. Additional fields available include `credentials`, `default_from_address`,\
          \ and `settings`."
        explode: true
        in: query
        name: fields
        required: false
        schema:
          pattern: "^((name)|(enabled)|(credentials)|(settings)|(default_from_address))(,((name)|(enabled)|(credentials)|(settings)|(default_from_address)))*$"
          type: string
        style: form
      - description: Whether specified fields are to be included (true) or excluded
          (false).
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailProvider'
          description: Email provider successfully retrieved.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:email_provider."
        "404":
          description: Email provider has not been configured.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:email_provider
      summary: Get the email provider
      tags:
      - emails
      x-sdk-method-name: get
    patch:
      description: |
        Update an <a href="https://auth0.com/docs/email/providers">email provider</a>.
        The <code>credentials</code> object requires different properties depending on the email provider (which is specified using the <code>name</code> property):
        <ul><li><code>mandrill</code> requires <code>api_key</code></li><li><code>sendgrid</code> requires <code>api_key</code></li><li><code>sparkpost</code> requires <code>api_key</code>. Optionally, set <code>region</code> to <code>eu</code> to use the SparkPost service hosted in Western Europe; set to <code>null</code> to use the SparkPost service hosted in North America. <code>eu</code> or <code>null</code> are the only valid values for <code>region</code>.</li><li><code>mailgun</code> requires <code>api_key</code> and <code>domain</code>. Optionally, set <code>region</code> to <code>eu</code> to use the Mailgun service hosted in Europe; set to <code>null</code> otherwise. <code>eu</code> or <code>null</code> are the only valid values for <code>region</code>.</li><li><code>ses</code> requires <code>accessKeyId</code>, <code>secretAccessKey</code>, and <code>region</code></li><li><code>smtp</code> requires <code>smtp_host</code>, <code>smtp_port</code>, <code>smtp_user</code>, and <code>smtp_pass</code></li></ul>Depending on the type of provider it is possible to specify <code>settings</code> object with different configuration options, which will be used when sending an email:
        <ul><li><code>smtp</code> provider, <code>settings</code> may contain <code>headers</code> object. When using AWS SES SMTP host, you may provide a name of configuration set in <code>X-SES-Configuration-Set</code> header. Value must be a string.</li><li>for <code>ses</code> provider, <code>settings</code> may contain <code>message</code> object, where you can provide a name of configuration set in <code>configuration_set_name</code> property. Value must be a string.</li></ul>
      operationId: patch_provider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailProviderUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/emailProviderUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailProvider'
          description: Email provider successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:email_provider."
        "404":
          description: Email provider has not been configured.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:email_provider
      summary: Update the email provider
      tags:
      - emails
      x-sdk-method-name: update
    post:
      description: |
        Create an <a href="https://auth0.com/docs/email/providers">email provider</a>.
        The <code>credentials</code> object requires different properties depending on the email provider (which is specified using the <code>name</code> property):
        <ul><li><code>mandrill</code> requires <code>api_key</code></li><li><code>sendgrid</code> requires <code>api_key</code></li><li><code>sparkpost</code> requires <code>api_key</code>. Optionally, set <code>region</code> to <code>eu</code> to use the SparkPost service hosted in Western Europe; set to <code>null</code> to use the SparkPost service hosted in North America. <code>eu</code> or <code>null</code> are the only valid values for <code>region</code>.</li><li><code>mailgun</code> requires <code>api_key</code> and <code>domain</code>. Optionally, set <code>region</code> to <code>eu</code> to use the Mailgun service hosted in Europe; set to <code>null</code> otherwise. <code>eu</code> or <code>null</code> are the only valid values for <code>region</code>.</li><li><code>ses</code> requires <code>accessKeyId</code>, <code>secretAccessKey</code>, and <code>region</code></li><li><code>smtp</code> requires <code>smtp_host</code>, <code>smtp_port</code>, <code>smtp_user</code>, and <code>smtp_pass</code></li></ul>Depending on the type of provider it is possible to specify <code>settings</code> object with different configuration options, which will be used when sending an email:
        <ul><li><code>smtp</code> provider, <code>settings</code> may contain <code>headers</code> object. When using AWS SES SMTP host, you may provide a name of configuration set in <code>X-SES-Configuration-Set</code> header. Value must be a string.</li><li>for <code>ses</code> provider, <code>settings</code> may contain <code>message</code> object, where you can provide a name of configuration set in <code>configuration_set_name</code> property. Value must be a string.</li></ul>
      operationId: post_provider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailProviderCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/emailProviderCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailProvider'
          description: Email provider successfully created.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: create:email_provider."
        "409":
          description: Email provider is already configured.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:email_provider
      summary: Configure the email provider
      tags:
      - emails
      x-sdk-method-name: configure
  /grants:
    delete:
      description: Delete a grant associated with your account.
      operationId: delete_grants_by_user_id
      parameters:
      - description: user_id of the grant to delete.
        explode: true
        in: query
        name: user_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: User grant successfully deleted.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: delete:grants."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:grants
      summary: Delete a grant by user_id
      tags:
      - grants
      x-sdk-method-name: deleteByUserId
    get:
      description: 'Retrieve the <a href="https://auth0.com/docs/api-auth/which-oauth-flow-to-use">grants</a>
        associated with your account. '
      operationId: get_grants
      parameters:
      - description: Number of results per page. Paging is disabled if parameter not
          sent.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      - description: user_id of the grants to retrieve.
        explode: true
        in: query
        name: user_id
        required: false
        schema:
          type: string
        style: form
      - description: client_id of the grants to retrieve.
        explode: true
        in: query
        name: client_id
        required: false
        schema:
          type: string
        style: form
      - description: audience of the grants to retrieve.
        explode: true
        in: query
        name: audience
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_grants_200_response'
          description: Grants successfully retrieved.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:grants."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:grants
      summary: Get grants
      tags:
      - grants
      x-sdk-method-name: getAll
  /grants/{id}:
    delete:
      description: Delete a grant associated with your account.
      operationId: delete_grants_by_id
      parameters:
      - description: ID of the grant to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: User grant successfully deleted.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: delete:grants."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:grants
      summary: Delete a grant by id
      tags:
      - grants
      x-sdk-method-name: delete
  /guardian/enrollments/ticket:
    post:
      description: Generate an email with a link to start the multi-factor authentication
        enrollment process (subscription required).
      operationId: post_ticket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/enrollmentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/enrollmentCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_ticket_200_response'
          description: Enrollment ticket successfully created.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
        "404":
          description: User not found.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:guardian_enrollment_tickets
      summary: Create a multi-factor authentication enrollment ticket
      tags:
      - guardian
      x-sdk-method-name: createEnrollmentTicket
  /guardian/enrollments/{id}:
    delete:
      description: Delete an enrollment to allow the user to enroll with multi-factor
        authentication again.
      operationId: delete_enrollments_by_id
      parameters:
      - description: ID of the enrollment to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^((totp|sms|voice|push|email|recovery-code|webauthn-roaming|webauthn-platform)\\\
            |)?dev_[A-Za-z0-9-_]+$"
          type: string
        style: simple
      responses:
        "204":
          description: Enrollment successfully deleted.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope (expected delete:enrollment).
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:guardian_enrollments
      summary: Delete a multi-factor authentication enrollment
      tags:
      - guardian
      x-sdk-method-name: deleteGuardianEnrollment
    get:
      description: |-
        Retrieve an enrollment (including its status and type).

        Note: Phone numbers are partially obfuscated.
      operationId: get_enrollments_by_id
      parameters:
      - description: ID of the enrollment to be retrieve.
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^((totp|sms|voice|push|email|recovery-code|webauthn-roaming|webauthn-platform)\\\
            |)?dev_[A-Za-z0-9-_]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/enrollment'
          description: Enrollment successfully retrieved.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:guardian_enrollments
      summary: Retrieve a multi-factor authentication enrollment
      tags:
      - guardian
      x-sdk-method-name: getGuardianEnrollment
  /guardian/factors:
    get:
      description: Retrieve all <a href="https://auth0.com/docs/multifactor-authentication">multi-factor
        authentication</a> configurations.
      operationId: get_factors
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/factor'
                type: array
          description: Factors successfully retrieved.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:guardian_factors
      summary: Retrieve Factors and their Status
      tags:
      - guardian
      x-sdk-method-name: getFactors
  /guardian/factors/phone/message-types:
    get:
      operationId: get_message-types
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_message_types_200_response'
          description: Returns the enabled phone factors
        "400":
          description: Invalid input based on schemas
        "401":
          description: Token has expired or signature is invalid
        "403":
          description: Insufficient scope
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:guardian_factors
      summary: Retrieve the Enabled Phone Factors
      tags:
      - guardian
      x-sdk-method-name: getPhoneFactorMessageTypes
    put:
      description: Update enabled phone factors for multi-factor authentication
      operationId: put_message-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_message_types_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/put_message_types_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_message_types_200_response'
          description: Returns selected SMS provider configuration
        "400":
          description: Invalid input based on schemas
        "401":
          description: Token has expired or signature is invalid
        "403":
          description: Insufficient scope
        "404":
          description: The phone factor does not exist.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:guardian_factors
      summary: Update the Enabled Phone Factors
      tags:
      - guardian
      x-sdk-method-name: updatePhoneFactorMessageTypes
  /guardian/factors/phone/providers/twilio:
    get:
      description: Retrieve the <a href="https://auth0.com/docs/multifactor-authentication/twilio-configuration">Twilio
        phone provider configuration</a> (subscription required).
      operationId: get_phone_twilio_factor_provider
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/twilioFactorProvider'
          description: Twilio Phone configuration successfully retrieved.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:guardian_factors
      summary: Retrieve Twilio phone configuration
      tags:
      - guardian
      x-sdk-method-name: getPhoneFactorProviderTwilio
    put:
      description: Configure the <a href="https://auth0.com/docs/multifactor-authentication/twilio-configuration">Twilio
        phone provider configuration</a> (subscription required).
      operationId: put_twilio
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_twilio_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/put_twilio_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/twilioFactorProvider'
          description: Twilio Phone configuration successfully updated.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:guardian_factors
      summary: Update Twilio phone configuration
      tags:
      - guardian
      x-sdk-method-name: updatePhoneFactorProviderTwilio
  /guardian/factors/phone/selected-provider:
    get:
      operationId: get_phone_providers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_phone_providers_200_response'
          description: Returns selected Phone provider configuration
        "400":
          description: Invalid input based on schemas
        "401":
          description: Token has expired or signature is invalid
        "403":
          description: Insufficient scope
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:guardian_factors
      summary: Retrieve phone configuration (one of auth0|twilio|phone-message-hook)
      tags:
      - guardian
      x-sdk-method-name: getPhoneFactorSelectedProvider
    put:
      operationId: put_phone_providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_phone_providers_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/put_phone_providers_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_phone_providers_200_response'
          description: Returns selected Phone provider configuration
        "400":
          description: Invalid input based on schemas
        "401":
          description: Token has expired or signature is invalid
        "403":
          description: Insufficient scope
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:guardian_factors
      summary: Update phone configuration (one of auth0|twilio|phone-message-hook)
      tags:
      - guardian
      x-sdk-method-name: updatePhoneFactorSelectedProvider
  /guardian/factors/phone/templates:
    get:
      description: Retrieve phone enrollment and verification templates (subscription
        required).
      operationId: get_factor_phone_templates
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templateMessages'
          description: Phone enrollment and verification templates successfully retrieved.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:guardian_factors
      summary: Retrieve Enrollment and Verification Phone Templates
      tags:
      - guardian
      x-sdk-method-name: getPhoneFactorTemplates
    put:
      description: Customize the messages sent to complete phone enrollment and verification
        (subscription required).
      operationId: put_factor_phone_templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templateMessages'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/templateMessages'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templateMessages'
          description: Phone enrollment and verification templates successfully updated.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:guardian_factors
      summary: Update Enrollment and Verification Phone Templates
      tags:
      - guardian
      x-sdk-method-name: setPhoneFactorTemplates
  /guardian/factors/push-notification/providers/apns:
    get:
      operationId: get_apns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_apns_200_response'
          description: APNS configuration successfully retrieved.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:guardian_factors
      summary: Retrieve APNS push notification configuration
      tags:
      - guardian
      x-sdk-method-name: getPushNotificationProviderAPNS
    patch:
      operationId: patch_apns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_apns_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/put_apns_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/put_apns_200_response'
          description: APNS configuration successfully updated.
        "400":
          description: Invalid input based on schemas.
          x-description-1: "The PKCS #12 file is invalid. Please ensure the client\
            \ certificate is not expired, the environment matches, and the key and\
            \ certificate are not encrypted with a deprecated algorithm."
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:guardian_factors
      summary: Updates APNs provider configuration
      tags:
      - guardian
      x-sdk-method-name: updatePushNotificationProviderAPNS
    put:
      operationId: put_apns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_apns_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/put_apns_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/put_apns_200_response'
          description: APNS configuration successfully updated.
        "400":
          description: Invalid input based on schemas.
          x-description-1: "The PKCS #12 file is invalid. Please ensure the client\
            \ certificate is not expired, the environment matches, and the key and\
            \ certificate are not encrypted with a deprecated algorithm."
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:guardian_factors
      summary: Updates APNs provider configuration
      tags:
      - guardian
      x-sdk-method-name: setPushNotificationProviderAPNS
  /guardian/factors/push-notification/providers/fcm:
    patch:
      operationId: patch_fcm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_fcm_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/put_fcm_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: FCM configuration updated
        "400":
          description: Invalid input based on schemas
        "401":
          description: Token has expired or signature is invalid
        "403":
          description: Insufficient scope
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:guardian_factors
      summary: Updates FCM provider configuration
      tags:
      - guardian
      x-sdk-method-name: updatePushNotificationProviderFCM
    put:
      operationId: put_fcm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_fcm_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/put_fcm_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: FCM configuration updated
        "400":
          description: Invalid input based on schemas
        "401":
          description: Token has expired or signature is invalid
        "403":
          description: Insufficient scope
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:guardian_factors
      summary: Updates FCM provider configuration
      tags:
      - guardian
      x-sdk-method-name: setPushNotificationProviderFCM
  /guardian/factors/push-notification/providers/sns:
    get:
      description: Retrieve the <a href="https://auth0.com/docs/multifactor-authentication/developer/sns-configuration">AWS
        SNS push notification provider configuration</a> (subscription required).
      operationId: get_sns
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/snsFactorProvider'
          description: AWS SNS configuration successfully retrieved.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:guardian_factors
      summary: Retrieve AWS SNS push notification configuration
      tags:
      - guardian
      x-sdk-method-name: getPushNotificationProviderSNS
    patch:
      description: Configure the <a href="https://auth0.com/docs/multifactor-authentication/developer/sns-configuration">AWS
        SNS push notification provider configuration</a> (subscription required).
      operationId: patch_sns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_sns_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/put_sns_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/put_sns_request'
          description: AWS SNS configuration successfully updated.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:guardian_factors
      summary: Update SNS configuration for push notifications
      tags:
      - guardian
      x-sdk-method-name: updatePushNotificationProviderSNS
    put:
      description: Configure the <a href="https://auth0.com/docs/multifactor-authentication/developer/sns-configuration">AWS
        SNS push notification provider configuration</a> (subscription required).
      operationId: put_sns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_sns_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/put_sns_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/put_sns_request'
          description: AWS SNS configuration successfully updated.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:guardian_factors
      summary: Update AWS SNS push notification configuration
      tags:
      - guardian
      x-sdk-method-name: setPushNotificationProviderSNS
  /guardian/factors/push-notification/selected-provider:
    get:
      operationId: get_pn_providers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_pn_providers_200_response'
          description: Returns selected push notification provider
        "400":
          description: Invalid input based on schemas
        "401":
          description: Token has expired or signature is invalid
        "403":
          description: Insufficient scope
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:guardian_factors
      summary: Retrieve push notification provider
      tags:
      - guardian
      x-sdk-method-name: getPushNotificationSelectedProvider
    put:
      operationId: put_pn_providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_pn_providers_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/put_pn_providers_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_pn_providers_200_response'
          description: Returns selected push notification provider configuration
        "400":
          description: Invalid input based on schemas
        "401":
          description: Token has expired or signature is invalid
        "403":
          description: Insufficient scope
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:guardian_factors
      summary: Update Push Notification configuration (one of direct|sns|guardian)
      tags:
      - guardian
      x-sdk-method-name: setPushNotificationSelectedProvider
  /guardian/factors/sms/providers/twilio:
    get:
      description: |-
        Retrieve the <a href="https://auth0.com/docs/multifactor-authentication/twilio-configuration">Twilio SMS provider configuration</a> (subscription required).

            A new endpoint is available to retrieve the Twilio configuration related to phone factors (<a href='https://manage.local.dev.auth0.com/docs/api/management/v2/#!/Guardian/get_twilio'>phone Twilio configuration</a>). It has the same payload as this one. Please use it instead.
      operationId: get_sms_twilio_factor_provider
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smsTwilioFactorProvider'
          description: Twilio SMS configuration successfully retrieved.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:guardian_factors
      summary: Retrieve Twilio SMS configuration
      tags:
      - guardian
      x-sdk-method-name: getSmsFactorProviderTwilio
    put:
      description: "Configure the <a href=\"https://auth0.com/docs/multifactor-authentication/twilio-configuration\"\
        >Twilio SMS provider configuration</a> (subscription required).\n    \n  \
        \  A new endpoint is available to update the Twilio configuration related\
        \ to phone factors (<a href='https://manage.local.dev.auth0.com/docs/api/management/v2/#!/Guardian/put_twilio'>phone\
        \ Twilio configuration</a>). It has the same payload as this one. Please use\
        \ it instead."
      operationId: put_sms_twilio_factor_provider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_twilio_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/put_twilio_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smsTwilioFactorProvider'
          description: Twilio SMS configuration successfully updated.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:guardian_factors
      summary: Update Twilio SMS configuration
      tags:
      - guardian
      x-sdk-method-name: setSmsFactorProviderTwilio
  /guardian/factors/sms/selected-provider:
    get:
      description: A new endpoint is available to retrieve the configuration related
        to phone factors (<a href='https://manage.local.dev.auth0.com/docs/api/management/v2/#!/Guardian/get_selected_provider'>phone
        configuration</a>). It has the same payload as this one. Please use it instead.
      operationId: get_sms_providers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_phone_providers_200_response'
          description: Returns selected SMS provider configuration
        "400":
          description: Invalid input based on schemas
        "401":
          description: Token has expired or signature is invalid
        "403":
          description: Insufficient scope
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:guardian_factors
      summary: Retrieve SMS configuration (one of auth0|twilio|phone-message-hook)
      tags:
      - guardian
      x-sdk-method-name: getSmsSelectedProvider
    put:
      description: A new endpoint is available to update the configuration related
        to phone factors (<a href='https://manage.local.dev.auth0.com/docs/api/management/v2/#!/Guardian/put_selected_provider'>phone
        configuration</a>). It has the same payload as this one. Please use it instead.
      operationId: put_sms_providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_phone_providers_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/put_phone_providers_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_phone_providers_200_response'
          description: Returns selected SMS provider configuration
        "400":
          description: Invalid input based on schemas
        "401":
          description: Token has expired or signature is invalid
        "403":
          description: Insufficient scope
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:guardian_factors
      summary: Update SMS configuration (one of auth0|twilio|phone-message-hook)
      tags:
      - guardian
      x-sdk-method-name: setSmsSelectedProvider
  /guardian/factors/sms/templates:
    get:
      description: "Retrieve SMS enrollment and verification templates (subscription\
        \ required). \n\n    A new endpoint is available to retrieve enrollment and\
        \ verification templates related to phone factors (<a href='https://manage.local.dev.auth0.com/docs/api/management/v2/#!/Guardian/get_templates'>phone\
        \ templates</a>). It has the same payload as this one. Please use it instead."
      operationId: get_factor_sms_templates
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templateMessages'
          description: SMS enrollment and verification templates successfully retrieved.
        "204":
          description: No content.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:guardian_factors
      summary: Retrieve SMS Enrollment and Verification Templates
      tags:
      - guardian
      x-sdk-method-name: getSmsFactorTemplates
    put:
      description: "Customize the messages sent to complete SMS enrollment and verification\
        \ (subscription required).\n    \n    A new endpoint is available to update\
        \ enrollment and verification templates related to phone factors (<a href='https://manage.local.dev.auth0.com/docs/api/management/v2/#!/Guardian/put_templates'>phone\
        \ templates</a>). It has the same payload as this one. Please use it instead."
      operationId: put_factor_sms_templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/templateMessages'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/templateMessages'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templateMessages'
          description: SMS enrollment and verification templates successfully updated.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:guardian_factors
      summary: Update SMS Enrollment and Verification Templates
      tags:
      - guardian
      x-sdk-method-name: setSmsFactorTemplates
  /guardian/factors/{name}:
    put:
      description: Update a multi-factor authentication factor (subscription required).
      operationId: put_factors_by_name
      parameters:
      - description: "Factor name. Can be `sms`, `push-notification`, `email`, `duo`\
          \ `otp` `webauthn-roaming`, `webauthn-platform`, or `recovery-code`."
        explode: false
        in: path
        name: name
        required: true
        schema:
          $ref: '#/components/schemas/put_factors_by_name_name_parameter'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_factors_by_name_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/put_factors_by_name_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/put_factors_by_name_200_response'
          description: Factor updated successfully.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: Insufficient scope.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:guardian_factors
      summary: Update a Multi-factor Authentication Factor
      tags:
      - guardian
      x-sdk-method-name: updateFactor
  /guardian/policies:
    get:
      description: |
        Gets the MFA policies for the tenant.

        The following policies are supported: <ul><li><code>all-applications</code> policy - will prompt with MFA for all logins.</li><li><code>confidence-score</code> policy - will prompt with MFA only for low confidence logins.</li></ul>
        Use of the Adaptive MFA feature requires an add-on for the Enterprise plan. Please contact sales with any questions. For more information about Adaptive MFA, read our <a href="https://auth0.com/docs/mfa/adaptive-mfa">full documentation</a>.
      operationId: get_policies
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_policies_200_response_inner'
                type: array
          description: Success
        "400":
          description: Invalid input based on schemas
        "401":
          description: Token has expired or signature is invalid
        "403":
          description: Insufficient scope
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:mfa_policies
      summary: Get the Multi-factor Authentication policies
      tags:
      - guardian
      x-sdk-method-name: getPolicies
    put:
      description: |+
        Sets the MFA policies for the tenant.

        The following policies are supported: <ul><li><code>all-applications</code> policy - will prompt with MFA for all logins.</li><li><code>confidence-score</code> policy - will prompt with MFA only for low confidence logins.</li></ul> Pass an empty array to remove all MFA policies.
        Use of the Adaptive MFA feature requires an add-on for the Enterprise plan. Please contact sales with any questions. For more information about Adaptive MFA, read our <a href="https://auth0.com/docs/mfa/adaptive-mfa">full documentation</a>.

      operationId: put_policies
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/get_policies_200_response_inner'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/get_policies_200_response_inner'
              type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_policies_200_response_inner'
                type: array
          description: Policies updated
        "400":
          description: Invalid input based on schemas
        "401":
          description: Token has expired or signature is invalid
        "403":
          description: Insufficient scope
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:mfa_policies
      summary: Set the Multi-factor Authentication policies
      tags:
      - guardian
      x-sdk-method-name: updatePolicies
  /hooks:
    get:
      description: |
        Retrieve all <a href="https://auth0.com/docs/hooks">hooks</a>. Accepts a list of fields to include or exclude in the result.
      operationId: get_hooks
      parameters:
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of results per page. Paging is disabled if parameter not
          sent.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter on whether a hook is enabled (true) or disabled
          (false).
        explode: true
        in: query
        name: enabled
        required: false
        schema:
          type: boolean
        style: form
      - description: Comma-separated list of fields to include in the result. Leave
          empty to retrieve all fields.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          pattern: "^((id)|(name)|(script)|(dependencies)|(enabled)|(triggerId))(,((id)|(name)|(script)|(dependencies)|(enabled)|(triggerId)))*$"
          type: string
        style: form
      - description: Retrieves hooks that match the trigger
        explode: true
        in: query
        name: triggerId
        required: false
        schema:
          $ref: '#/components/schemas/get_hooks_triggerId_parameter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_hooks_200_response'
          description: Hooks successfully retrieved.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:hooks."
        "404":
          description: Hook not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:hooks
      summary: Get hooks
      tags:
      - hooks
      x-sdk-method-name: getAll
    post:
      description: |
        Create a new hook.
      operationId: post_hooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/hookCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/hookCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hook'
          description: Hook successfully created.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: create:hooks."
          x-description-1: This endpoint is disabled for your tenant.
        "409":
          description: Hook with the same name already exists.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:hooks
      summary: Create a hook
      tags:
      - hooks
      x-sdk-method-name: create
  /hooks/{id}:
    delete:
      description: |
        Delete a hook.
      operationId: delete_hooks_by_id
      parameters:
      - description: ID of the hook to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Za-z0-9-]*$"
          type: string
        style: simple
      responses:
        "204":
          description: Hook successfully deleted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: delete:hooks."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:hooks
      summary: Delete a hook
      tags:
      - hooks
      x-sdk-method-name: delete
    get:
      description: |
        Retrieve <a href="https://auth0.com/docs/hooks">a hook</a> by its ID. Accepts a list of fields to include in the result.
      operationId: get_hooks_by_id
      parameters:
      - description: ID of the hook to retrieve.
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Za-z0-9-]*$"
          type: string
        style: simple
      - description: Comma-separated list of fields to include in the result. Leave
          empty to retrieve all fields.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          pattern: "^((id)|(name)|(script)|(dependencies)|(enabled)|(triggerId))(,((id)|(name)|(script)|(dependencies)|(enabled)|(triggerId)))*$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hook'
          description: Hook successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:hooks."
        "404":
          description: Hook not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:hooks
      summary: Get a hook
      tags:
      - hooks
      x-sdk-method-name: get
    patch:
      description: |
        Update an existing hook.
      operationId: patch_hooks_by_id
      parameters:
      - description: ID of the hook to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Za-z0-9-]*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/hookUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/hookUpdate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hook'
          description: Hook successfully created.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: create:hooks."
          x-description-1: This endpoint is disabled for your tenant.
        "404":
          description: The hook does not exist
        "409":
          description: A hook with the same name already exists.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:hooks
      summary: Update a hook
      tags:
      - hooks
      x-sdk-method-name: update
  /hooks/{id}/secrets:
    delete:
      description: 'Delete one or more existing secrets for a given hook. Accepts
        an array of secret names to delete. '
      operationId: delete_secrets
      parameters:
      - description: ID of the hook whose secrets to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Za-z0-9-]*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              description: Array of secret names to delete.
              items:
                type: string
              type: array
          application/x-www-form-urlencoded:
            schema:
              description: Array of secret names to delete.
              items:
                type: string
              type: array
      responses:
        "204":
          description: Hook secrets successfully deleted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: delete:hooks."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:hooks
      summary: Delete hook secrets
      tags:
      - hooks
      x-sdk-method-name: deleteSecrets
    get:
      description: "Retrieve a hook's secrets by the ID of the hook. \n"
      operationId: get_secrets
      parameters:
      - description: ID of the hook to retrieve secrets from.
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Za-z0-9-]*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                description: Hashmap of key-value pairs where the value must be a
                  string.
                type: object
          description: Hook secrets successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:hooks."
        "404":
          description: Hook not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:hooks
      summary: Get hook secrets
      tags:
      - hooks
      x-sdk-method-name: getSecrets
    patch:
      description: "Update one or more existing secrets for an existing hook. Accepts\
        \ an object of key-value pairs, where the key is the name of the existing\
        \ secret. \n"
      operationId: patch_secrets
      parameters:
      - description: ID of the hook whose secrets to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Za-z0-9-]*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              description: Hashmap of key-value pairs where the value must be a string.
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties: true
              description: Hashmap of key-value pairs where the value must be a string.
              type: object
      responses:
        "201":
          description: Hook secrets successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: create:hooks."
          x-description-1: This endpoint is disabled for your tenant.
        "404":
          description: Hook or secret not found.
        "409":
          description: Secret with the same name already exists.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:hooks
      summary: Update hook secrets
      tags:
      - hooks
      x-sdk-method-name: updateSecrets
    post:
      description: "Add one or more secrets to an existing hook. Accepts an object\
        \ of key-value pairs, where the key is the name of the secret. A hook can\
        \ have a maximum of 20 secrets. \n"
      operationId: post_secrets
      parameters:
      - description: The id of the hook to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^[A-Za-z0-9-]*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              description: Hashmap of key-value pairs where the value must be a string.
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties: true
              description: Hashmap of key-value pairs where the value must be a string.
              type: object
      responses:
        "201":
          description: Hook secrets successfully added.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: create:hooks."
          x-description-1: This endpoint is disabled for your tenant.
        "409":
          description: Secret with the same name already exists.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:hooks
      summary: Add hook secrets
      tags:
      - hooks
      x-sdk-method-name: addSecrets
  /jobs/users-exports:
    post:
      description: Export all users to a file via a long-running job.
      operationId: post_users-exports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_users_exports_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_users_exports_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
          description: Job created successfully.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
          x-description-1: The connection does not exist.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:users."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:users
      summary: Create export users job
      tags:
      - jobs
      x-sdk-method-name: exportUsers
  /jobs/users-imports:
    post:
      description: Import users from a <a href="https://manage.local.dev.auth0.com/docs/users/references/bulk-import-database-schema-examples">formatted
        file</a> into a connection via a long-running job.
      operationId: post_users-imports
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/post_users_imports_request'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
          description: Job successfully created.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
          x-description-1: Must provide 'users' file as multipart part.
          x-description-2: "Payload validation error: 'Invalid multipart payload format'."
          x-description-3: Users file must not be empty.
          x-description-4: Must provide 'connection_id' as multipart part.
          x-description-5: Connection must be a database connection.
          x-description-6: Connection must be enabled.
          x-description-7: "Payload validation error: 'String does not match pattern\
            \ ^con_[A-Za-z0-9]{16}$' on property connection_id."
          x-description-8: The connection does not exist.
          x-description-9: Custom Database Connections without import mode are not
            allowed.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: create:users."
        "413":
          description: "Payload content length greater than maximum allowed: 512000."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
        "500":
          description: Internal error.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:users
      summary: Create import users job
      tags:
      - jobs
      x-sdk-method-name: importUsers
  /jobs/verification-email:
    post:
      description: |-
        Send an email to the specified user that asks them to click a link to <a href="https://auth0.com/docs/email/custom#verification-email">verify their email address</a>.

        Note: You must have the `Status` toggle enabled for the verification email template for the email to be sent.
      operationId: post_verification-email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_verification_email_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_verification_email_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
          description: Job successfully created.
        "400":
          description: Invalid request parameters. The message will vary depending
            on the cause.
          x-description-1: Connection must be a database connection.
          x-description-2: User does not have an email address.
          x-description-3: connection does not exist.
          x-description-4: Connection must be enabled.
          x-description-5: The organization does not exist
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:users."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:users
      summary: Send an email address verification email
      tags:
      - jobs
      x-sdk-method-name: verifyEmail
  /jobs/{id}:
    get:
      description: Retrieves a job. Useful to check its status.
      operationId: get_jobs_by_id
      parameters:
      - description: ID of the job.
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^job_[A-Za-z0-9]{16}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
          description: Job retrieved successfully.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: create:users."
        "404":
          description: Job not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:users
        - read:users
      summary: Get a job
      tags:
      - jobs
      x-sdk-method-name: get
  /jobs/{id}/errors:
    get:
      description: Retrieve error details of a failed job.
      operationId: get_errors
      parameters:
      - description: ID of the job.
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^job_[A-Za-z0-9]{16}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_errors_200_response'
          description: Job successfully retrieved.
        "204":
          description: "The job was retrieved, but no errors were found."
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation
        "403":
          description: "Insufficient scope, expected any of: create:users"
        "404":
          description: The job does not exist
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:users
        - read:users
      summary: Get job error details
      tags:
      - jobs
      x-sdk-method-name: getErrors
  /keys/signing:
    get:
      description: Get all Application Signing Keys
      operationId: get_signing_keys
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_signing_keys_200_response_inner'
                type: array
          description: The signing keys were retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation
        "403":
          description: "Insufficient scope, expected any of: read:signing_keys"
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:signing_keys
      summary: Get all Application Signing Keys
      tags:
      - keys
      x-sdk-method-name: getAll
  /keys/signing/rotate:
    post:
      description: Rotate the Application Signing Key
      operationId: post_signing_keys
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_signing_keys_201_response'
          description: Signing key rotated successfully.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: Insufficient scope; expected create:signing_keys and update:signing_keys.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:signing_keys
        - update:signing_keys
      summary: Rotate the Application Signing Key
      tags:
      - keys
      x-sdk-method-name: rotate
  /keys/signing/{kid}:
    get:
      description: Get an Application Signing Key by its key id
      operationId: get_signing_key
      parameters:
      - description: Key id of the key to retrieve
        explode: false
        in: path
        name: kid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_signing_keys_200_response_inner'
          description: The signing keys were retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation
        "403":
          description: "Insufficient scope, expected any of: read:signing_keys"
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:signing_keys
      summary: Get an Application Signing Key by its key id
      tags:
      - keys
      x-sdk-method-name: get
  /keys/signing/{kid}/revoke:
    put:
      description: Revoke an Application Signing Key by its key id
      operationId: put_signing_keys
      parameters:
      - description: Key id of the key to revoke
        explode: false
        in: path
        name: kid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/put_signing_keys_200_response'
          description: Signing key revoked successfully.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:signing_keys."
        "404":
          description: Signing key not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:signing_keys
      summary: Revoke an Application Signing Key by its key id
      tags:
      - keys
      x-sdk-method-name: revoke
  /log-streams:
    get:
      description: "Retrieve details on <a href=\"https://auth0.com/docs/logs/streams\"\
        >log streams</a>.\n<h5>Sample Response</h5><pre><code>[{\n\t\"id\": \"string\"\
        ,\n\t\"name\": \"string\",\n\t\"type\": \"eventbridge\",\n\t\"status\": \"\
        active|paused|suspended\",\n\t\"sink\": {\n\t\t\"awsAccountId\": \"string\"\
        ,\n\t\t\"awsRegion\": \"string\",\n\t\t\"awsPartnerEventSource\": \"string\"\
        \n\t}\n}, {\n\t\"id\": \"string\",\n\t\"name\": \"string\",\n\t\"type\": \"\
        http\",\n\t\"status\": \"active|paused|suspended\",\n\t\"sink\": {\n\t\t\"\
        httpContentFormat\": \"JSONLINES|JSONARRAY\",\n\t\t\"httpContentType\": \"\
        string\",\n\t\t\"httpEndpoint\": \"string\",\n\t\t\"httpAuthorization\": \"\
        string\"\n\t}\n},\n{\n\t\"id\": \"string\",\n\t\"name\": \"string\",\n\t\"\
        type\": \"eventgrid\",\n\t\"status\": \"active|paused|suspended\",\n\t\"sink\"\
        : {\n\t\t\"azureSubscriptionId\": \"string\",\n\t\t\"azureResourceGroup\"\
        : \"string\",\n\t\t\"azureRegion\": \"string\",\n\t\t\"azurePartnerTopic\"\
        : \"string\"\n\t}\n},\n{\n\t\"id\": \"string\",\n\t\"name\": \"string\",\n\
        \t\"type\": \"splunk\",\n\t\"status\": \"active|paused|suspended\",\n\t\"\
        sink\": {\n\t\t\"splunkDomain\": \"string\",\n\t\t\"splunkToken\": \"string\"\
        ,\n\t\t\"splunkPort\": \"string\",\n\t\t\"splunkSecure\": \"boolean\"\n\t\
        }\n},\n{\n\t\"id\": \"string\",\n\t\"name\": \"string\",\n\t\"type\": \"sumo\"\
        ,\n\t\"status\": \"active|paused|suspended\",\n\t\"sink\": {\n\t\t\"sumoSourceAddress\"\
        : \"string\",\n\t}\n},\n{\n\t\"id\": \"string\",\n\t\"name\": \"string\",\n\
        \t\"type\": \"datadog\",\n\t\"status\": \"active|paused|suspended\",\n\t\"\
        sink\": {\n\t\t\"datadogRegion\": \"string\",\n\t\t\"datadogApiKey\": \"string\"\
        \n\t}\n}]</code></pre>\n"
      operationId: get_log-streams
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_log_streams_200_response_inner'
                type: array
          description: Returning log streams
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:log_streams."
          x-description-1: The account is not allowed to perform this operation.
        "404":
          description: The log stream does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:log_streams
      summary: Get log streams
      tags:
      - log-streams
      x-sdk-method-name: getAll
    post:
      description: "Create a log stream.\n<h5>Log Stream Types</h5> The <code>type</code>\
        \ of log stream being created determines the properties required in the <code>sink</code>\
        \ payload.\n<h5>HTTP Stream</h5> For an <code>http</code> Stream, the <code>sink</code>\
        \ properties are listed in the payload below\nRequest: <pre><code>{\n\t\"\
        name\": \"string\",\n\t\"type\": \"http\",\n\t\"sink\": {\n\t\t\"httpEndpoint\"\
        : \"string\",\n\t\t\"httpContentType\": \"string\",\n\t\t\"httpContentFormat\"\
        : \"JSONLINES|JSONARRAY\",\n\t\t\"httpAuthorization\": \"string\"\n\t}\n}</code></pre>\n\
        Response: <pre><code>{\n\t\"id\": \"string\",\n\t\"name\": \"string\",\n\t\
        \"type\": \"http\",\n\t\"status\": \"active\",\n\t\"sink\": {\n\t\t\"httpEndpoint\"\
        : \"string\",\n\t\t\"httpContentType\": \"string\",\n\t\t\"httpContentFormat\"\
        : \"JSONLINES|JSONARRAY\",\n\t\t\"httpAuthorization\": \"string\"\n\t}\n}</code></pre>\n\
        <h5>Amazon EventBridge Stream</h5> For an <code>eventbridge</code> Stream,\
        \ the <code>sink</code> properties are listed in the payload below\nRequest:\
        \ <pre><code>{\n\t\"name\": \"string\",\n\t\"type\": \"eventbridge\",\n\t\"\
        sink\": {\n\t\t\"awsRegion\": \"string\",\n\t\t\"awsAccountId\": \"string\"\
        \n\t}\n}</code></pre>\nThe response will include an additional field <code>awsPartnerEventSource</code>\
        \ in the <code>sink</code>: <pre><code>{\n\t\"id\": \"string\",\n\t\"name\"\
        : \"string\",\n\t\"type\": \"eventbridge\",\n\t\"status\": \"active\",\n\t\
        \"sink\": {\n\t\t\"awsAccountId\": \"string\",\n\t\t\"awsRegion\": \"string\"\
        ,\n\t\t\"awsPartnerEventSource\": \"string\"\n\t}\n}</code></pre>\n<h5>Azure\
        \ Event Grid Stream</h5> For an <code>Azure Event Grid</code> Stream, the\
        \ <code>sink</code> properties are listed in the payload below\nRequest: <pre><code>{\n\
        \t\"name\": \"string\",\n\t\"type\": \"eventgrid\",\n\t\"sink\": {\n\t\t\"\
        azureSubscriptionId\": \"string\",\n\t\t\"azureResourceGroup\": \"string\"\
        ,\n\t\t\"azureRegion\": \"string\"\n\t}\n}</code></pre>\nResponse: <pre><code>{\n\
        \t\"id\": \"string\",\n\t\"name\": \"string\",\n\t\"type\": \"http\",\n\t\"\
        status\": \"active\",\n\t\"sink\": {\n\t\t\"azureSubscriptionId\": \"string\"\
        ,\n\t\t\"azureResourceGroup\": \"string\",\n\t\t\"azureRegion\": \"string\"\
        ,\n\t\t\"azurePartnerTopic\": \"string\"\n\t}\n}</code></pre>\n<h5>Datadog\
        \ Stream</h5> For a <code>Datadog</code> Stream, the <code>sink</code> properties\
        \ are listed in the payload below\nRequest: <pre><code>{\n\t\"name\": \"string\"\
        ,\n\t\"type\": \"datadog\",\n\t\"sink\": {\n\t\t\"datadogRegion\": \"string\"\
        ,\n\t\t\"datadogApiKey\": \"string\"\n\t}\n}</code></pre>\nResponse: <pre><code>{\n\
        \t\"id\": \"string\",\n\t\"name\": \"string\",\n\t\"type\": \"datadog\",\n\
        \t\"status\": \"active\",\n\t\"sink\": {\n\t\t\"datadogRegion\": \"string\"\
        ,\n\t\t\"datadogApiKey\": \"string\"\n\t}\n}</code></pre>\n<h5>Splunk Stream</h5>\
        \ For a <code>Splunk</code> Stream, the <code>sink</code> properties are listed\
        \ in the payload below\nRequest: <pre><code>{\n\t\"name\": \"string\",\n\t\
        \"type\": \"splunk\",\n\t\"sink\": {\n\t\t\"splunkDomain\": \"string\",\n\t\
        \t\"splunkToken\": \"string\",\n\t\t\"splunkPort\": \"string\",\n\t\t\"splunkSecure\"\
        : \"boolean\"\n\t}\n}</code></pre>\nResponse: <pre><code>{\n\t\"id\": \"string\"\
        ,\n\t\"name\": \"string\",\n\t\"type\": \"splunk\",\n\t\"status\": \"active\"\
        ,\n\t\"sink\": {\n\t\t\"splunkDomain\": \"string\",\n\t\t\"splunkToken\":\
        \ \"string\",\n\t\t\"splunkPort\": \"string\",\n\t\t\"splunkSecure\": \"boolean\"\
        \n\t}\n}</code></pre>\n<h5>Sumo Logic Stream</h5> For a <code>Sumo Logic</code>\
        \ Stream, the <code>sink</code> properties are listed in the payload below\n\
        Request: <pre><code>{\n\t\"name\": \"string\",\n\t\"type\": \"sumo\",\n\t\"\
        sink\": {\n\t\t\"sumoSourceAddress\": \"string\",\n\t}\n}</code></pre>\nResponse:\
        \ <pre><code>{\n\t\"id\": \"string\",\n\t\"name\": \"string\",\n\t\"type\"\
        : \"sumo\",\n\t\"status\": \"active\",\n\t\"sink\": {\n\t\t\"sumoSourceAddress\"\
        : \"string\",\n\t}\n}</code></pre>\n"
      operationId: post_log-streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_log_streams_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_log_streams_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_log_streams_200_response_inner'
          description: Log stream created
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: create:log_streams."
          x-description-1: The account is not allowed to perform this operation.
        "409":
          description: You have reached the maximum number of log streams for your
            account.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:log_streams
      summary: Create a log stream
      tags:
      - log-streams
      x-sdk-method-name: create
  /log-streams/{id}:
    delete:
      description: |
        Delete a log stream.
      operationId: delete_log-streams_by_id
      parameters:
      - description: The id of the log stream to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The log stream was deleted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope, expected: delete:log_streams."
        "404":
          description: The log stream does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:log_streams
      summary: Delete log stream
      tags:
      - log-streams
      x-sdk-method-name: delete
    get:
      description: "Retrieve a log stream configuration and status.\n<h5>Sample responses</h5><h5>Amazon\
        \ EventBridge Log Stream</h5><pre><code>{\n\t\"id\": \"string\",\n\t\"name\"\
        : \"string\",\n\t\"type\": \"eventbridge\",\n\t\"status\": \"active|paused|suspended\"\
        ,\n\t\"sink\": {\n\t\t\"awsAccountId\": \"string\",\n\t\t\"awsRegion\": \"\
        string\",\n\t\t\"awsPartnerEventSource\": \"string\"\n\t}\n}</code></pre>\
        \ <h5>HTTP Log Stream</h5><pre><code>{\n\t\"id\": \"string\",\n\t\"name\"\
        : \"string\",\n\t\"type\": \"http\",\n\t\"status\": \"active|paused|suspended\"\
        ,\n\t\"sink\": {\n\t\t\"httpContentFormat\": \"JSONLINES|JSONARRAY\",\n\t\t\
        \"httpContentType\": \"string\",\n\t\t\"httpEndpoint\": \"string\",\n\t\t\"\
        httpAuthorization\": \"string\"\n\t}\n}</code></pre> <h5>Datadog Log Stream</h5><pre><code>{\n\
        \t\"id\": \"string\",\n\t\"name\": \"string\",\n\t\"type\": \"datadog\",\n\
        \t\"status\": \"active|paused|suspended\",\n\t\"sink\": {\n\t\t\"datadogRegion\"\
        : \"string\",\n\t\t\"datadogApiKey\": \"string\"\n\t}\n}</code></pre> <h5>Splunk\
        \ Log Stream</h5><pre><code>{\n\t\"id\": \"string\",\n\t\"name\": \"string\"\
        ,\n\t\"type\": \"splunk\",\n\t\"status\": \"active|paused|suspended\",\n\t\
        \"sink\": {\n\t\t\"splunkDomain\": \"string\",\n\t\t\"splunkToken\": \"string\"\
        ,\n\t\t\"splunkPort\": \"string\",\n\t\t\"splunkSecure\": \"boolean\"\n\t\
        }\n}</code></pre> <h5>Sumo Logic Log Stream</h5><pre><code>{\n\t\"id\": \"\
        string\",\n\t\"name\": \"string\",\n\t\"type\": \"sumo\",\n\t\"status\": \"\
        active|paused|suspended\",\n\t\"sink\": {\n\t\t\"sumoSourceAddress\": \"string\"\
        ,\n\t}\n}</code></pre> <h5>Status</h5> The <code>status</code> of a log stream\
        \ maybe any of the following:\n1. <code>active</code> - Stream is currently\
        \ enabled.\n2. <code>paused</code> - Stream is currently user disabled and\
        \ will not attempt log delivery.\n3. <code>suspended</code> - Stream is currently\
        \ disabled because of errors and will not attempt log delivery.\n"
      operationId: get_log-streams_by_id
      parameters:
      - description: The id of the log stream to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_log_streams_200_response_inner'
          description: Returning log stream.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:log_streams."
          x-description-1: The account is not allowed to perform this operation.
        "404":
          description: The log stream does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:log_streams
      summary: Get log stream by ID
      tags:
      - log-streams
      x-sdk-method-name: get
    patch:
      description: "Update a log stream.\n<h4>Examples of how to use the PATCH endpoint.</h4>\
        \ The following fields may be updated in a PATCH operation: <ul><li>name</li><li>status</li><li>sink</li></ul>\
        \ Note: For log streams of type <code>eventbridge</code> and <code>eventgrid</code>,\
        \ updating the <code>sink</code> is not permitted.\n<h5>Update the status\
        \ of a log stream</h5><pre><code>{\n\t\"status\": \"active|paused\"\n}</code></pre>\n\
        <h5>Update the name of a log stream</h5><pre><code>{\n\t\"name\": \"string\"\
        \n}</code></pre>\n<h5>Update the sink properties of a stream of type <code>http</code></h5><pre><code>{\n\
        \  \"sink\": {\n    \"httpEndpoint\": \"string\",\n    \"httpContentType\"\
        : \"string\",\n    \"httpContentFormat\": \"JSONARRAY|JSONLINES\",\n    \"\
        httpAuthorization\": \"string\"\n  }\n}</code></pre>\n<h5>Update the sink\
        \ properties of a stream of type <code>datadog</code></h5><pre><code>{\n \
        \ \"sink\": {\n\t\t\"datadogRegion\": \"string\",\n\t\t\"datadogApiKey\":\
        \ \"string\"\n  }\n}</code></pre>\n<h5>Update the sink properties of a stream\
        \ of type <code>splunk</code></h5><pre><code>{\n  \"sink\": {\n    \"splunkDomain\"\
        : \"string\",\n    \"splunkToken\": \"string\",\n    \"splunkPort\": \"string\"\
        ,\n    \"splunkSecure\": \"boolean\"\n  }\n}</code></pre>\n<h5>Update the\
        \ sink properties of a stream of type <code>sumo</code></h5><pre><code>{\n\
        \  \"sink\": {\n    \"sumoSourceAddress\": \"string\"\n  }\n}</code></pre> "
      operationId: patch_log-streams_by_id
      parameters:
      - description: The id of the log stream to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patch_log_streams_by_id_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/patch_log_streams_by_id_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_log_streams_200_response_inner'
          description: Log stream updated
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:log_streams."
          x-description-1: The account is not allowed to perform this operation.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:log_streams
      summary: Update a log stream
      tags:
      - log-streams
      x-sdk-method-name: update
  /logs:
    get:
      description: |
        Retrieve log entries that match the specified search criteria (or all log entries if no criteria specified).

        Set custom search criteria using the <code>q</code> parameter, or search from a specific log ID (<i>"search from checkpoint"</i>).

        For more information on all possible event types, their respective acronyms, and descriptions, see <a href="https://auth0.com/docs/logs/log-event-type-codes">Log Event Type Codes</a>.

        <h5>To set custom search criteria, use the following parameters:</h5>

        <ul>
            <li><b>q:</b> Search Criteria using <a href="https://auth0.com/docs/logs/log-search-query-syntax">Query String Syntax</a></li>
            <li><b>page:</b> Page index of the results to return. First page is 0.</li>
            <li><b>per_page:</b> Number of results per page.</li>
            <li><b>sort:</b> Field to use for sorting appended with `:1` for ascending and `:-1` for descending. e.g. `date:-1`</li>
            <li><b>fields:</b> Comma-separated list of fields to include or exclude (depending on include_fields) from the result, empty to retrieve all fields.</li>
            <li><b>include_fields:</b> Whether specified fields are to be included (true) or excluded (false).</li>
            <li><b>include_totals:</b> Return results inside an object that contains the total result count (true) or as a direct array of results (false, default). <b>Deprecated:</b> this field is deprecated and should be removed from use. See <a href="https://auth0.com/docs/product-lifecycle/deprecations-and-migrations/migrate-to-tenant-log-search-v3#pagination">Search Engine V3 Breaking Changes</a></li>
        </ul>

        For more information on the list of fields that can be used in <code>fields</code> and <code>sort</code>, see <a href="https://auth0.com/docs/logs/log-search-query-syntax#searchable-fields">Searchable Fields</a>.

        Auth0 <a href="https://auth0.com/docs/logs/retrieve-log-events-using-mgmt-api#limitations">limits the number of logs</a> you can return by search criteria to 100 logs per request. Furthermore, you may paginate only through 1,000 search results. If you exceed this threshold, please redefine your search or use the <a href="https://auth0.com/docs/logs/retrieve-log-events-using-mgmt-api#retrieve-logs-by-checkpoint">get logs by checkpoint method</a>.

        <h5>To search from a checkpoint log ID, use the following parameters:</h5>
        <ul>
            <li><b>from:</b> Log Event ID from which to start retrieving logs. You can limit the number of logs returned using the <code>take</code> parameter. If you use <code>from</code> at the same time as <code>q</code>, <code>from</code> takes precedence and <code>q</code> is ignored.</li>
            <li><b>take:</b> Number of entries to retrieve when using the <code>from</code> parameter.</li>
        </ul>

        <strong>Important:</strong> When fetching logs from a checkpoint log ID, any parameter other than <code>from</code> and <code>take</code> will be ignored, and date ordering is not guaranteed.
      operationId: get_logs
      parameters:
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: " Number of results per page. Paging is disabled if parameter\
          \ not sent. Default: <code>50</code>. Max value: <code>100</code>"
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: Field to use for sorting appended with <code>:1</code>  for ascending
          and <code>:-1</code> for descending. e.g. <code>date:-1</code>
        explode: true
        in: query
        name: sort
        required: false
        schema:
          pattern: "^(([a-zA-Z0-9_\\\\.]+))\\:(1|-1)$"
          type: string
        style: form
      - description: Comma-separated list of fields to include or exclude (based on
          value provided for <code>include_fields</code>) in the result. Leave empty
          to retrieve all fields.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: Whether specified fields are to be included (<code>true</code>)
          or excluded (<code>false</code>)
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      - description: Return results as an array when false (default). Return results
          inside an object that also contains a total result count when true.
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      - description: Log Event Id from which to start selection from.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: "Number of entries to retrieve when using the <code>from</code>\
          \ parameter. Default <code>50</code>, max <code>100</code>"
        explode: true
        in: query
        name: take
        required: false
        schema:
          type: integer
        style: form
      - description: Query in <a target='_new' href ='http://www.lucenetutorial.com/lucene-query-syntax.html'>Lucene
          query string syntax</a>.
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_logs_200_response'
          description: Logs successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:logs, read:logs_users."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:logs
        - read:logs_users
      summary: Search log events
      tags:
      - logs
      x-sdk-method-name: getAll
  /logs/{id}:
    get:
      description: Retrieve an individual log event.
      operationId: get_logs_by_id
      parameters:
      - description: log_id of the log to retrieve.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/log'
          description: Log successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:logs, read:logs_users."
        "404":
          description: Log not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:logs
        - read:logs_users
      summary: Get a log event by id
      tags:
      - logs
      x-sdk-method-name: get
  /organizations:
    get:
      description: |
        List available organizations. This endpoint supports two types of pagination:
        - Offset pagination
        - Checkpoint pagination

        Checkpoint pagination must be used if you need to retrieve more than 1000 organizations.

        <h2>Checkpoint Pagination</h2>

        To search by checkpoint, use the following parameters:
        - from: Optional id from which to start selection.
        - take: The total amount of entries to retrieve when using the from parameter. Defaults to 50.

        Note: The first time you call this endpoint using Checkpoint Pagination, you should omit the <code>from</code> parameter. If there are more results, a <code>next</code> value will be included in the response. You can use this for subsequent API calls. When <code>next</code> is no longer included in the response, this indicates there are no more pages remaining.
      operationId: get_organizations
      parameters:
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          maximum: 1000
          minimum: 0
          type: integer
        style: form
      - description: Number of results per page. Defaults to 50.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional Id from which to start selection.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: Number of results per page. Defaults to 50.
        explode: true
        in: query
        name: take
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "Field to sort by. Use <code>field:order</code> where order is\
          \ <code>1</code> for ascending and <code>-1</code> for descending. e.g.\
          \ <code>created_at:1</code>. We currently support sorting by the following\
          \ fields: <code>name</code>, <code>display_name</code> and <code>created_at</code>."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          pattern: ^((display_name)|(created_at)|(name))\:(1|-1)$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organizations_200_response'
          description: Organizations successfully retrieved.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
          x-description-1: Invalid query string paging options. The message will vary
            depending on the cause
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: read:organizations."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:organizations
        - read:organizations_summary
      summary: Get organizations
      tags:
      - organizations
      x-sdk-method-name: getAll
    post:
      description: |
        Create an organization
      operationId: post_organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_organizations_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_organizations_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_organizations_201_response'
          description: Organization successfully created.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: create:organizations."
        "409":
          description: An organization with this name already exists.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:organizations
        - create:organization_connections
      summary: Create an Organization
      tags:
      - organizations
      x-sdk-method-name: create
  /organizations/name/{name}:
    get:
      description: |
        Get a specific organization by name
      operationId: get_name_by_name
      parameters:
      - description: name of the organization to retrieve.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organizations_200_response_oneOf_inner'
          description: Organization successfully retrieved.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: read:organizations."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:organizations
      summary: Get organization by name
      tags:
      - organizations
      x-sdk-method-name: getByName
  /organizations/{id}:
    delete:
      description: |
        Delete a specific organization
      operationId: delete_organizations_by_id
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The organization was deleted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: delete:organizations."
        "404":
          description: The organization does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:organizations
      summary: Delete organization
      tags:
      - organizations
      x-sdk-method-name: delete
    get:
      description: |
        Get a specific organization
      operationId: get_organizations_by_id
      parameters:
      - description: ID of the organization to retrieve.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organizations_200_response_oneOf_inner'
          description: Organization successfully retrieved.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: read:organizations."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:organizations
        - read:organizations_summary
      summary: Get organization
      tags:
      - organizations
      x-sdk-method-name: get
    patch:
      description: |
        Modify an organization
      operationId: patch_organizations_by_id
      parameters:
      - description: ID of the organization to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patch_organizations_by_id_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/patch_organizations_by_id_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organizations_200_response_oneOf_inner'
          description: Organization successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: update:organizations."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:organizations
      summary: Modify an Organization
      tags:
      - organizations
      x-sdk-method-name: update
  /organizations/{id}/enabled_connections:
    get:
      operationId: get_enabled_connections
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of results per page. Defaults to 50.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_enabled_connections_200_response'
          description: Connections successfully retrieved.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: read:organization_connections."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:organization_connections
      summary: Get connections enabled for an organization
      tags:
      - organizations
      x-sdk-method-name: getEnabledConnections
    post:
      operationId: post_enabled_connections
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_enabled_connections_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_enabled_connections_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_enabled_connections_200_response_oneOf_inner'
          description: Organization connection successfully added.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: create:organization_connections."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:organization_connections
      summary: Add connections to an organization
      tags:
      - organizations
      x-sdk-method-name: addEnabledConnection
  /organizations/{id}/enabled_connections/{connectionId}:
    delete:
      operationId: delete_enabled_connections_by_connectionId
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Connection identifier
        explode: false
        in: path
        name: connectionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Connection successfully removed from organization.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: delete:organization_connections."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:organization_connections
      summary: Delete connections from an organization
      tags:
      - organizations
      x-sdk-method-name: deleteEnabledConnection
    get:
      operationId: get_enabled_connections_by_connectionId
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Connection identifier
        explode: false
        in: path
        name: connectionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_enabled_connections_200_response_oneOf_inner'
          description: Connection successfully retrieved.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: read:organization_connections."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:organization_connections
      summary: Get an enabled connection for an organization
      tags:
      - organizations
      x-sdk-method-name: getEnabledConnection
    patch:
      description: |
        Modify an enabled_connection belonging to an Organization.
      operationId: patch_enabled_connections_by_connectionId
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Connection identifier
        explode: false
        in: path
        name: connectionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patch_enabled_connections_by_connectionId_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/patch_enabled_connections_by_connectionId_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_enabled_connections_200_response_oneOf_inner'
          description: Organization connection successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: update:organization_connections."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:organization_connections
      summary: Modify an Organizations Connection
      tags:
      - organizations
      x-sdk-method-name: updateEnabledConnection
  /organizations/{id}/invitations:
    get:
      operationId: get_invitations
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of results per page. Defaults to 50.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "When true, return results inside an object that also contains\
          \ the start and limit.  When false (default), a direct array of results\
          \ is returned.  We do not yet support returning the total invitations count."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      - description: Comma-separated list of fields to include or exclude (based on
          value provided for include_fields) in the result. Leave empty to retrieve
          all fields.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          pattern: "^((app_metadata)|(user_metadata)|(client_id)|(connection_id)|(created_at)|(expires_at)|(id)|(invitation_url)|(invitee)|(inviter)|(organization_id)|(roles))(,((app_metadata)|(user_metadata)|(client_id)|(connection_id)|(created_at)|(expires_at)|(id)|(invitation_url)|(invitee)|(inviter)|(organization_id)|(roles)))*$"
          type: string
        style: form
      - description: Whether specified fields are to be included (true) or excluded
          (false). Defaults to true.
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      - description: Field to sort by. Use field:order where order is 1 for ascending
          and -1 for descending Defaults to created_at:-1.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          pattern: ^((created_at))\:(1|-1)$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_invitations_200_response'
          description: Invitations successfully retrieved.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
          x-description-1: Requesting page exceeds the allowed maximum of 1000 records
        "401":
          description: Client is not global.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Invalid token.
        "403":
          description: "Insufficient scope; expected any of: read:organization_invitations."
        "404":
          description: No organization found by that id.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:organization_invitations
      summary: Get invitations to organization
      tags:
      - organizations
      x-sdk-method-name: getInvitations
    post:
      operationId: post_invitations
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_invitations_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_invitations_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_invitations_200_response_oneOf_inner'
          description: Invitation successfully created.
        "400":
          description: "A default login route is required to generate the invitation\
            \ url. For more information, see https://manage.local.dev.auth0.com/docs/universal-login/configure-default-login-routes"
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
          x-description-2: "One or more of the specified roles do not exist: rol_0000000000000001,\
            \ rol_0000000000000002"
          x-description-3: Passwordless connections are not supported.
          x-description-4: The specified client_id does not allow organizations.
          x-description-5: The specified client_id does not exist.
          x-description-6: The specified connection (con_0000000000000001) is not
            enabled for the organization
          x-description-7: The specified connection does not exist.
        "401":
          description: Client is not global.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Invalid token.
        "403":
          description: "Insufficient scope; expected any of: create:organization_invitations."
        "404":
          description: No organization found by that id.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:organization_invitations
      summary: Create invitations to organization
      tags:
      - organizations
      x-sdk-method-name: createInvitation
  /organizations/{id}/invitations/{invitation_id}:
    delete:
      operationId: delete_invitations_by_invitation_id
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the user invitation.
        explode: false
        in: path
        name: invitation_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Invitation successfully deleted.
        "401":
          description: Client is not global.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Invalid token.
        "403":
          description: "Insufficient scope; expected any of: delete:organization_invitations."
        "404":
          description: No organization found by that id.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:organization_invitations
      summary: Delete an invitation to organization
      tags:
      - organizations
      x-sdk-method-name: deleteInvitation
    get:
      operationId: get_invitations_by_invitation_id
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the user invitation.
        explode: false
        in: path
        name: invitation_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of fields to include or exclude (based on
          value provided for include_fields) in the result. Leave empty to retrieve
          all fields.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          pattern: "^((app_metadata)|(user_metadata)|(client_id)|(connection_id)|(created_at)|(expires_at)|(id)|(invitation_url)|(invitee)|(inviter)|(organization_id)|(roles))(,((app_metadata)|(user_metadata)|(client_id)|(connection_id)|(created_at)|(expires_at)|(id)|(invitation_url)|(invitee)|(inviter)|(organization_id)|(roles)))*$"
          type: string
        style: form
      - description: Whether specified fields are to be included (true) or excluded
          (false). Defaults to true.
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_invitations_200_response_oneOf_inner'
          description: Invitation successfully retrieved.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Client is not global.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Invalid token.
        "403":
          description: "Insufficient scope; expected any of: read:organization_invitations."
        "404":
          description: No organization found by that id.
          x-description-1: The invitation does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:organization_invitations
      summary: Get an invitation to organization
      tags:
      - organizations
      x-sdk-method-name: getInvitation
  /organizations/{id}/members:
    delete:
      operationId: delete_members
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/delete_members_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/delete_members_request'
      responses:
        "204":
          description: Users successfully removed from organization.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: delete:organization_members."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:organization_members
      summary: Delete members from an organization
      tags:
      - organizations
      x-sdk-method-name: deleteMembers
    get:
      description: "List organization members. \n\n<ul>\n  <li>\n    Use the <code>fields</code>\
        \ parameter to optionally define the specific member details retrieved. If\n\
        \    <code>fields</code> is left blank, all fields (except roles) are returned.\n\
        \  </li>\n  <li>\n    Member roles are not sent by default. Use <code>fields=roles</code>\
        \ to retrieve the roles assigned to each listed\n    member. To use this parameter,\
        \ you must include the <code>read:organization_member_roles</code> scope in\
        \ the token.\n  </li>\n</ul>\n\nThis endpoint supports two types of pagination:\n\
        \n- Offset pagination \n- Checkpoint pagination\n\nCheckpoint pagination must\
        \ be used if you need to retrieve more than 1000\norganization members.\n\n\
        <h2>Checkpoint Pagination</h2>\n\nTo search by checkpoint, use the following\
        \ parameters: - from: Optional id from which to start selection. - take: The\n\
        total amount of entries to retrieve when using the from parameter. Defaults\
        \ to 50. Note: The first time you call this\nendpoint using Checkpoint Pagination,\
        \ you should omit the <code>from</code> parameter. If there are more results,\
        \ a\n<code>next</code> value will be included in the response. You can use\
        \ this for subsequent API calls. When\n<code>next</code> is no longer included\
        \ in the response, this indicates there are no more pages remaining.\n"
      operationId: get_members
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          maximum: 1000
          minimum: 0
          type: integer
        style: form
      - description: Number of results per page. Defaults to 50.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional Id from which to start selection.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: Number of results per page. Defaults to 50.
        explode: true
        in: query
        name: take
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Comma-separated list of fields to include or exclude (based on
          value provided for include_fields) in the result. Leave empty to retrieve
          all fields.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          pattern: "^((user_id)|(email)|(picture)|(name)|(roles))(,((user_id)|(email)|(picture)|(name)|(roles)))*$"
          type: string
        style: form
      - description: Whether specified fields are to be included (true) or excluded
          (false).
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_members_200_response'
          description: Members successfully retrieved.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
          x-description-1: Invalid query string paging options. The message will vary
            depending on the cause
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: read:organization_members,\
            \ read:organization_member_roles."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:organization_members
      summary: Get members who belong to an organization
      tags:
      - organizations
      x-sdk-method-name: getMembers
    post:
      operationId: post_members
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_members_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_members_request'
      responses:
        "204":
          description: Members successfully added to organization.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: create:organization_members."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:organization_members
      summary: Add members to an organization
      tags:
      - organizations
      x-sdk-method-name: addMembers
  /organizations/{id}/members/{user_id}/roles:
    delete:
      operationId: delete_organization_member_roles
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: User ID of the organization member to remove roles from.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/delete_organization_member_roles_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/delete_organization_member_roles_request'
      responses:
        "204":
          description: Roles successfully removed from organization member.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: delete:organization_member_roles."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:organization_member_roles
      summary: Remove one or more roles from a given user in the context of the provided
        organization
      tags:
      - organizations
      x-sdk-method-name: deleteMemberRoles
    get:
      operationId: get_organization_member_roles
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the user to associate roles with.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          maximum: 1000
          minimum: 0
          type: integer
        style: form
      - description: Number of results per page. Defaults to 50.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organization_member_roles_200_response'
          description: Roles successfully retrieved.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
          x-description-1: Invalid query string paging options. The message will vary
            depending on the cause
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: read:organization_member_roles."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:organization_member_roles
      summary: Get the roles assigned to an organization member
      tags:
      - organizations
      x-sdk-method-name: getMemberRoles
    post:
      operationId: post_organization_member_roles
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of the user to associate roles with.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_organization_member_roles_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_organization_member_roles_request'
      responses:
        "204":
          description: Roles successfully associated with user.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: create:organization_member_roles."
        "409":
          description: No more roles can be assigned to this organization member.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:organization_member_roles
      summary: Assign one or more roles to a given user that will be applied in the
        context of the provided organization
      tags:
      - organizations
      x-sdk-method-name: addMemberRoles
  /prompts:
    get:
      description: Retrieve details of the Universal Login configuration of your tenant.
        This includes the <a href="https://auth0.com/docs/authenticate/login/auth0-universal-login/identifier-first">Identifier
        First Authentication</a> and <a href="https://auth0.com/docs/secure/multi-factor-authentication/fido-authentication-with-webauthn/configure-webauthn-device-biometrics-for-mfa">WebAuthn
        with Device Biometrics for MFA</a> features.
      operationId: get_prompts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/promptsSettings'
          description: Prompt settings successfully retrieved.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: The specified client cannot perform the requested operation.
          x-description-1: "Insufficient scope; expected any of: read:prompts."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:prompts
      summary: Get prompt settings
      tags:
      - prompts
      x-sdk-method-name: get
    patch:
      description: Update the Universal Login configuration of your tenant. This includes
        the <a href="https://auth0.com/docs/authenticate/login/auth0-universal-login/identifier-first">Identifier
        First Authentication</a> and <a href="https://auth0.com/docs/secure/multi-factor-authentication/fido-authentication-with-webauthn/configure-webauthn-device-biometrics-for-mfa">WebAuthn
        with Device Biometrics for MFA</a> features.
      operationId: patch_prompts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/promptsSettingsUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/promptsSettingsUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/promptsSettings'
          description: Prompts settings successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:prompts."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:prompts
      summary: Update prompt settings
      tags:
      - prompts
      x-sdk-method-name: update
  /prompts/{prompt}/custom-text/{language}:
    get:
      description: Retrieve custom text for a specific prompt and language.
      operationId: get_custom-text_by_language
      parameters:
      - description: Name of the prompt.
        explode: false
        in: path
        name: prompt
        required: true
        schema:
          $ref: '#/components/schemas/get_custom_text_by_language_prompt_parameter'
        style: simple
      - description: Language to update.
        explode: false
        in: path
        name: language
        required: true
        schema:
          $ref: '#/components/schemas/get_custom_text_by_language_language_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                description: An object containing custom dictionaries for a group
                  of screens.
                type: object
          description: Prompt dictionaries successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:prompts."
        "404":
          description: The prompt does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:prompts
      summary: Get custom text for a prompt
      tags:
      - prompts
      x-sdk-method-name: getCustomTextByLanguage
    put:
      description: Set custom text for a specific prompt. Existing texts will be overwritten.
      operationId: put_custom-text_by_language
      parameters:
      - description: Name of the prompt.
        explode: false
        in: path
        name: prompt
        required: true
        schema:
          $ref: '#/components/schemas/get_custom_text_by_language_prompt_parameter'
        style: simple
      - description: Language to update.
        explode: false
        in: path
        name: language
        required: true
        schema:
          $ref: '#/components/schemas/get_custom_text_by_language_language_parameter'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              description: An object containing custom dictionaries for a group of
                screens.
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties: true
              description: An object containing custom dictionaries for a group of
                screens.
              type: object
      responses:
        "200":
          description: Prompt dictionaries successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:prompts."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:prompts
      summary: Set custom text for a specific prompt
      tags:
      - prompts
      x-sdk-method-name: updateCustomTextByLanguage
  /resource-servers:
    get:
      description: 'Retrieve <a href="https://auth0.com/docs/apis">APIs</a> (also
        known as resource servers) that you can consume from your authorized applications. '
      operationId: get_resource-servers
      parameters:
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of results per page. Paging is disabled if parameter not
          sent.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      - description: Whether specified fields are to be included (true) or excluded
          (false).
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_resource_servers_200_response'
          description: Resource servers successfully retrieved.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope, expected any of: read:resource_servers."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:resource_servers
      summary: Get resource servers
      tags:
      - resource-servers
      x-sdk-method-name: getAll
    post:
      description: Create a new API (also known as a resource server).
      operationId: post_resource-servers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resourceServerCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/resourceServerCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceServer'
          description: Resource server successfully created.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
          x-description-1: The selected identifier is reserved.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: create:resource_servers."
          x-description-1: You reached the limit of entities of this type for this
            tenant.
        "409":
          description: A resource server with the same identifier already exists.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:resource_servers
      summary: Create a resource server
      tags:
      - resource-servers
      x-sdk-method-name: create
  /prompts/{prompt}/partials:
    get:
      description: Get template partials for a prompt - In Early Access
      operationId: get_partials
      parameters:
      - description: Name of the prompt.
        explode: false
        in: path
        name: prompt
        required: true
        schema:
          $ref: '#/components/schemas/get_partials_prompt_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                description: An object containing template partials for a group of
                  screens.
                type: object
          description: Prompt partials successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:prompts."
          x-description-1: Permission Denied. This feature is not available on this
            plan.
        "404":
          description: The prompt does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:prompts
      summary: Get partials for a prompt
      tags:
      - prompts
      x-sdk-method-name: getPartials
    put:
      description: Set template partials for a prompt - In Early Access
      operationId: put_partials
      parameters:
      - description: Name of the prompt.
        explode: false
        in: path
        name: prompt
        required: true
        schema:
          $ref: '#/components/schemas/get_partials_prompt_parameter'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              description: An object containing template partials for a group of screens.
              type: object
          application/x-www-form-urlencoded:
            schema:
              additionalProperties: true
              description: An object containing template partials for a group of screens.
              type: object
      responses:
        "200":
          description: Template partials successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:prompts."
          x-description-1: Permission Denied. This feature is not available on this
            plan.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:prompts
      summary: Set partials for a prompt
      tags:
      - prompts
      x-sdk-method-name: updatePartials
  /refresh-tokens/{id}:
    delete:
      description: Delete a refresh token by its ID.
      operationId: delete_refresh_token
      parameters:
      - description: ID of the refresh token to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Refresh token deletion request accepted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: delete:refresh_tokens"
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:refresh_tokens
      summary: Delete a refresh tokens
      tags:
      - refresh-tokens
      x-sdk-method-name: delete
    get:
      description: Retrieve refresh token information.
      operationId: get_refresh_token
      parameters:
      - description: ID refresh token to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_refresh_token_200_response'
          description: The refresh token was retrieved
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation
        "403":
          description: "Insufficient scope, expected: read:refresh_tokens"
        "404":
          description: The refresh token does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:refresh_tokens
      summary: Get a refresh token
      tags:
      - refresh-tokens
      x-sdk-method-name: get
  /resource-servers/{id}:
    delete:
      description: Delete an existing API (also known as a resource server).
      operationId: delete_resource-servers_by_id
      parameters:
      - description: ID or the audience of the resource server to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Resource server successfully deleted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: System resource servers cannot be deleted.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: delete:resource_servers."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:resource_servers
      summary: Delete a resource server
      tags:
      - resource-servers
      x-sdk-method-name: delete
    get:
      description: Retrieve an <a href="https://auth0.com/docs/apis">API</a> (also
        known as resource server).
      operationId: get_resource-servers_by_id
      parameters:
      - description: ID or audience of the resource server to retrieve.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Whether specified fields are to be included (true) or excluded
          (false).
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceServer'
          description: Resource server successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:resource_servers."
          x-description-1: Some fields cannot be read with the permissions granted
            by the bearer token scopes. The message will vary depending on the fields
            and the scopes.
        "404":
          description: Resource server not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:resource_servers
      summary: Get a resource server
      tags:
      - resource-servers
      x-sdk-method-name: get
    patch:
      description: Update an existing API (also known as a resource server).
      operationId: patch_resource-servers_by_id
      parameters:
      - description: ID or audience of the resource server to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resourceServerUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/resourceServerUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceServer'
          description: Resource server successfully created.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceServer'
          description: Resource server successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
          x-description-1: System resource servers cannot be patched.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:resource_servers."
        "409":
          description: A resource server with the same identifier already exists.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:resource_servers
      summary: Update a resource server
      tags:
      - resource-servers
      x-sdk-method-name: update
  /roles:
    get:
      description: |
        Retrieve filtered list of roles that can be assigned to users.
      operationId: get_roles
      parameters:
      - description: Number of results per page. Defaults to 50.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter on name (case-insensitive).
        explode: true
        in: query
        name: name_filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organization_member_roles_200_response'
          description: Roles successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: read:roles."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:roles
      summary: Get roles
      tags:
      - roles
      x-sdk-method-name: getAll
    post:
      description: |
        Create a new role.
      operationId: post_roles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/roleCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/roleCreate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organization_member_roles_200_response_oneOf_inner'
          description: Role successfully created.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: create:roles."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:roles
      summary: Create a role
      tags:
      - roles
      x-sdk-method-name: create
  /roles/{id}:
    delete:
      description: |
        Delete a role.
      operationId: delete_roles_by_id
      parameters:
      - description: ID of the role to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Role successfully deleted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: delete:roles."
        "404":
          description: Role not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:roles
      summary: Delete a role
      tags:
      - roles
      x-sdk-method-name: delete
    get:
      description: |
        Retrieve a role.
      operationId: get_roles_by_id
      parameters:
      - description: ID of the role to retrieve.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organization_member_roles_200_response_oneOf_inner'
          description: Role successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: read:roles."
        "404":
          description: Role not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:roles
      summary: Get a role
      tags:
      - roles
      x-sdk-method-name: get
    patch:
      description: |
        Update a role.
      operationId: patch_roles_by_id
      parameters:
      - description: ID of the role to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/roleUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/roleUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organization_member_roles_200_response_oneOf_inner'
          description: Role successfully updated.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: update:roles."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:roles
      summary: Update a role
      tags:
      - roles
      x-sdk-method-name: update
  /roles/{id}/permissions:
    delete:
      description: |
        Remove permissions associated with a role.
      operationId: delete_role_permission_assignment
      parameters:
      - description: ID of the role to remove permissions from.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_role_permission_assignment_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_role_permission_assignment_request'
      responses:
        "200":
          description: Role permissions successfully updated.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: update:roles."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:roles
      summary: Remove permissions from a role
      tags:
      - roles
      x-sdk-method-name: deletePermissions
    get:
      description: |
        Retrieve list of permissions granted by a role.
      operationId: get_role_permission
      parameters:
      - description: ID of the role to list granted permissions.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Number of results per page. Defaults to 50.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_role_permission_200_response'
          description: Role permissions successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: read:roles."
        "404":
          description: Role not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:roles
      summary: Get permissions granted by role
      tags:
      - roles
      x-sdk-method-name: getPermissions
    post:
      description: |
        Associate permissions with a role.
      operationId: post_role_permission_assignment
      parameters:
      - description: ID of the role to add permissions to.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_role_permission_assignment_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_role_permission_assignment_request'
      responses:
        "201":
          description: Role permissions updated.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: update:roles."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:roles
      summary: Associate permissions with a role
      tags:
      - roles
      x-sdk-method-name: addPermissions
  /roles/{id}/users:
    get:
      description: |
        Retrieve users associated with a role. This endpoint supports two types of pagination:
        - Offset pagination
        - Checkpoint pagination

        Checkpoint pagination must be used if you need to retrieve more than 1000 users for a given role.

        <h2>Checkpoint Pagination</h2>

        To search by checkpoint, use the following parameters:
        - from: Optional id from which to start selection.
        - take: The total amount of entries to retrieve when using the from parameter. Defaults to 50.

        Note: The first time you call this endpoint using Checkpoint Pagination, you should omit the <code>from</code> parameter. If there are more results, a <code>next</code> value will be included in the response. You can use this for subsequent API calls. When <code>next</code> is no longer included in the response, this indicates there are no more pages remaining.
      operationId: get_role_user
      parameters:
      - description: ID of the role to retrieve a list of users associated with.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Number of results per page. Defaults to 50.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional Id from which to start selection.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: Number of results per page. Defaults to 50.
        explode: true
        in: query
        name: take
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_role_user_200_response'
          description: Role users successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected all of: read:users, read:roles."
        "404":
          description: Role not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:users
        - read:roles
        - read:role_members
      summary: Get a role's users
      tags:
      - roles
      x-sdk-method-name: getUsers
    post:
      description: Assign users to a role.
      operationId: post_role_users
      parameters:
      - description: ID of the role to assign users to.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_role_users_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_role_users_request'
      responses:
        "200":
          description: Role users successfully updated.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: update:roles."
        "404":
          description: Role not found.
          x-description-1: One or more of the users do not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:roles
        - create:role_members
      summary: Assign users to a role
      tags:
      - roles
      x-sdk-method-name: assignUsers
  /rules:
    get:
      description: |
        Retrieve a filtered list of <a href="https://auth0.com/docs/rules">rules</a>. Accepts a list of fields to include or exclude.
      operationId: get_rules
      parameters:
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of results per page. Paging is disabled if parameter not
          sent.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional filter on whether a rule is enabled (true) or disabled
          (false).
        explode: true
        in: query
        name: enabled
        required: false
        schema:
          type: boolean
        style: form
      - description: Comma-separated list of fields to include or exclude (based on
          value provided for include_fields) in the result. Leave empty to retrieve
          all fields.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          pattern: "^((name)|(enabled)|(script)|(order)|(id)|(stage))(,((name)|(enabled)|(script)|(order)|(id)|(stage)))*$"
          type: string
        style: form
      - description: Whether specified fields are to be included (true) or excluded
          (false).
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_rules_200_response'
          description: Rules successfully retrieved.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:rules."
        "404":
          description: Rule not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:rules
      summary: Get rules
      tags:
      - rules
      x-sdk-method-name: getAll
    post:
      description: |
        Create a <a href="https://auth0.com/docs/rules#create-a-new-rule-using-the-management-api">new rule</a>.

        Note: Changing a rule's stage of execution from the default <code>login_success</code> can change the rule's function signature to have user omitted.
      operationId: post_rules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ruleCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule'
          description: Rule successfully created.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:rules."
          x-description-1: You reached the limit of entities of this type for this
            tenant.
        "409":
          description: A rule with the same name already exists.
          x-description-1: A rule with the same order already exists.
          x-description-2: A rule with the same execution stage already exists.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:rules
      summary: Create a rule
      tags:
      - rules
      x-sdk-method-name: create
  /rules-configs:
    get:
      description: |-
        Retrieve rules config variable keys.

            Note: For security, config variable values cannot be retrieved outside rule execution.
      operationId: get_rules-configs
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_rules_configs_200_response_inner'
                type: array
          description: Rules config keys successfully retrieved.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:rules_configs."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:rules_configs
      summary: Retrieve config variable keys for rules (get_rules-configs)
      tags:
      - rules-configs
      x-sdk-method-name: getAll
  /rules-configs/{key}:
    delete:
      description: Delete a rules config variable identified by its key.
      operationId: delete_rules-configs_by_key
      parameters:
      - description: Key of the rules config variable to delete.
        explode: false
        in: path
        name: key
        required: true
        schema:
          pattern: "^[A-Za-z0-9_\\-@*+:]*$"
          type: string
        style: simple
      responses:
        "204":
          description: Rules config variable successfully removed.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:rules_configs."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:rules_configs
      summary: Delete rules config for a given key
      tags:
      - rules-configs
      x-sdk-method-name: delete
    put:
      description: Sets a rules config variable.
      operationId: put_rules-configs_by_key
      parameters:
      - description: "Key of the rules config variable to set (max length: 127 characters)."
        explode: false
        in: path
        name: key
        required: true
        schema:
          pattern: "^[A-Za-z0-9_\\-@*+:]*$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put_rules_configs_by_key_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/put_rules_configs_by_key_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/put_rules_configs_by_key_200_response'
          description: Rules config variable successfully set.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:rules_configs."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:rules_configs
      summary: Set rules config for a given key
      tags:
      - rules-configs
      x-sdk-method-name: set
  /rules/{id}:
    delete:
      description: |
        Delete a rule.
      operationId: delete_rules_by_id
      parameters:
      - description: ID of the rule to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^rul_[A-Za-z0-9]{16}$"
          type: string
        style: simple
      responses:
        "204":
          description: Rule successfully deleted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: delete:rules."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:rules
      summary: Delete a rule
      tags:
      - rules
      x-sdk-method-name: delete
    get:
      description: |
        Retrieve <a href="https://auth0.com/docs/rules">rule</a> details. Accepts a list of fields to include or exclude in the result.
      operationId: get_rules_by_id
      parameters:
      - description: ID of the rule to retrieve.
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^rul_[A-Za-z0-9]{16}$"
          type: string
        style: simple
      - description: Comma-separated list of fields to include or exclude (based on
          value provided for include_fields) in the result. Leave empty to retrieve
          all fields.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          pattern: "^((name)|(enabled)|(script)|(order)|(id)|(stage))(,((name)|(enabled)|(script)|(order)|(id)|(stage)))*$"
          type: string
        style: form
      - description: Whether specified fields are to be included (true) or excluded
          (false).
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule'
          description: Rule successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:rules."
        "404":
          description: Rule not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:rules
      summary: Get a rule
      tags:
      - rules
      x-sdk-method-name: get
    patch:
      description: |
        Update an existing rule.
      operationId: patch_rules_by_id
      parameters:
      - description: ID of the rule to retrieve.
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "^rul_[A-Za-z0-9]{16}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ruleUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule'
          description: Rule successfully updated.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:rules."
        "404":
          description: Rule not found.
        "409":
          description: A rule with the same name already exists.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:rules
      summary: Update a rule
      tags:
      - rules
      x-sdk-method-name: update
  /sessions/{id}:
    delete:
      description: Delete a session by ID.
      operationId: delete_session
      parameters:
      - description: ID of the session to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Session deletion request accepted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: delete:sessions"
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:sessions
      summary: Delete session
      tags:
      - sessions
      x-sdk-method-name: delete
    get:
      description: Retrieve session information.
      operationId: get_session
      parameters:
      - description: ID of session to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_session_200_response'
          description: The session was retrieved
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation
        "403":
          description: "Insufficient scope, expected any of: read:sessions"
        "404":
          description: The session does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:sessions
      summary: Get session
      tags:
      - sessions
      x-sdk-method-name: get
  /stats/active-users:
    get:
      description: Retrieve the number of active users that logged in during the last
        30 days.
      operationId: get_active-users
      responses:
        "200":
          content:
            application/json:
              schema:
                default: 100
                description: Number of active users in the last 30 days.
                type: number
          description: Number of active users successfully retrieved.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:stats."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:stats
      summary: Get active users count
      tags:
      - stats
      x-sdk-method-name: getActiveUsersCount
  /stats/daily:
    get:
      description: "Retrieve the number of logins, signups and breached-password detections\
        \ (subscription required) that occurred each day within a specified date range."
      operationId: get_daily
      parameters:
      - description: Optional first day of the date range (inclusive) in YYYYMMDD
          format.
        explode: true
        in: query
        name: from
        required: false
        schema:
          pattern: "^2[0-9]{3}((0[1-9])|(1[0-2]))((0[1-9])|([12][0-9])|(3[01]))$"
          type: string
        style: form
      - description: Optional last day of the date range (inclusive) in YYYYMMDD format.
        explode: true
        in: query
        name: to
        required: false
        schema:
          pattern: "^2[0-9]{3}((0[1-9])|(1[0-2]))((0[1-9])|([12][0-9])|(3[01]))$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/statsEntry'
                type: array
          description: Daily stats successfully retrieved.
        "400":
          description: Invalid request query. The message will vary depending on the
            cause.
          x-description-1: '''from'' date cannot be greater than ''to'' date.'
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:stats."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:stats
      summary: Get daily stats
      tags:
      - stats
      x-sdk-method-name: getDaily
  /tenants/settings:
    get:
      description: Retrieve tenant settings. A list of fields to include or exclude
        may also be specified.
      operationId: tenant_settings_route
      parameters:
      - description: Comma-separated list of fields to include or exclude (based on
          value provided for include_fields) in the result. Leave empty to retrieve
          all fields.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          pattern: "^((allowed_logout_urls)|(change_password)|(error_page)|(flags)|(friendly_name)|(picture_url)|(support_email)|(support_url)|(session_lifetime)|(default_audience)|(default_directory)|(device_flow)|(idle_session_lifetime)|(default_redirection_uri)|(universal_login)|(universal_login\\\
            .colors)|(universal_login\\.passwordless)|(enabled_locales)|(session_cookie)|(sessions)|(allow_organization_name_in_authentication_api)|(mtls)|(customize_mfa_in_postlogin_action))(,((allowed_logout_urls)|(change_password)|(error_page)|(flags)|(friendly_name)|(picture_url)|(support_email)|(support_url)|(session_lifetime)|(default_audience)|(default_directory)|(device_flow)|(idle_session_lifetime)|(default_redirection_uri)|(universal_login)|(universal_login\\\
            .colors)|(universal_login\\.passwordless)|(enabled_locales)|(session_cookie)|(sessions)|(allow_organization_name_in_authentication_api)|(mtls)|(customize_mfa_in_postlogin_action)))*$"
          type: string
        style: form
      - description: Whether specified fields are to be included (true) or excluded
          (false).
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tenantSettings'
          description: Tenant settings successfully retrieved.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: The specified client cannot perform the requested operation.
          x-description-1: "Insufficient scope; expected any of: read:tenant_settings."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:tenant_settings
      summary: Get tenant settings
      tags:
      - tenants
      x-sdk-method-name: getSettings
    patch:
      description: Update settings for a tenant.
      operationId: patch_settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tenantSettingsUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/tenantSettingsUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tenantSettings'
          description: Tenant settings successfully updated.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:tenant_settings."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:tenant_settings
      summary: Update tenant settings
      tags:
      - tenants
      x-sdk-method-name: updateSettings
  /tickets/email-verification:
    post:
      description: Create a <a href="https://auth0.com/docs/email/custom#verification-email">ticket
        to verify a user's email address</a>.
      operationId: post_email-verification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_email_verification_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_email_verification_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_email_verification_201_response'
          description: Ticket successfully created.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
          x-description-1: The user does not have an email address.
          x-description-2: The user's main connection does not support this operation.
          x-description-3: An error ocurred in Auth0's identity provider.
          x-description-4: "The connection with id {connection_id} does not exist."
          x-description-5: The client does not exist
          x-description-6: The organization does not exist
          x-description-7: "The user with id {user_id} is not a member of organization\
            \ with id {organization_id}."
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: "Insufficient scope; expected any of: create:user_tickets."
        "404":
          description: User not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:user_tickets
      summary: Create an email verification ticket
      tags:
      - tickets
      x-sdk-method-name: verifyEmail
  /tickets/password-change:
    post:
      description: Create a <a href="https://auth0.com/docs/connections/database/password-change">password
        change ticket</a> for a user.
      operationId: post_password-change
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_password_change_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_password_change_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_password_change_201_response'
          description: Ticket successfully created.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
          x-description-1: The user does not have an email address.
          x-description-2: The user's main connection does not support this operation.
          x-description-3: An error ocurred in Auth0's identity provider.
          x-description-4: "The connection with id {connection_id} does not exist."
          x-description-5: The client does not exist
          x-description-6: The organization does not exist
          x-description-7: "The user with id {user_id} is not a member of organization\
            \ with id {organization_id}."
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: "Insufficient scope; expected any of: create:user_tickets."
        "404":
          description: User not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:user_tickets
      summary: Create a password change ticket
      tags:
      - tickets
      x-sdk-method-name: changePassword
  /user-blocks:
    delete:
      description: |
        Unblock a user blocked due to an excessive amount of incorrectly-provided credentials.
      operationId: delete_user-blocks
      parameters:
      - description: "Should be any of a username, phone number, or email."
        explode: true
        in: query
        name: identifier
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: User successfully unblocked.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: Some fields cannot be read with the permissions granted by
            the bearer token scopes. The message will vary depending on the fields
            and the scopes.
          x-description-1: "Insufficient scope; expected any of: update:users."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:users
      summary: Unblock by identifier
      tags:
      - user-blocks
      x-sdk-method-name: deleteAll
    get:
      description: |
        Retrieve a list of blocked IP addresses for a given identifier (e.g., username, phone number or email).
      operationId: get_user-blocks
      parameters:
      - description: "Should be any of a username, phone number, or email."
        explode: true
        in: query
        name: identifier
        required: true
        schema:
          type: string
        style: form
      - description: "\n          If true and Brute Force Protection is enabled and\
          \ configured to block logins, will return a list of blocked IP addresses.\n\
          \          If true and Brute Force Protection is disabled, will return an\
          \ empty list.\n        "
        explode: true
        in: query
        name: consider_brute_force_enablement
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userBlock'
          description: User successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:users."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:users
      summary: Get blocks by identifier
      tags:
      - user-blocks
      x-sdk-method-name: getAll
  /user-blocks/{id}:
    delete:
      description: |
        Unblock a user that was blocked due to an excessive amount of incorrectly provided credentials.

        Note: This endpoint does not unblock users that were <a href="https://auth0.com/docs/user-profile#block-and-unblock-a-user">blocked by admins</a>.
      operationId: delete_user-blocks_by_id
      parameters:
      - description: The user_id of the user to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: User successfully unblocked.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: Some fields cannot be read with the permissions granted
            by the bearer token scopes. The message will vary depending on the fields
            and the scopes.
          x-description-2: "Insufficient scope; expected any of: update:users."
        "404":
          description: User not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:users
      summary: Unblock a user
      tags:
      - user-blocks
      x-sdk-method-name: delete
    get:
      description: |+
        Retrieve a list of blocked IP addresses for the login identifiers (email, username, phone number, etc) associated with the specified user.

      operationId: get_user-blocks_by_id
      parameters:
      - description: user_id of the user blocks to retrieve.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "\n          If true and Brute Force Protection is enabled and\
          \ configured to block logins, will return a list of blocked IP addresses.\n\
          \          If true and Brute Force Protection is disabled, will return an\
          \ empty list.\n        "
        explode: true
        in: query
        name: consider_brute_force_enablement
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userBlock'
          description: User block successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: "Insufficient scope; expected any of: read:users."
        "404":
          description: User not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:users
      summary: Get a user's blocks
      tags:
      - user-blocks
      x-sdk-method-name: get
  /users:
    get:
      description: |
        Retrieve details of users. It is possible to:

        - Specify a search criteria for users
        - Sort the users to be returned
        - Select the fields to be returned
        - Specify the number of users to retrieve per page and the page index
         <!-- only v3 is available -->
        The <code>q</code> query parameter can be used to get users that match the specified criteria <a href="https://manage.local.dev.auth0.com/docs/users/search/v3/query-syntax">using query string syntax.</a>

        <a href="https://manage.local.dev.auth0.com/docs/users/search/v3">Learn more about searching for users.</a>

        Read about <a href="https://manage.local.dev.auth0.com/docs/users/search/best-practices">best practices</a> when working with the API endpoints for retrieving users.

        Auth0 limits the number of users you can return. If you exceed this threshold, please redefine your search, use the <a href="https://manage.local.dev.auth0.com/docs/api/management/v2#!/Jobs/post_users_exports">export job</a>, or the <a href="https://manage.local.dev.auth0.com/docs/extensions/user-import-export">User Import / Export</a> extension.
      operationId: get_users
      parameters:
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of results per page. Paging is disabled if parameter not
          sent.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      - description: Field to sort by. Use <code>field:order</code> where order is
          <code>1</code> for ascending and <code>-1</code> for descending. e.g. <code>created_at:1</code>
        explode: true
        in: query
        name: sort
        required: false
        schema:
          pattern: "^(([a-zA-Z0-9_\\\\.]+))\\:(1|-1)$"
          type: string
        style: form
      - description: "Connection filter. Only applies when using <code>search_engine=v1</code>.\
          \ To filter by connection with <code>search_engine=v2|v3</code>, use <code>q=identities.connection:\"\
          connection_name\"</code>"
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of fields to include or exclude (based on
          value provided for include_fields) in the result. Leave empty to retrieve
          all fields.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: Whether specified fields are to be included (true) or excluded
          (false).
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      - description: "Query in <a target='_new' href ='http://www.lucenetutorial.com/lucene-query-syntax.html'>Lucene\
          \ query string syntax</a>. Some query types cannot be used on metadata fields,\
          \ for details see <a href='https://manage.local.dev.auth0.com/docs/users/search/v3/query-syntax#searchable-fields'>Searchable\
          \ Fields</a>."
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: The version of the search engine
        explode: true
        in: query
        name: search_engine
        required: false
        schema:
          $ref: '#/components/schemas/get_users_search_engine_parameter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_users_200_response'
          description: Users successfully retrieved.
        "400":
          description: Invalid request query string. The message will vary depending
            on the cause.
          x-description-1: The 'q' parameter is available only if you specify 'search_engine=v2|v3'.
          x-description-2: You are not allowed to use search_engine=v1.
          x-description-3: You are not allowed to use search_engine=v2. Use search_engine=v3
            instead.
          x-description-4: You are not allowed to use search_engine=v3.
          x-description-5: You can only page through the first 1000 records. See https://manage.local.dev.auth0.com/docs/users/search/v3/view-search-results-by-page#limitation.
        "401":
          description: Client is not global.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Invalid token.
        "403":
          description: "Insufficient scope, expected any of: read:users."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
        "503":
          description: The query exceeded the timeout. Please try refining your search
            criteria. See https://manage.local.dev.auth0.com/docs/best-practices/search-best-practices.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:users
        - read:user_idp_tokens
      summary: List or Search Users
      tags:
      - users
      x-sdk-method-name: getAll
    post:
      description: |-
        Create a new user for a given <a href="https://auth0.com/docs/connections/database">database</a> or <a href="https://auth0.com/docs/connections/passwordless">passwordless</a> connection.

        Note: <code>connection</code> is required but other parameters such as <code>email</code> and <code>password</code> are dependent upon the type of connection.
      operationId: post_users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/userCreate'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_users_200_response_oneOf_inner'
          description: User successfully created.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
          x-description-1: Connection does not support user creation through the API.
            It must either be a database or SMS connection.
          x-description-2: Cannot set username for connection without requires_username.
          x-description-3: Connection does not exist.
          x-description-4: Connection is disabled.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope, expected any of: create:users."
        "409":
          description: User already exists.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:users
      summary: Create a User
      tags:
      - users
      x-sdk-method-name: create
  /users-by-email:
    get:
      description: |
        If Auth0 is the identify provider (idP), the email address associated with a user is saved in lower case, regardless of how you initially provided it. For example, if you register a user as <b>JohnSmith@example.com</b>, Auth0 saves the user's email as <b>johnsmith@example.com</b>.

        In cases where Auth0 is not the idP, the `email` is stored based on the rules of idP, so make sure the search is made using the correct capitalization.

        When using this endpoint, make sure that you are searching for users via email addresses using the correct case.
      operationId: get_users-by-email
      parameters:
      - description: Comma-separated list of fields to include or exclude (based on
          value provided for include_fields) in the result. Leave empty to retrieve
          all fields.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          pattern: "^((phone_number)|(email)|(email_verified)|(picture)|(username)|(user_id)|(name)|(nickname)|(created_at)|(identities)|(app_metadata)|(user_metadata)|(last_ip)|(last_login)|(logins_count)|(updated_at)|(blocked)|(family_name)|(given_name))(,((phone_number)|(email)|(email_verified)|(picture)|(username)|(user_id)|(name)|(nickname)|(created_at)|(identities)|(app_metadata)|(user_metadata)|(last_ip)|(last_login)|(logins_count)|(updated_at)|(blocked)|(family_name)|(given_name)))*$"
          type: string
        style: form
      - description: Whether specified fields are to be included (true) or excluded
          (false). Defaults to true.
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      - description: Email address to search for (case-sensitive).
        explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/get_users_200_response_oneOf_inner'
                type: array
          description: Users successfully searched.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: "Insufficient scope; expected any of: read:users."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:users
      summary: Search Users by Email
      tags:
      - users-by-email
      x-sdk-method-name: getByEmail
  /users/{id}:
    delete:
      description: Delete a user.
      operationId: delete_users_by_id
      parameters:
      - description: ID of the user to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: User successfully deleted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: "Insufficient scope; expected any of: delete:users,delete:current_user."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:users
        - delete:current_user
      summary: Delete a User
      tags:
      - users
      x-sdk-method-name: delete
    get:
      description: Retrieve user details. A list of fields to include or exclude may
        also be specified.
      operationId: get_users_by_id
      parameters:
      - description: ID of the user to retrieve.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of fields to include or exclude (based on
          value provided for include_fields) in the result. Leave empty to retrieve
          all fields.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          pattern: "^((phone_number)|(email)|(email_verified)|(picture)|(username)|(user_id)|(name)|(nickname)|(created_at)|(identities)|(app_metadata)|(user_metadata)|(last_ip)|(last_login)|(logins_count)|(updated_at)|(blocked)|(family_name)|(given_name))(,((phone_number)|(email)|(email_verified)|(picture)|(username)|(user_id)|(name)|(nickname)|(created_at)|(identities)|(app_metadata)|(user_metadata)|(last_ip)|(last_login)|(logins_count)|(updated_at)|(blocked)|(family_name)|(given_name)))*$"
          type: string
        style: form
      - description: Whether specified fields are to be included (true) or excluded
          (false).
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_users_200_response_oneOf_inner'
          description: User successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: "Insufficient scope; expected any of: read:users, read:user_idp_tokens,\
            \ read:current_user."
        "404":
          description: User not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:users
        - read:current_user
        - read:user_idp_tokens
      summary: Get a User
      tags:
      - users
      x-sdk-method-name: get
    patch:
      description: |
        Update a user.

        These are the attributes that can be updated at the root level:

        <ul>
            <li>app_metadata</li>
            <li>blocked</li>
            <li>email</li>
            <li>email_verified</li>
            <li>family_name</li>
            <li>given_name</li>
            <li>name</li>
            <li>nickname</li>
            <li>password</li>
            <li>phone_number</li>
            <li>phone_verified</li>
            <li>picture</li>
            <li>username</li>
            <li>user_metadata</li>
            <li>verify_email</li>
        </ul>

        Some considerations:
        <ul>
            <li>The properties of the new object will replace the old ones.</li>
            <li>The metadata fields are an exception to this rule (<code>user_metadata</code> and <code>app_metadata</code>). These properties are merged instead of being replaced but be careful, the merge only occurs on the first level.</li>
            <li>If you are updating <code>email</code>, <code>email_verified</code>, <code>phone_number</code>, <code>phone_verified</code>, <code>username</code> or <code>password</code> of a secondary identity, you need to specify the <code>connection</code> property too.</li>
            <li>If you are updating <code>email</code> or <code>phone_number</code> you can specify, optionally, the <code>client_id</code> property.</li>
            <li>Updating <code>email_verified</code> is not supported for enterprise and passwordless sms connections.</li>
            <li>Updating the <code>blocked</code> to <code>false</code> does not affect the user's blocked state from an excessive amount of incorrectly provided credentials. Use the "Unblock a user" endpoint from the "User Blocks" API to change the user's state.</li>
        </ul>

        <h5>Updating a field (non-metadata property)</h5>
        To mark the email address of a user as verified, the body to send should be:
        <pre><code>{ "email_verified": true }</code></pre>

        <h5>Updating a user metadata root property</h5>Let's assume that our test user has the following <code>user_metadata</code>:
        <pre><code>{ "user_metadata" : { "profileCode": 1479 } }</code></pre>

        To add the field <code>addresses</code> the body to send should be:
        <pre><code>{ "user_metadata" : { "addresses": {"work_address": "100 Industrial Way"} }}</code></pre>

        The modified object ends up with the following <code>user_metadata</code> property:<pre><code>{
          "user_metadata": {
            "profileCode": 1479,
            "addresses": { "work_address": "100 Industrial Way" }
          }
        }</code></pre>

        <h5>Updating an inner user metadata property</h5>If there's existing user metadata to which we want to add  <code>"home_address": "742 Evergreen Terrace"</code> (using the <code>addresses</code> property) we should send the whole <code>addresses</code> object. Since this is a first-level object, the object will be merged in, but its own properties will not be. The body to send should be:
        <pre><code>{
          "user_metadata": {
            "addresses": {
              "work_address": "100 Industrial Way",
              "home_address": "742 Evergreen Terrace"
            }
          }
        }</code></pre>

        The modified object ends up with the following <code>user_metadata</code> property:
        <pre><code>{
          "user_metadata": {
            "profileCode": 1479,
            "addresses": {
              "work_address": "100 Industrial Way",
              "home_address": "742 Evergreen Terrace"
            }
          }
        }</code></pre>
      operationId: patch_users_by_id
      parameters:
      - description: ID of the user to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/userUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_users_200_response_oneOf_inner'
          description: User successfully updated.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
          x-description-2: Connection does not exist.
          x-description-3: Connection is not supported for this operation.
          x-description-4: Cannot update password and email simultaneously.
          x-description-5: Cannot update password and email_verified simultaneously.
          x-description-6: Cannot update username and email simultaneously.
          x-description-7: Cannot update username and email_verified simultaneously.
          x-description-8: Cannot update username and password simultaneously.
          x-description-9: Cannot update email for non-database user.
          x-description-10: Cannot change email or password for users in a disabled
            connection.
          x-description-11: Email verification is not supported for enterprise users.
          x-description-12: The verify_email and email_verified parameters can't be
            true at same time.
          x-description-13: "Your account is not allowed to update the following user\
            \ attributes: family_name, given_name, name, nickname, picture."
          x-description-14: "The following user attributes cannot be updated: family_name,\
            \ given_name, name, nickname, picture. The connection must either be a\
            \ database connection (using the Auth0 store), a passwordless connection\
            \ (email or sms) or has disabled 'Sync user profile attributes at each\
            \ login'."
          x-description-15: "The following user attributes cannot be updated: family_name,\
            \ given_name, name, nickname, picture. The specified connection belongs\
            \ to a secondary identity."
          x-description-16: "The following user attributes cannot be removed: family_name,\
            \ given_name, name, nickname, picture. The connection (non-federated-conn)\
            \ must either be a custom database connection with import mode disabled,\
            \ a social or enterprise connection."
          x-description-17: "The following user attributes cannot be removed: foo,\
            \ bar. The connection (some-connection) should have disabled 'Sync user\
            \ profile attributes at each login' (see <a href='https://manage.local.dev.auth0.com/docs/users/configure-connection-sync-with-auth0'>Configuring\
            \ Connection Sync with Auth0</a>) or defined these attributes in 'options.non_persistent_attrs'\
            \ array (see <a href='https://manage.local.dev.auth0.com/docs/security/denylist-user-attributes'>Add\
            \ User Attributes to DenyList</a>)."
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: Some fields cannot be read with the permissions granted
            by the bearer token scopes. The message will vary depending on the fields
            and the scopes.
          x-description-2: "Insufficient scope; expected any of: update:users,update:users_app_metadata,update:current_user_metadata."
        "404":
          description: User not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:users
        - update:users_app_metadata
        - update:current_user_metadata
      summary: Update a User
      tags:
      - users
      x-sdk-method-name: update
  /users/{id}/authentication-methods:
    delete:
      operationId: delete_authentication-methods
      parameters:
      - description: The ID of the user in question.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Authentication methods successfully deleted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: "Insufficient scope; expected any of: delete:authentication_methods"
          x-description-2: Operation not permitted when the user has registered at
            least 1 passkey
          x-description-3: The number of user identifiers associated with a user exceeds
            the maximum allowed.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:authentication_methods
      summary: Deletes all authentication methods for the given user
      tags:
      - users
      x-sdk-method-name: deleteAuthenticationMethods
    get:
      operationId: get_authentication-methods
      parameters:
      - description: The ID of the user in question.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Page index of the results to return. First page is 0. Default
          is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: Number of results per page. Default is 50.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_authentication_methods_200_response'
          description: The authentication methods for the user were retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request query string. The message will vary depending
            on the cause.
          x-description-2: The number of user identifiers associated with a user exceeds
            the maximum allowed.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: "Insufficient scope, expected any of: read:authentication_methods"
        "404":
          description: The user does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:authentication_methods
      summary: Gets a list of authentication methods
      tags:
      - users
      x-sdk-method-name: getAuthenticationMethods
    post:
      operationId: post_authentication-methods
      parameters:
      - description: The ID of the user to whom the new authentication method will
          be assigned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_authentication_methods_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_authentication_methods_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_authentication_methods_201_response'
          description: Authentication method created.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation
        "403":
          description: You reached the limit of entities of this type for this user.
          x-description-1: User to be acted on does not match subject in bearer token.
          x-description-2: "Insufficient scope, expected: create:authentication_methods"
        "404":
          description: The user does not exist.
        "409":
          description: Authentication method already exists.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - create:authentication_methods
      summary: Creates an authentication method for a given user. Authentication methods
        created via this endpoint will be auto confirmed and should already have verification
        completed.
      tags:
      - users
      x-sdk-method-name: createAuthenticationMethod
    put:
      operationId: put_authentication-methods
      parameters:
      - description: The ID of the user in question.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/put_authentication_methods_request_inner'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/put_authentication_methods_request_inner'
              type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/put_authentication_methods_200_response_inner'
                type: array
          description: All authentication methods successfully updated.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: "Insufficient scope; expected: update:authentication_methods"
          x-description-2: Operation not permitted when the user has registered at
            least 1 passkey
          x-description-3: The number of user identifiers associated with a user exceeds
            the maximum allowed.
        "409":
          description: Authentication method already exists.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:authentication_methods
      summary: Updates all authentication methods by replacing them with the given
        ones.
      tags:
      - users
      x-sdk-method-name: updateAuthenticationMethods
  /users/{id}/authentication-methods/{authentication_method_id}:
    delete:
      operationId: delete_authentication-methods_by_authentication_method_id
      parameters:
      - description: The ID of the user in question.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the authentication method to delete.
        explode: false
        in: path
        name: authentication_method_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Authentication method successfully deleted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: "Insufficient scope; expected any of: delete:authentication_methods"
          x-description-2: The number of user identifiers associated with a user exceeds
            the maximum allowed.
        "404":
          description: The user does not exist.
          x-description-1: The authentication method could not be found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:authentication_methods
      summary: Deletes an authentication method by ID
      tags:
      - users
      x-sdk-method-name: deleteAuthenticationMethod
    get:
      operationId: get_authentication-methods_by_authentication_method_id
      parameters:
      - description: The ID of the user in question.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the authentication methods in question.
        explode: false
        in: path
        name: authentication_method_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_authentication_methods_200_response_oneOf_inner'
          description: Authentication method retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: "Insufficient scope, expected: read:authentication_methods."
          x-description-2: The number of user identifiers associated with a user exceeds
            the maximum allowed.
        "404":
          description: The user does not exist.
          x-description-1: The authentication method could not be found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:authentication_methods
      summary: Gets an authentication method by ID.
      tags:
      - users
      x-sdk-method-name: getAuthenticationMethod
    patch:
      operationId: patch_authentication-methods_by_authentication_method_id
      parameters:
      - description: The ID of the user in question.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the authentication method to update.
        explode: false
        in: path
        name: authentication_method_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patch_authentication_methods_by_authentication_method_id_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/patch_authentication_methods_by_authentication_method_id_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/put_authentication_methods_200_response_inner'
          description: Authentication method updated.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: "Insufficient scope, expected: update:authentication_methods."
        "404":
          description: The user does not exist.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:authentication_methods
      summary: Updates an authentication method.
      tags:
      - users
      x-sdk-method-name: updateAuthenticationMethod
  /users/{id}/authenticators:
    delete:
      operationId: delete_authenticators
      parameters:
      - description: ID of the user to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: All authenticators successfully deleted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: "Insufficient scope; expected any of: remove:authenticators"
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:guardian_enrollments
      summary: Delete All Authenticators
      tags:
      - users
      x-sdk-method-name: deleteAllAuthenticators
  /users/{id}/enrollments:
    get:
      description: Retrieve the first confirmed <a href="https://auth0.com/docs/multifactor-authentication/guardian">Guardian</a>
        enrollment for a user.
      operationId: get_enrollments
      parameters:
      - description: ID of the user to list enrollments for.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/userEnrollment'
                type: array
          description: Enrollments successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: "Insufficient scope; expected any of: read:users,read:current_user."
        "404":
          description: User not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:users
        - read:current_user
      summary: Get the First Confirmed Multi-factor Authentication Enrollment
      tags:
      - users
      x-sdk-method-name: getEnrollments
  /users/{id}/identities:
    post:
      description: |-
        Link two user accounts together forming a primary and secondary relationship. On successful linking, the endpoint returns the new array of the primary account identities.

        Note: There are two ways of invoking the endpoint:

        <ul>
          <li>With the authenticated primary account's JWT in the Authorization header, which has the <code>update:current_user_identities</code> scope:
            <pre>
              POST /api/v2/users/PRIMARY_ACCOUNT_USER_ID/identities
              Authorization: "Bearer PRIMARY_ACCOUNT_JWT"
              {
                "link_with": "SECONDARY_ACCOUNT_JWT"
              }
            </pre>
            In this case, only the <code>link_with</code> param is required in the body, which also contains the JWT obtained upon the secondary account's authentication.
          </li>
          <li>With a token generated by the API V2 containing the <code>update:users</code> scope:
            <pre>
            POST /api/v2/users/PRIMARY_ACCOUNT_USER_ID/identities
            Authorization: "Bearer YOUR_API_V2_TOKEN"
            {
              "provider": "SECONDARY_ACCOUNT_PROVIDER",
              "connection_id": "SECONDARY_ACCOUNT_CONNECTION_ID(OPTIONAL)",
              "user_id": "SECONDARY_ACCOUNT_USER_ID"
            }
            </pre>
            In this case you need to send <code>provider</code> and <code>user_id</code> in the body. Optionally you can also send the <code>connection_id</code> param which is suitable for identifying a particular database connection for the 'auth0' provider.
          </li>
        </ul>
      operationId: post_identities
      parameters:
      - description: ID of the primary user account to link a second user account
          to.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_identities_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_identities_request'
      responses:
        "201":
          content:
            application/json:
              schema:
                description: An array of objects with information about the user's
                  identities.
                items:
                  $ref: '#/components/schemas/userIdentity'
                type: array
          description: Identity successfully added.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
          x-description-2: The provider/connection is not configured.
          x-description-3: Main identity and the new one are the same.
          x-description-4: Invalid token (link_with).
          x-description-5: JWT (link_with) contains an invalid aud claim.
          x-description-6: JWT (link_with) must contains sub claim.
          x-description-7: JWT (link_with) contains an invalid sub claim.
          x-description-8: JWT (link_with) must have an alg of RS256.
          x-description-9: JWT (link_with) must have the same issuer as the calling
            user.
          x-description-10: JWT (link_with) must have an aud claim that matches that
            of the calling token's azp.
          x-description-11: Linking to an inexistent identity requires a connection.
          x-description-12: Linking to an inexistent identity is not allowed.
          x-description-13: Unable to link with the secondary account.
          x-description-14: Provided secondary account not found.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: update:users, update:current_user_identities."
          x-description-1: User to be acted on does not match subject in bearer token.
        "409":
          description: Specified identity already exists.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:users
        - update:current_user_identities
      summary: Link a User Account
      tags:
      - users
      x-sdk-method-name: link
  /users/{id}/identities/{provider}/{user_id}:
    delete:
      description: Unlink an identity from the target user making it a separate user
        account again.
      operationId: delete_user_identity_by_user_id
      parameters:
      - description: ID of the primary user account.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Identity provider name of the secondary linked account (e.g.
          `google-oauth2`).
        explode: false
        in: path
        name: provider
        required: true
        schema:
          $ref: '#/components/schemas/delete_user_identity_by_user_id_provider_parameter'
        style: simple
      - description: ID of the secondary linked account (e.g. `123456789081523216417`
          part after the `|` in `google-oauth2|123456789081523216417`).
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: An array of objects with information about the user's
                  identities.
                items:
                  $ref: '#/components/schemas/delete_user_identity_by_user_id_200_response_inner'
                type: array
          description: User identity successfully unlinked.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Main identity cannot be removed.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: update:users, update:current_user_identities."
          x-description-1: User to be acted on does not match subject in bearer token.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:users
        - update:current_user_identities
      summary: Unlink a User Identity
      tags:
      - users
      x-sdk-method-name: unlink
  /users/{id}/logs:
    get:
      description: |-
        Retrieve log events for a specific user.

        Note: For more information on all possible event types, their respective acronyms and descriptions, see <a href="https://auth0.com/docs/logs/log-event-type-codes">Log Event Type Codes</a>.

        For more information on the list of fields that can be used in `sort`, see <a href="https://auth0.com/docs/logs/log-search-query-syntax#searchable-fields">Searchable Fields</a>.

        Auth0 <a href="https://auth0.com/docs/logs/retrieve-log-events-using-mgmt-api#limitations">limits the number of logs</a> you can return by search criteria to 100 logs per request. Furthermore, you may only paginate through up to 1,000 search results. If you exceed this threshold, please redefine your search.
      operationId: get_logs_by_user
      parameters:
      - description: ID of the user of the logs to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: Number of results per page. Paging is disabled if parameter not
          sent.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Field to sort by. Use `fieldname:1` for ascending order and `fieldname:-1`
          for descending.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          pattern: "^(([a-zA-Z0-9_\\\\.]+))\\:(1|-1)$"
          type: string
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_logs_200_response'
          description: Logs successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:logs, read:logs_users."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:logs
        - read:logs_users
      summary: Get user's log events
      tags:
      - users
      x-sdk-method-name: getLogs
  /users/{id}/multifactor/actions/invalidate-remember-browser:
    post:
      description: Invalidate all remembered browsers across all <a href="https://auth0.com/docs/multifactor-authentication">authentication
        factors</a> for a user.
      operationId: post_invalidate-remember-browser
      parameters:
      - description: ID of the user to invalidate all remembered browsers and authentication
          factors for.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Remembered browsers for MFA invalidated.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: "Insufficient scope; expected: update:users."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:users
      summary: Invalidate All Remembered Browsers for Multi-factor Authentication
      tags:
      - users
      x-sdk-method-name: invalidateRememberBrowser
  /users/{id}/multifactor/{provider}:
    delete:
      description: Delete a <a href="https://auth0.com/docs/multifactor-authentication">multifactor</a>
        configuration for a user. This forces the user to re-configure the multi-factor
        provider.
      operationId: delete_multifactor_by_provider
      parameters:
      - description: ID of the user to remove a multifactor configuration from.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The multi-factor provider. Supported values 'duo' or 'google-authenticator'
        explode: false
        in: path
        name: provider
        required: true
        schema:
          $ref: '#/components/schemas/delete_multifactor_by_provider_provider_parameter'
        style: simple
      responses:
        "204":
          description: Multi-factor provider successfully deleted for user.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: User to be acted on does not match subject in bearer token.
          x-description-1: "Insufficient scope; expected any of: update:users."
        "404":
          description: User not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:users
      summary: Delete a User's Multi-factor Provider
      tags:
      - users
      x-sdk-method-name: deleteMultifactorProvider
  /users/{id}/organizations:
    get:
      description: |
        This endpoint will retrieve all organizations that the specified user is a member of.
      operationId: get_user_organizations
      parameters:
      - description: ID of the user to retrieve the organizations for.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          maximum: 1000
          minimum: 0
          type: integer
        style: form
      - description: Number of results per page. Defaults to 50.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_user_organizations_200_response'
          description: Organizations successfully retrieved.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
          x-description-2: Client is not global.
        "403":
          description: "Insufficient scope; expected any of: read:users, read:organizations."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:organizations
      summary: List user's organizations
      tags:
      - users
      x-sdk-method-name: getUserOrganizations
  /users/{id}/permissions:
    delete:
      description: |
        Remove permissions from a user.
      operationId: delete_permissions
      parameters:
      - description: ID of the user to remove permissions from.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/delete_permissions_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/delete_permissions_request'
      responses:
        "204":
          description: User permissions removed.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: update:users."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:users
      summary: Remove Permissions from a User
      tags:
      - users
      x-sdk-method-name: deletePermissions
    get:
      description: Retrieve all permissions associated with the user.
      operationId: get_permissions
      parameters:
      - description: ID of the user to retrieve the permissions for.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Number of results per page. Paging is disabled if parameter not
          sent.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_permissions_200_response'
          description: Permissions successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: read:users."
        "404":
          description: User not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:users
      summary: Get a User's Permissions
      tags:
      - users
      x-sdk-method-name: getPermissions
    post:
      description: Assign permissions to a user.
      operationId: post_permissions
      parameters:
      - description: ID of the user to assign permissions to.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_permissions_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_permissions_request'
      responses:
        "201":
          description: Permissions assigned to user.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
          x-description-2: No more permissions can be assigned to this user.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: update:users."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:users
      summary: Assign Permissions to a User
      tags:
      - users
      x-sdk-method-name: assignPermissions
  /users/{id}/recovery-code-regeneration:
    post:
      description: Remove the current <a href="https://auth0.com/docs/multifactor-authentication/guardian">multi-factor
        authentication</a> recovery code and generate a new one.
      operationId: post_recovery-code-regeneration
      parameters:
      - description: ID of the user to regenerate a multi-factor authentication recovery
          code for.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_recovery_code_regeneration_200_response'
          description: New recovery code successfully generated.
        "400":
          description: Invalid input based on schemas.
        "401":
          description: Token has expired or signature is invalid.
        "403":
          description: "Insufficient scope; expected: update:users."
        "404":
          description: Enrollment not found.
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:users
      summary: Generate New Multi-factor Authentication Recovery Code
      tags:
      - users
      x-sdk-method-name: regenerateRecoveryCode
  /users/{id}/roles:
    delete:
      description: Remove roles from a user.
      operationId: delete_user_roles
      parameters:
      - description: ID of the user to remove roles from.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/delete_user_roles_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/delete_user_roles_request'
      responses:
        "204":
          description: Users roles successfully removed.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:users."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:users
        - delete:role_members
      summary: Removes roles from a user
      tags:
      - users
      x-sdk-method-name: deleteRoles
    get:
      description: List the the roles associated with a user.
      operationId: get_user_roles
      parameters:
      - description: ID of the user to list roles for.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Number of results per page. Paging is disabled if parameter not
          sent.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Page index of the results to return. First page is 0.
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_organization_member_roles_200_response'
          description: Roles successfully retrieved.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected all of: read:users, read:roles."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:users
        - read:roles
        - read:role_members
      summary: Get a user's roles
      tags:
      - users
      x-sdk-method-name: getRoles
    post:
      description: Associate roles with a user.
      operationId: post_user_roles
      parameters:
      - description: ID of the user to associate roles with.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/post_user_roles_request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/post_user_roles_request'
      responses:
        "204":
          description: Roles successfully associated with user.
        "400":
          description: Invalid request body. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:roles, update:users."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:roles
        - update:users
        - create:role_members
      summary: Assign roles to a user
      tags:
      - users
      x-sdk-method-name: assignRoles
  /users/{user_id}/refresh-tokens:
    delete:
      description: Delete all refresh tokens for a user.
      operationId: delete_refresh_tokens_for_user
      parameters:
      - description: ID of the user to get remove refresh tokens for
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Refresh token deletion request accepted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: delete:refresh_tokens"
        "404":
          description: User not found
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:refresh_tokens
      summary: Delete refresh tokens for a user
      tags:
      - users
      x-sdk-method-name: deleteRefreshTokens
    get:
      description: Retrieve details for a user's refresh tokens.
      operationId: get_refresh_tokens_for_user
      parameters:
      - description: ID of the user to get refresh tokens for
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional token ID from which to start selection (exclusive).
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: Number of results per page. Defaults to 50.
        explode: true
        in: query
        name: take
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_refresh_tokens_for_user_200_response'
          description: The refresh tokens were retrieved
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation
        "403":
          description: "Insufficient scope, expected any of: read:refresh_tokens"
        "404":
          description: User not found
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:refresh_tokens
      summary: Get refresh tokens for a user
      tags:
      - users
      x-sdk-method-name: getRefreshTokens
  /users/{user_id}/sessions:
    delete:
      description: Delete all sessions for a user.
      operationId: delete_sessions_for_user
      parameters:
      - description: ID of the user to get sessions for
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Session deletion request accepted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected: delete:sessions"
        "404":
          description: User not found
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:sessions
      summary: Delete sessions for user
      tags:
      - users
      x-sdk-method-name: deleteSessions
    get:
      description: Retrieve details for a user's sessions.
      operationId: get_sessions_for_user
      parameters:
      - description: ID of the user to get sessions for
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: "Return results inside an object that contains the total result\
          \ count (true) or as a direct array of results (false, default)."
        explode: true
        in: query
        name: include_totals
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional session ID from which to start selection (exclusive).
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: Number of results per page. Defaults to 50.
        explode: true
        in: query
        name: take
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_sessions_for_user_200_response'
          description: The sessions were retrieved
        "401":
          description: Invalid token.
          x-description-1: Invalid signature received for JSON Web Token validation
        "403":
          description: "Insufficient scope, expected any of: read:sessions"
        "404":
          description: User not found
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:sessions
      summary: Get sessions for user
      tags:
      - users
      x-sdk-method-name: getSessions
  /clients/{client_id}:
    delete:
      description: "Delete a client and related configuration (rules, connections,\
        \ etc)."
      operationId: delete_clients_by_id
      parameters:
      - description: ID of the client to delete.
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Client successfully deleted.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Global client cannot be deleted.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: delete:clients."
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - delete:clients
      summary: Delete a client
      tags:
      - clients
      x-sdk-method-name: delete
    get:
      description: "Retrieve client details. A list of fields to include or exclude\
        \ may also be specified. Note:\n<ul>\n  <li>\n    <code>client_id</code>,\
        \ <code>app_type</code>, <code>name</code>, and <code>description</code> can\
        \ be retrieved with\n    the any of the scopes.\n  </li>\n  <li>\n    <code>callbacks</code>,\
        \ <code>oidc_backchannel_logout</code>, <code>allowed_origins</code>,\n  \
        \  <code>web_origins</code>, <code>tenant</code>, <code>global</code>, <code>config_route</code>,\n\
        \    <code>callback_url_template</code>, <code>jwt_configuration</code>,\n\
        \    <code>jwt_configuration.lifetime_in_seconds</code>, <code>jwt_configuration.secret_encoded</code>,\n\
        \    <code>jwt_configuration.scopes</code>, <code>jwt_configuration.alg</code>,\
        \ <code>api_type</code>,\n    <code>logo_uri</code>, <code>allowed_clients</code>,\
        \ <code>owners</code>, <code>custom_login_page</code>,\n    <code>custom_login_page_off</code>,\
        \ <code>sso</code>, <code>addons</code>, <code>form_template</code>,\n   \
        \ <code>custom_login_page_codeview</code>, <code>resource_servers</code>,\
        \ <code>client_metadata</code>,\n    <code>mobile</code>, <code>mobile.android</code>,\
        \ <code>mobile.ios</code>, <code>allowed_logout_urls</code>,\n    <code>token_endpoint_auth_method</code>,\
        \ <code>is_first_party</code>, <code>oidc_conformant</code>,\n    <code>is_token_endpoint_ip_header_trusted</code>,\
        \ <code>initiate_login_uri</code>, <code>grant_types</code>,\n    <code>refresh_token</code>,\
        \ <code>refresh_token.rotation_type</code>, <code>refresh_token.expiration_type</code>,\n\
        \    <code>refresh_token.leeway</code>, <code>refresh_token.token_lifetime</code>,\
        \ <code>organization_usage</code>,\n    <code>organization_require_behavior</code>\
        \ \n    properties can only be retrieved with the <code>read:clients</code>\
        \ or\n    <code>read:client_keys</code> scope.\n  </li>\n  <li>\n    <code>encryption_key</code>,\
        \ <code>encryption_key.pub</code>, <code>encryption_key.cert</code>,\n   \
        \ <code>client_secret</code>, <code>client_authentication_methods</code> and\
        \ <code>signing_key</code> properties can only be retrieved with the\n   \
        \ <code>read:client_keys</code> or <code>read:client_credentials</code> scope.\n\
        \  </li>\n</ul>\n"
      operationId: get_clients_by_id
      parameters:
      - description: ID of the client to retrieve.
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      - description: Comma-separated list of fields to include or exclude (based on
          value provided for include_fields) in the result. Leave empty to retrieve
          all fields.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          pattern: "^((name)|(description)|(callbacks)|(oidc_backchannel_logout)|(oidc_logout)|(allowed_origins)|(web_origins)|(client_id)|(tenant)|(global)|(config_route)|(callback_url_template)|(jwt_configuration)|(jwt_configuration\\\
            .lifetime_in_seconds)|(jwt_configuration\\.secret_encoded)|(jwt_configuration\\\
            .scopes)|(jwt_configuration\\.alg)|(api_type)|(logo_uri)|(allowed_clients)|(owners)|(custom_login_page)|(custom_login_page_on)|(sso)|(addons)|(form_template)|(custom_login_page_preview)|(encryption_key)|(encryption_key\\\
            .pub)|(encryption_key\\.cert)|(client_secret)|(signing_keys)|(mobile)|(mobile\\\
            .android)|(mobile\\.ios)|(token_endpoint_auth_method)|(allowed_logout_urls)|(app_type)|(is_first_party)|(oidc_conformant)|(client_metadata)|(is_token_endpoint_ip_header_trusted)|(initiate_login_uri)|(grant_types)|(refresh_token)|(refresh_token\\\
            .rotation_type)|(refresh_token\\.expiration_type)|(refresh_token\\.leeway)|(refresh_token\\\
            .token_lifetime)|(organization_usage)|(organization_require_behavior)|(client_authentication_methods)|(client_authentication_methods\\\
            .private_key_jwt)|(require_pushed_authorization_requests)|(id_token)|(signed_request_object)|(signed_request_object\\\
            .required)|(signed_request_object\\.credentials)|(compliance_level))(,((name)|(description)|(callbacks)|(oidc_backchannel_logout)|(oidc_logout)|(allowed_origins)|(web_origins)|(client_id)|(tenant)|(global)|(config_route)|(callback_url_template)|(jwt_configuration)|(jwt_configuration\\\
            .lifetime_in_seconds)|(jwt_configuration\\.secret_encoded)|(jwt_configuration\\\
            .scopes)|(jwt_configuration\\.alg)|(api_type)|(logo_uri)|(allowed_clients)|(owners)|(custom_login_page)|(custom_login_page_on)|(sso)|(addons)|(form_template)|(custom_login_page_preview)|(encryption_key)|(encryption_key\\\
            .pub)|(encryption_key\\.cert)|(client_secret)|(signing_keys)|(mobile)|(mobile\\\
            .android)|(mobile\\.ios)|(token_endpoint_auth_method)|(allowed_logout_urls)|(app_type)|(is_first_party)|(oidc_conformant)|(client_metadata)|(is_token_endpoint_ip_header_trusted)|(initiate_login_uri)|(grant_types)|(refresh_token)|(refresh_token\\\
            .rotation_type)|(refresh_token\\.expiration_type)|(refresh_token\\.leeway)|(refresh_token\\\
            .token_lifetime)|(organization_usage)|(organization_require_behavior)|(client_authentication_methods)|(client_authentication_methods\\\
            .private_key_jwt)|(require_pushed_authorization_requests)|(id_token)|(signed_request_object)|(signed_request_object\\\
            .required)|(signed_request_object\\.credentials)|(compliance_level)))*$"
          type: string
        style: form
      - description: Whether specified fields are to be included (true) or excluded
          (false).
        explode: true
        in: query
        name: include_fields
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
          description: Client successfully retrieved.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request query string. The message will vary depending
            on the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: read:clients, read:client_keys,\
            \ read:client_credentials, read:client_summary."
          x-description-1: Some fields cannot be read with the permissions granted
            by the bearer token scopes. The message will vary depending on the fields
            and the scopes.
        "404":
          description: Client not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - read:clients
        - read:client_keys
        - read:client_credentials
        - read:client_summary
      summary: Get a client
      tags:
      - clients
      x-sdk-method-name: get
    patch:
      description: "Notes: \n- The `client_secret` and `signing_key` attributes can\
        \ only be updated with the `update:client_keys` scope.\n- The <code>client_authentication_methods</code>\
        \ and <code>token_endpoint_auth_method</code> properties are mutually exclusive.\
        \ Use \n<code>client_authentication_methods</code> to configure the client\
        \ with Private Key JWT authentication method. Otherwise, use <code>token_endpoint_auth_method</code>\n\
        to configure the client with client secret (basic or post) or with no authentication\
        \ method (none).\n- When using <code>client_authentication_methods</code>\
        \ to configure the client with Private Key JWT authentication method, only\
        \ specify the credential IDs \nthat were generated when creating the credentials\
        \ on the client.\n- To configure <code>client_authentication_methods</code>,\
        \ the <code>update:client_credentials</code> scope is required. \n- To configure\
        \ <code>client_authentication_methods</code>, the property <code>jwt_configuration.alg</code>\
        \ must be set to RS256."
      operationId: patch_clients_by_id
      parameters:
      - description: ID of the client to update.
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clientUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/clientUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
          description: Client successfully updated.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:clients, update:client_keys."
          x-description-1: Some fields cannot be updated with the permissions granted
            by the bearer token scopes. The message will vary depending on the fields
            and the scopes.
          x-description-2: The account is not allowed to perform this operation.
          x-description-3: Organizations are only available to first party clients.
        "404":
          description: Client not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:clients
        - update:client_keys
        - update:client_credentials
      summary: Update a client
      tags:
      - clients
      x-sdk-method-name: update
  /clients/{client_id}/rotate-secret:
    post:
      description: "Rotate a client secret.\n\nThis endpoint cannot be used with clients\
        \ configured with Private Key JWT authentication method (client_authentication_methods\
        \ configured with private_key_jwt). \n\nNote: The generated secret is NOT\
        \ base64 encoded.\n"
      operationId: post_rotate-secret
      parameters:
      - description: ID of the client that will rotate secrets.
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
          description: Secret successfully rotated.
        "400":
          description: Invalid request URI. The message will vary depending on the
            cause.
          x-description-1: Invalid request body. The message will vary depending on
            the cause.
        "401":
          description: Invalid token.
          x-description-1: Client is not global.
          x-description-2: Invalid signature received for JSON Web Token validation.
        "403":
          description: "Insufficient scope; expected any of: update:client_keys."
          x-description-1: Some fields cannot be updated with the permissions granted
            by the bearer token scopes. The message will vary depending on the fields
            and the scopes.
        "404":
          description: Client not found.
        "429":
          description: "Too many requests. Check the X-RateLimit-Limit, X-RateLimit-Remaining\
            \ and X-RateLimit-Reset headers."
      security:
      - bearerAuth: []
      - oAuth2ClientCredentials:
        - update:client_keys
      summary: Rotate a client secret
      tags:
      - clients
      x-sdk-method-name: rotateClientSecret
components:
  schemas:
    actionsDraftUpdate:
      additionalProperties: false
      properties:
        update_draft:
          default: false
          description: True if the draft of the action should be updated with the
            reverted version.
          type: boolean
      type: object
    token:
      additionalProperties: false
      example:
        aud: aud
        jti: jti
      properties:
        aud:
          description: JWT's aud claim (the client_id to which the JWT was issued).
          type: string
        jti:
          description: jti (unique ID within aud) of the blacklisted JWT.
          minLength: 1
          type: string
      required:
      - jti
      type: object
    clientGrant:
      additionalProperties: false
      example:
        audience: audience
        scope:
        - scope
        - scope
        id: id
        client_id: client_id
      properties:
        id:
          description: ID of the client grant.
          type: string
        client_id:
          description: ID of the client.
          type: string
        audience:
          description: The audience (API identifier) of this client grant.
          minLength: 1
          type: string
        scope:
          description: Scopes allowed for this client grant.
          items:
            minLength: 1
            type: string
          type: array
      type: object
    clientGrantCreate:
      additionalProperties: false
      properties:
        client_id:
          description: ID of the client.
          type: string
        audience:
          description: The audience (API identifier) of this client grant
          minLength: 1
          type: string
        scope:
          description: Scopes allowed for this client grant.
          items:
            maxLength: 280
            minLength: 1
            type: string
          type: array
      required:
      - audience
      - client_id
      - scope
      type: object
    client:
      additionalProperties: true
      example:
        cross_origin_loc: cross_origin_loc
        sso_disabled: false
        app_type: ""
        addons:
          concur:
            key: ""
          wams:
            masterkey: masterkey
          box:
            key: ""
          sharepoint:
            external_url:
            - client_addons_sharepoint_external_url
            - client_addons_sharepoint_external_url
            url: url
          echosign:
            domain: domain
          mscrm:
            url: url
          newrelic:
            account: account
          layer:
            principal: principal
            privateKey: privateKey
            providerId: providerId
            keyId: keyId
            expiration: 7
          salesforce:
            entity_id: entity_id
          springcm:
            acsurl: acsurl
          salesforce_sandbox_api:
            principal: principal
            clientid: clientid
            community_url_section: community_url_section
            communityName: communityName
          oag: "{}"
          slack:
            team: team
          azure_sb:
            entityPath: entityPath
            sasKey: sasKey
            namespace: namespace
            sasKeyName: sasKeyName
            expiration: 5
          office365:
            domain: domain
            connection: connection
          rms:
            url: url
          sentry:
            base_url: base_url
            org_slug: org_slug
          samlp:
            audience: audience
            authnContextClassRef: authnContextClassRef
            nameIdentifierProbes:
            - nameIdentifierProbes
            - nameIdentifierProbes
            destination: destination
            digestAlgorithm: digestAlgorithm
            signatureAlgorithm: signatureAlgorithm
            issuer: issuer
            passthroughClaimsWithNoMapping: true
            mapIdentities: true
            mappings:
              key: ""
            nameIdentifierFormat: nameIdentifierFormat
            mapUnknownClaimsAsIs: true
            recipient: recipient
            lifetimeInSeconds: 2
            createUpnClaim: true
            signResponse: true
          egnyte:
            domain: domain
          zoom:
            account: account
          wsfed:
            key: ""
          firebase:
            lifetime_in_seconds: 5
            private_key_id: private_key_id
            client_email: client_email
            private_key: private_key
            secret: secret
          azure_blob:
            blobName: blobName
            container_list: true
            storageAccessKey: storageAccessKey
            accountName: accountName
            blob_read: true
            container_read: true
            blob_delete: true
            signedIdentifier: signedIdentifier
            containerName: containerName
            container_delete: true
            expiration: 1
            container_write: true
            blob_write: true
          zendesk:
            accountName: accountName
          salesforce_api:
            principal: principal
            clientid: clientid
            community_url_section: community_url_section
            communityName: communityName
          dropbox:
            key: ""
          sap_api:
            clientid: clientid
            nameIdentifierFormat: nameIdentifierFormat
            servicePassword: servicePassword
            scope: scope
            tokenEndpointUrl: tokenEndpointUrl
            usernameAttribute: usernameAttribute
          cloudbees:
            key: ""
          aws:
            principal: principal
            role: role
            lifetime_in_seconds: 6
          sso_integration:
            name: name
            version: version
        initiate_login_uri: initiate_login_uri
        logo_uri: logo_uri
        description: ""
        callbacks:
        - callbacks
        - callbacks
        global: false
        oidc_conformant: false
        client_aliases:
        - client_aliases
        - client_aliases
        client_id: AaiyAPdpYdesoKnqjj8HJqRn4T5titww
        sso: false
        token_endpoint_auth_method: none
        native_social_login:
          apple:
            enabled: false
          facebook:
            enabled: false
        compliance_level: none
        allowed_clients:
        - allowed_clients
        - allowed_clients
        oidc_logout:
          backchannel_logout_urls:
          - backchannel_logout_urls
          - backchannel_logout_urls
        require_pushed_authorization_requests: false
        allowed_logout_urls:
        - allowed_logout_urls
        - allowed_logout_urls
        custom_login_page_on: true
        client_secret: MG_TNT2ver-SylNat-_VeMmd-4m0Waba0jr1troztBniSChEw0glxEmgEi2Kw40H
        require_proof_of_possession: false
        tenant: ""
        allowed_origins:
        - allowed_origins
        - allowed_origins
        cross_origin_authentication: true
        custom_login_page: ""
        organization_require_behavior: no_prompt
        is_first_party: false
        grant_types:
        - grant_types
        - grant_types
        signed_request_object:
          credentials:
          - id: id
          - id: id
          required: false
        mobile:
          android:
            app_package_name: ""
            sha256_cert_fingerprints:
            - sha256_cert_fingerprints
            - sha256_cert_fingerprints
          ios:
            app_bundle_identifier: ""
            team_id: ""
        signing_keys:
        - pkcs7: ""
          subject: ""
          cert: ""
        - pkcs7: ""
          subject: ""
          cert: ""
        organization_usage: deny
        form_template: ""
        jwt_configuration:
          lifetime_in_seconds: 0
          secret_encoded: true
          scopes:
            key: ""
          alg: HS256
        refresh_token:
          expiration_type: non-expiring
          token_lifetime: 3
          idle_token_lifetime: 2
          infinite_idle_token_lifetime: false
          infinite_token_lifetime: true
          rotation_type: non-rotating
          leeway: 9
        client_authentication_methods:
          private_key_jwt:
            credentials:
            - id: id
            - id: id
          self_signed_tls_client_auth:
            credentials:
            - id: id
            - id: id
          tls_client_auth:
            credentials:
            - id: id
            - id: id
        custom_login_page_preview: ""
        name: My application
        encryption_key:
          subject: subject
          cert: cert
          pub: pub
        web_origins:
        - web_origins
        - web_origins
        client_metadata:
          key: ""
      properties:
        client_id:
          default: AaiyAPdpYdesoKnqjj8HJqRn4T5titww
          description: ID of this client.
          type: string
        tenant:
          default: ""
          description: Name of the tenant this client belongs to.
          type: string
        name:
          default: My application
          description: "Name of this client (min length: 1 character, does not allow\
            \ `<` or `>`)."
          type: string
        description:
          default: ""
          description: "Free text description of this client (max length: 140 characters)."
          type: string
        global:
          default: false
          description: Whether this is your global 'All Applications' client representing
            legacy tenant settings (true) or a regular client (false).
          type: boolean
        client_secret:
          default: MG_TNT2ver-SylNat-_VeMmd-4m0Waba0jr1troztBniSChEw0glxEmgEi2Kw40H
          description: Client secret (which you must not make public).
          type: string
        app_type:
          default: ""
          description: "Type of client used to determine which settings are applicable.\
            \ Can be `spa`, `native`, `non_interactive`, or `regular_web`."
          type: string
        logo_uri:
          description: URL of the logo to display for this client. Recommended size
            is 150x150 pixels.
          type: string
        is_first_party:
          default: false
          description: Whether this client a first party client (true) or not (false).
          type: boolean
        oidc_conformant:
          default: false
          description: Whether this client conforms to <a href='https://auth0.com/docs/api-auth/tutorials/adoption'>strict
            OIDC specifications</a> (true) or uses legacy features (false).
          type: boolean
        callbacks:
          description: Comma-separated list of URLs whitelisted for Auth0 to use as
            a callback to the client after authentication.
          items:
            type: string
          type: array
        allowed_origins:
          description: "Comma-separated list of URLs allowed to make requests from\
            \ JavaScript to Auth0 API (typically used with CORS). By default, all\
            \ your callback URLs will be allowed. This field allows you to enter other\
            \ origins if necessary. You can also use wildcards at the subdomain level\
            \ (e.g., https://*.contoso.com). Query strings and hash information are\
            \ not taken into account when validating these URLs."
          items:
            type: string
          type: array
        web_origins:
          description: "Comma-separated list of allowed origins for use with <a href='https://auth0.com/docs/cross-origin-authentication'>Cross-Origin\
            \ Authentication</a>, <a href='https://auth0.com/docs/flows/concepts/device-auth'>Device\
            \ Flow</a>, and <a href='https://auth0.com/docs/protocols/oauth2#how-response-mode-works'>web\
            \ message response mode</a>."
          items:
            type: string
          type: array
        client_aliases:
          description: List of audiences/realms for SAML protocol. Used by the wsfed
            addon.
          items:
            type: string
          type: array
        allowed_clients:
          description: List of allow clients and API ids that are allowed to make
            delegation requests. Empty means all all your clients are allowed.
          items:
            type: string
          type: array
        allowed_logout_urls:
          description: Comma-separated list of URLs that are valid to redirect to
            after logout from Auth0. Wildcards are allowed for subdomains.
          items:
            type: string
          type: array
        oidc_logout:
          $ref: '#/components/schemas/client_oidc_logout'
        grant_types:
          description: "List of grant types supported for this application. Can include\
            \ `authorization_code`, `implicit`, `refresh_token`, `client_credentials`,\
            \ `password`, `http://auth0.com/oauth/grant-type/password-realm`, `http://auth0.com/oauth/grant-type/mfa-oob`,\
            \ `http://auth0.com/oauth/grant-type/mfa-otp`, `http://auth0.com/oauth/grant-type/mfa-recovery-code`,\
            \ and `urn:ietf:params:oauth:grant-type:device_code`."
          items:
            type: string
          type: array
        jwt_configuration:
          $ref: '#/components/schemas/client_jwt_configuration'
        signing_keys:
          description: Signing certificates associated with this client.
          items:
            $ref: '#/components/schemas/client_signing_keys_inner'
          type: array
        encryption_key:
          $ref: '#/components/schemas/client_encryption_key'
        sso:
          default: false
          description: Applies only to SSO clients and determines whether Auth0 will
            handle Single Sign On (true) or whether the Identity Provider will (false).
          type: boolean
        sso_disabled:
          default: false
          description: Whether Single Sign On is disabled (true) or enabled (true).
            Defaults to true.
          type: boolean
        cross_origin_authentication:
          description: Whether this client can be used to make cross-origin authentication
            requests (true) or it is not allowed to make such requests (false).
          type: boolean
        cross_origin_loc:
          description: URL of the location in your site where the cross origin verification
            takes place for the cross-origin auth flow when performing Auth in your
            own domain instead of Auth0 hosted login page.
          type: string
        custom_login_page_on:
          default: true
          description: Whether a custom login page is to be used (true) or the default
            provided login page (false).
          type: boolean
        custom_login_page:
          default: ""
          description: "The content (HTML, CSS, JS) of the custom login page."
          type: string
        custom_login_page_preview:
          default: ""
          description: "The content (HTML, CSS, JS) of the custom login page. (Used\
            \ on Previews)"
          type: string
        form_template:
          default: ""
          description: HTML form template to be used for WS-Federation.
          type: string
        addons:
          $ref: '#/components/schemas/client_addons'
        token_endpoint_auth_method:
          $ref: '#/components/schemas/client_token_endpoint_auth_method'
        client_metadata:
          additionalProperties: true
          description: "Metadata associated with the client, in the form of an object\
            \ with string values (max 255 chars).  Maximum of 10 metadata properties\
            \ allowed.  Field names (max 255 chars) are alphanumeric and may only\
            \ include the following special characters:  :,-+=_*?\"/\\()<>@\t[Tab]\
            \ [Space]"
          type: object
        mobile:
          $ref: '#/components/schemas/client_mobile'
        initiate_login_uri:
          description: "Initiate login uri, must be https"
          type: string
        native_social_login:
          $ref: '#/components/schemas/client_native_social_login'
        refresh_token:
          $ref: '#/components/schemas/client_refresh_token'
        organization_usage:
          $ref: '#/components/schemas/client_organization_usage'
        organization_require_behavior:
          $ref: '#/components/schemas/client_organization_require_behavior'
        client_authentication_methods:
          $ref: '#/components/schemas/client_client_authentication_methods'
        require_pushed_authorization_requests:
          default: false
          description: Makes the use of Pushed Authorization Requests mandatory for
            this client
          type: boolean
        signed_request_object:
          $ref: '#/components/schemas/client_signed_request_object'
        require_proof_of_possession:
          default: false
          description: Makes the use of Proof-of-Possession mandatory for this client
          type: boolean
        compliance_level:
          $ref: '#/components/schemas/client_compliance_level'
      type: object
    clientCreate:
      additionalProperties: false
      properties:
        name:
          description: "Name of this client (min length: 1 character, does not allow\
            \ `<` or `>`)."
          type: string
        description:
          description: "Free text description of this client (max length: 140 characters)."
          maxLength: 140
          type: string
        logo_uri:
          description: URL of the logo to display for this client. Recommended size
            is 150x150 pixels.
          type: string
        callbacks:
          description: Comma-separated list of URLs whitelisted for Auth0 to use as
            a callback to the client after authentication.
          items:
            type: string
          type: array
        oidc_logout:
          $ref: '#/components/schemas/clientCreate_oidc_logout'
        allowed_origins:
          description: "Comma-separated list of URLs allowed to make requests from\
            \ JavaScript to Auth0 API (typically used with CORS). By default, all\
            \ your callback URLs will be allowed. This field allows you to enter other\
            \ origins if necessary. You can also use wildcards at the subdomain level\
            \ (e.g., https://*.contoso.com). Query strings and hash information are\
            \ not taken into account when validating these URLs."
          items:
            type: string
          type: array
        web_origins:
          description: "Comma-separated list of allowed origins for use with <a href='https://auth0.com/docs/cross-origin-authentication'>Cross-Origin\
            \ Authentication</a>, <a href='https://auth0.com/docs/flows/concepts/device-auth'>Device\
            \ Flow</a>, and <a href='https://auth0.com/docs/protocols/oauth2#how-response-mode-works'>web\
            \ message response mode</a>."
          items:
            type: string
          type: array
        client_aliases:
          description: List of audiences/realms for SAML protocol. Used by the wsfed
            addon.
          items:
            minLength: 1
            type: string
          type: array
        allowed_clients:
          description: List of allow clients and API ids that are allowed to make
            delegation requests. Empty means all all your clients are allowed.
          items:
            minLength: 1
            type: string
          type: array
        allowed_logout_urls:
          description: Comma-separated list of URLs that are valid to redirect to
            after logout from Auth0. Wildcards are allowed for subdomains.
          items:
            type: string
          type: array
        grant_types:
          description: "List of grant types supported for this application. Can include\
            \ `authorization_code`, `implicit`, `refresh_token`, `client_credentials`,\
            \ `password`, `http://auth0.com/oauth/grant-type/password-realm`, `http://auth0.com/oauth/grant-type/mfa-oob`,\
            \ `http://auth0.com/oauth/grant-type/mfa-otp`, `http://auth0.com/oauth/grant-type/mfa-recovery-code`,\
            \ and `urn:ietf:params:oauth:grant-type:device_code`."
          items:
            minLength: 1
            type: string
          type: array
        token_endpoint_auth_method:
          $ref: '#/components/schemas/clientCreate_token_endpoint_auth_method'
        app_type:
          $ref: '#/components/schemas/clientCreate_app_type'
        is_first_party:
          default: true
          description: Whether this client a first party client or not
          type: boolean
        oidc_conformant:
          default: false
          description: Whether this client conforms to <a href='https://auth0.com/docs/api-auth/tutorials/adoption'>strict
            OIDC specifications</a> (true) or uses legacy features (false).
          type: boolean
        jwt_configuration:
          $ref: '#/components/schemas/clientCreate_jwt_configuration'
        encryption_key:
          $ref: '#/components/schemas/clientCreate_encryption_key'
        sso:
          description: Applies only to SSO clients and determines whether Auth0 will
            handle Single Sign On (true) or whether the Identity Provider will (false).
          type: boolean
        cross_origin_authentication:
          description: Whether this client can be used to make cross-origin authentication
            requests (true) or it is not allowed to make such requests (false).
          type: boolean
        cross_origin_loc:
          description: URL of the location in your site where the cross origin verification
            takes place for the cross-origin auth flow when performing Auth in your
            own domain instead of Auth0 hosted login page.
          type: string
        sso_disabled:
          description: "<code>true</code> to disable Single Sign On, <code>false</code>\
            \ otherwise (default: <code>false</code>)"
          type: boolean
        custom_login_page_on:
          description: "<code>true</code> if the custom login page is to be used,\
            \ <code>false</code> otherwise. Defaults to <code>true</code>"
          type: boolean
        custom_login_page:
          description: "The content (HTML, CSS, JS) of the custom login page."
          minLength: 1
          type: string
        custom_login_page_preview:
          description: "The content (HTML, CSS, JS) of the custom login page. (Used\
            \ on Previews)"
          minLength: 1
          type: string
        form_template:
          description: HTML form template to be used for WS-Federation.
          minLength: 1
          type: string
        addons:
          $ref: '#/components/schemas/client_addons'
        client_metadata:
          additionalProperties: true
          description: "Metadata associated with the client, in the form of an object\
            \ with string values (max 255 chars).  Maximum of 10 metadata properties\
            \ allowed.  Field names (max 255 chars) are alphanumeric and may only\
            \ include the following special characters:  :,-+=_*?\"/\\()<>@\t[Tab]\
            \ [Space]"
          type: object
        mobile:
          $ref: '#/components/schemas/clientCreate_mobile'
        initiate_login_uri:
          description: "Initiate login uri, must be https"
          type: string
        native_social_login:
          $ref: '#/components/schemas/client_native_social_login'
        refresh_token:
          $ref: '#/components/schemas/client_refresh_token'
        organization_usage:
          $ref: '#/components/schemas/client_organization_usage'
        organization_require_behavior:
          $ref: '#/components/schemas/client_organization_require_behavior'
        client_authentication_methods:
          $ref: '#/components/schemas/clientCreate_client_authentication_methods'
        require_pushed_authorization_requests:
          default: false
          description: Makes the use of Pushed Authorization Requests mandatory for
            this client
          type: boolean
        signed_request_object:
          $ref: '#/components/schemas/clientCreate_signed_request_object'
        require_proof_of_possession:
          default: false
          description: Makes the use of Proof-of-Possession mandatory for this client
          type: boolean
        compliance_level:
          $ref: '#/components/schemas/client_compliance_level'
      required:
      - name
      type: object
    clientUpdate:
      additionalProperties: false
      properties:
        name:
          description: The name of the client. Must contain at least one character.
            Does not allow '<' or '>'.
          type: string
        description:
          description: "Free text description of the purpose of the Client. (Max character\
            \ length: <code>140</code>)"
          maxLength: 140
          type: string
        client_secret:
          description: The secret used to sign tokens for the client
          minLength: 1
          type: string
        logo_uri:
          description: "The URL of the client logo (recommended size: 150x150)"
          type: string
        callbacks:
          description: A set of URLs that are valid to call back from Auth0 when authenticating
            users
          items:
            type: string
          type: array
        oidc_logout:
          $ref: '#/components/schemas/clientUpdate_oidc_logout'
        allowed_origins:
          description: A set of URLs that represents valid origins for CORS
          items:
            type: string
          type: array
        web_origins:
          description: A set of URLs that represents valid web origins for use with
            web message response mode
          items:
            type: string
          type: array
        grant_types:
          description: A set of grant types that the client is authorized to use
          items:
            minLength: 1
            type: string
          type: array
        client_aliases:
          description: List of audiences for SAML protocol
          items:
            minLength: 1
            type: string
          type: array
        allowed_clients:
          description: "Ids of clients that will be allowed to perform delegation\
            \ requests. Clients that will be allowed to make delegation request. By\
            \ default, all your clients will be allowed. This field allows you to\
            \ specify specific clients"
          items:
            minLength: 1
            type: string
          type: array
        allowed_logout_urls:
          description: URLs that are valid to redirect to after logout from Auth0.
          items:
            type: string
          type: array
        jwt_configuration:
          $ref: '#/components/schemas/clientUpdate_jwt_configuration'
        encryption_key:
          $ref: '#/components/schemas/clientUpdate_encryption_key'
        sso:
          description: "<code>true</code> to use Auth0 instead of the IdP to do Single\
            \ Sign On, <code>false</code> otherwise (default: <code>false</code>)"
          type: boolean
        cross_origin_authentication:
          description: "<code>true</code> if this client can be used to make cross-origin\
            \ authentication requests, <code>false</code> otherwise if cross origin\
            \ is disabled"
          type: boolean
        cross_origin_loc:
          description: URL for the location in your site where the cross origin verification
            takes place for the cross-origin auth flow when performing Auth in your
            own domain instead of Auth0 hosted login page.
          nullable: true
          type: string
        sso_disabled:
          description: "<code>true</code> to disable Single Sign On, <code>false</code>\
            \ otherwise (default: <code>false</code>)"
          type: boolean
        custom_login_page_on:
          description: "<code>true</code> if the custom login page is to be used,\
            \ <code>false</code> otherwise."
          type: boolean
        token_endpoint_auth_method:
          $ref: '#/components/schemas/clientUpdate_token_endpoint_auth_method'
        app_type:
          $ref: '#/components/schemas/clientUpdate_app_type'
        is_first_party:
          default: true
          description: Whether this client a first party client or not
          type: boolean
        oidc_conformant:
          default: false
          description: Whether this client will conform to strict OIDC specifications
          type: boolean
        custom_login_page:
          description: "The content (HTML, CSS, JS) of the custom login page"
          type: string
        custom_login_page_preview:
          type: string
        form_template:
          description: Form template for WS-Federation protocol
          type: string
        addons:
          $ref: '#/components/schemas/clientUpdate_addons'
        client_metadata:
          additionalProperties: true
          description: "Metadata associated with the client, in the form of an object\
            \ with string values (max 255 chars).  Maximum of 10 metadata properties\
            \ allowed.  Field names (max 255 chars) are alphanumeric and may only\
            \ include the following special characters:  :,-+=_*?\"/\\()<>@\t[Tab]\
            \ [Space]"
          type: object
        mobile:
          $ref: '#/components/schemas/clientUpdate_mobile'
        initiate_login_uri:
          description: "Initiate login uri, must be https"
          type: string
        native_social_login:
          $ref: '#/components/schemas/client_native_social_login'
        refresh_token:
          $ref: '#/components/schemas/client_refresh_token'
        organization_usage:
          $ref: '#/components/schemas/client_organization_usage'
        organization_require_behavior:
          $ref: '#/components/schemas/client_organization_require_behavior'
        client_authentication_methods:
          $ref: '#/components/schemas/client_client_authentication_methods'
        require_pushed_authorization_requests:
          default: false
          description: Makes the use of Pushed Authorization Requests mandatory for
            this client
          type: boolean
        signed_request_object:
          $ref: '#/components/schemas/clientUpdate_signed_request_object'
        require_proof_of_possession:
          default: false
          description: Makes the use of Proof-of-Possession mandatory for this client
          type: boolean
        compliance_level:
          $ref: '#/components/schemas/client_compliance_level'
      type: object
    connection:
      additionalProperties: false
      example:
        realms:
        - realms
        - realms
        metadata:
          key: ""
        enabled_clients:
        - enabled_clients
        - enabled_clients
        is_domain_connection: true
        name: My connection
        options:
          key: ""
        id: con_0000000000000001
        display_name: display_name
        strategy: auth0
      properties:
        name:
          default: My connection
          description: The name of the connection
          type: string
        display_name:
          description: Connection name used in login screen
          type: string
        options:
          additionalProperties: true
          type: object
        id:
          default: con_0000000000000001
          description: The connection's identifier
          type: string
        strategy:
          default: auth0
          description: "The type of the connection, related to the identity provider"
          type: string
        realms:
          description: "Defines the realms for which the connection will be used (ie:\
            \ email domains). If the array is empty or the property is not specified,\
            \ the connection name will be added as realm."
          items:
            description: The realm where this connection belongs
            format: connection-realm
            type: string
          type: array
        enabled_clients:
          description: The ids of the clients for which the connection is enabled
          items:
            description: The client id
            type: string
          type: array
        is_domain_connection:
          description: True if the connection is domain level
          type: boolean
        metadata:
          additionalProperties: true
          description: Metadata associated with the connection in the form of an object
            with string values (max 255 chars).  Maximum of 10 metadata properties
            allowed.
          type: object
      type: object
    connectionCreate:
      additionalProperties: false
      properties:
        name:
          description: The name of the connection. Must start and end with an alphanumeric
            character and can only contain alphanumeric characters and '-'. Max length
            128
          maxLength: 128
          type: string
        display_name:
          description: Connection name used in the new universal login experience
          maxLength: 128
          type: string
        strategy:
          $ref: '#/components/schemas/connectionCreate_strategy'
        options:
          $ref: '#/components/schemas/connectionCreate_options'
        enabled_clients:
          description: "The identifiers of the clients for which the connection is\
            \ to be enabled. If the array is empty or the property is not specified,\
            \ no clients are enabled"
          items:
            description: 'The id of the client to for which the connection is to be
              enabled. '
            type: string
          type: array
        is_domain_connection:
          type: boolean
        realms:
          description: "Defines the realms for which the connection will be used (ie:\
            \ email domains). If the array is empty or the property is not specified,\
            \ the connection name will be added as realm."
          items:
            description: The realm where this connection belongs
            type: string
          type: array
        metadata:
          additionalProperties: true
          description: Metadata associated with the connection in the form of an object
            with string values (max 255 chars).  Maximum of 10 metadata properties
            allowed.
          type: object
      required:
      - name
      - strategy
      type: object
    connectionUpdate:
      additionalProperties: false
      properties:
        display_name:
          description: "The connection name used in the new universal login experience.\
            \ If display_name is not included in the request, the field will be overwritten\
            \ with the name value."
          maxLength: 128
          type: string
        options:
          $ref: '#/components/schemas/connectionUpdate_options'
        enabled_clients:
          description: "The identifiers of the clients for which the connection is\
            \ to be enabled. If the property is not specified, no clients are enabled.\
            \ If the array is empty, the connection will be disabled for every client."
          items:
            description: The client_id of the client to for which the connection is
              to be enabled
            type: string
          type: array
        is_domain_connection:
          type: boolean
        realms:
          description: "Defines the realms for which the connection will be used (ie:\
            \ email domains). If the array is empty or the property is not specified,\
            \ the connection name will be added as realm."
          items:
            description: The realm where this connection belongs
            type: string
          type: array
        metadata:
          additionalProperties: true
          description: Metadata associated with the connection in the form of an object
            with string values (max 255 chars).  Maximum of 10 metadata properties
            allowed.
          type: object
      type: object
    customDomain:
      additionalProperties: false
      example:
        custom_domain_id: cd_0000000000000001
        domain: login.mycompany.com
        origin_domain_name: mycompany_cd_0000000000000001.edge.tenants.auth0.com
        type: self_managed_certs
        tls_policy: recommended
        custom_client_ip_header: custom_client_ip_header
        verification:
          methods:
          - record: auth0-domain-verification=...
            domain: _cf-custom-hostname.login.mycompany.com
            name: txt
          - record: auth0-domain-verification=...
            domain: _cf-custom-hostname.login.mycompany.com
            name: txt
        primary: false
        status: ready
      properties:
        custom_domain_id:
          default: cd_0000000000000001
          description: ID of the custom domain.
          type: string
        domain:
          default: login.mycompany.com
          description: Domain name.
          type: string
        primary:
          default: false
          description: Whether this is a primary domain (true) or not (false).
          type: boolean
        status:
          $ref: '#/components/schemas/post_custom_domains_201_response_status'
        type:
          $ref: '#/components/schemas/post_custom_domains_201_response_type'
        origin_domain_name:
          default: mycompany_cd_0000000000000001.edge.tenants.auth0.com
          description: Intermediate address.
          type: string
        verification:
          $ref: '#/components/schemas/post_custom_domains_201_response_verification'
        custom_client_ip_header:
          description: The HTTP header to fetch the client's IP address
          nullable: true
          type: string
        tls_policy:
          default: recommended
          description: The TLS version policy
          type: string
      required:
      - custom_domain_id
      - domain
      - primary
      - status
      - type
      type: object
    deviceCredential:
      additionalProperties: false
      example:
        device_name: iPhone Mobile Safari UI/WKWebView
        device_id: 550e8400-e29b-41d4-a716-446655440000
        user_id: usr_5457edea1b8f33391a000004
        id: dcr_0000000000000001
        type: public_key
        client_id: AaiyAPdpYdesoKnqjj8HJqRn4T5titww
      properties:
        id:
          default: dcr_0000000000000001
          description: ID of this device.
          type: string
        device_name:
          default: iPhone Mobile Safari UI/WKWebView
          description: User agent for this device
          type: string
        device_id:
          default: 550e8400-e29b-41d4-a716-446655440000
          description: "Unique identifier for the device. NOTE: This field is generally\
            \ not populated for refresh_tokens and rotating_refresh_tokens"
          type: string
        type:
          $ref: '#/components/schemas/deviceCredential_type'
        user_id:
          default: usr_5457edea1b8f33391a000004
          description: user_id this credential is associated with.
          type: string
        client_id:
          default: AaiyAPdpYdesoKnqjj8HJqRn4T5titww
          description: client_id of the client (application) this credential is for.
          type: string
      type: object
    deviceCredentialCreate:
      additionalProperties: true
      properties:
        device_name:
          description: Name for this device easily recognized by owner.
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/deviceCredentialCreate_type'
        value:
          description: Base64 encoded string containing the credential.
          minLength: 1
          type: string
        device_id:
          description: Unique identifier for the device. Recommend using <a href="http://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID">Android_ID</a>
            on Android and <a href="https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIDevice_Class/index.html#//apple_ref/occ/instp/UIDevice/identifierForVendor">identifierForVendor</a>.
          maxLength: 36
          type: string
        client_id:
          description: client_id of the client (application) this credential is for.
          type: string
      required:
      - device_id
      - device_name
      - type
      - value
      type: object
    emailTemplateUpdate:
      additionalProperties: false
      properties:
        template:
          $ref: '#/components/schemas/post_email_templates_request_template'
        body:
          description: Body of the email template.
          nullable: true
          type: string
        from:
          default: sender@auth0.com
          description: Senders `from` email address.
          nullable: true
          type: string
        resultUrl:
          description: URL to redirect the user to after a successful action.
          nullable: true
          type: string
        subject:
          description: Subject line of the email.
          nullable: true
          type: string
        syntax:
          default: liquid
          description: Syntax of the template body.
          nullable: true
          type: string
        urlLifetimeInSeconds:
          description: Lifetime in seconds that the link within the email will be
            valid for.
          nullable: true
          type: number
        includeEmailInRedirect:
          description: Whether the `reset_email` and `verify_email` templates should
            include the user's email address as the `email` parameter in the returnUrl
            (true) or whether no email address should be included in the redirect
            (false). Defaults to true.
          type: boolean
        enabled:
          description: Whether the template is enabled (true) or disabled (false).
          nullable: true
          type: boolean
      required:
      - body
      - enabled
      - from
      - subject
      - syntax
      - template
      type: object
    emailProvider:
      additionalProperties: false
      example:
        settings:
          key: ""
        default_from_address: default_from_address
        credentials:
          smtp_port: 0
          smtp_user: smtp_user
          api_user: api_user
          smtp_host: smtp_host
          region: region
        name: sendgrid
        enabled: true
      properties:
        name:
          default: sendgrid
          description: "Name of the email provider. Can be `mailgun`, `mandrill`,\
            \ `sendgrid`, `ses`, `sparkpost`, `smtp`, `azure_cs`, or `ms365`."
          type: string
        enabled:
          default: true
          description: Whether the provider is enabled (true) or disabled (false).
          type: boolean
        default_from_address:
          description: Email address to use as "from" when no other address specified.
          type: string
        credentials:
          $ref: '#/components/schemas/emailProvider_credentials'
        settings:
          additionalProperties: true
          description: Specific provider setting
          type: object
      type: object
    emailProviderUpdate:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/emailProviderUpdate_name'
        enabled:
          description: Whether the provider is enabled (true) or disabled (false).
          type: boolean
        default_from_address:
          description: Email address to use as "from" when no other address specified.
          type: string
        credentials:
          $ref: '#/components/schemas/emailProviderUpdate_credentials'
        settings:
          additionalProperties: true
          description: Specific provider setting
          nullable: true
          type: object
      type: object
    emailProviderCreate:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/emailProviderCreate_name'
        enabled:
          default: true
          description: Whether the provider is enabled (true) or disabled (false).
          type: boolean
        default_from_address:
          description: Email address to use as "from" when no other address specified.
          type: string
        credentials:
          $ref: '#/components/schemas/emailProviderCreate_credentials'
        settings:
          additionalProperties: true
          description: Specific provider setting
          nullable: true
          type: object
      required:
      - credentials
      - name
      type: object
    userGrant:
      additionalProperties: false
      example:
        audience: audience
        clientID: clientID
        user_id: user_id
        scope:
        - scope
        - scope
        id: id
      properties:
        id:
          description: ID of the grant.
          type: string
        clientID:
          description: ID of the client.
          type: string
        user_id:
          description: ID of the user.
          type: string
        audience:
          description: Audience of the grant.
          type: string
        scope:
          description: Scopes included in this grant.
          items:
            minLength: 1
            type: string
          type: array
      type: object
    enrollmentCreate:
      additionalProperties: false
      properties:
        user_id:
          description: user_id for the enrollment ticket
          type: string
        email:
          description: "alternate email to which the enrollment email will be sent.\
            \ Optional - by default, the email will be sent to the user's default\
            \ address"
          type: string
        send_mail:
          description: Send an email to the user to start the enrollment
          type: boolean
      required:
      - user_id
      type: object
    enrollment:
      additionalProperties: false
      example:
        identifier: 76dc-a90c-a88c-a90c-a88c-a88c-a90c
        enrolled_at: 2016-07-12T17:56:26.804Z
        name: iPhone 7
        last_auth: 2016-07-12T17:56:26.804Z
        phone_number: +1 999999999999
        id: dev_0000000000000001
        status: pending
      properties:
        id:
          default: dev_0000000000000001
          description: ID for this enrollment.
          type: string
        status:
          $ref: '#/components/schemas/enrollment_status'
        name:
          default: iPhone 7
          description: Device name (only for push notification).
          maxLength: 20
          minLength: 1
          type: string
        identifier:
          default: 76dc-a90c-a88c-a90c-a88c-a88c-a90c
          description: Device identifier. This is usually the phone identifier.
          type: string
        phone_number:
          default: +1 999999999999
          description: Phone number.
          type: string
        enrolled_at:
          $ref: '#/components/schemas/enrollment_enrolled_at'
        last_auth:
          $ref: '#/components/schemas/enrollment_last_auth'
      required:
      - id
      type: object
    factor:
      additionalProperties: false
      example:
        name: sms
        trial_expired: true
        enabled: true
      properties:
        enabled:
          default: true
          description: Whether this factor is enabled (true) or disabled (false).
          type: boolean
        trial_expired:
          default: true
          description: Whether trial limits have been exceeded.
          type: boolean
        name:
          $ref: '#/components/schemas/factor_name'
      required:
      - enabled
      type: object
    twilioFactorProvider:
      additionalProperties: false
      example:
        messaging_service_sid: 5dEkAiHLPCuQ1uJj4qNXcAnERFAL6cpq
        from: "+1223323"
        auth_token: zw5Ku6z2sxhd0ZVXto5SDHX6KPDByJPU
        sid: wywA2BH4VqTpfywiDuyDAYZL3xQjoO40
      properties:
        from:
          default: "+1223323"
          description: From number
          maxLength: 64
          minLength: 0
          nullable: true
          type: string
        messaging_service_sid:
          default: 5dEkAiHLPCuQ1uJj4qNXcAnERFAL6cpq
          description: Copilot SID
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        auth_token:
          default: zw5Ku6z2sxhd0ZVXto5SDHX6KPDByJPU
          description: Twilio Authentication token
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        sid:
          default: wywA2BH4VqTpfywiDuyDAYZL3xQjoO40
          description: Twilio SID
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
      type: object
    templateMessages:
      additionalProperties: false
      example:
        verification_message: "{{code}} is your verification code for {{tenant.friendly_name}}"
        enrollment_message: "{{code}} is your verification code for {{tenant.friendly_name}}.\
          \ Please enter this code to verify your enrollment."
      properties:
        enrollment_message:
          default: "{{code}} is your verification code for {{tenant.friendly_name}}.\
            \ Please enter this code to verify your enrollment."
          description: Message sent to the user when they are invited to enroll with
            a phone number.
          type: string
        verification_message:
          default: "{{code}} is your verification code for {{tenant.friendly_name}}"
          description: Message sent to the user when they are prompted to verify their
            account.
          type: string
      required:
      - enrollment_message
      - verification_message
      type: object
    snsFactorProvider:
      additionalProperties: false
      example:
        aws_access_key_id: wywA2BH4VqTpfywiDuyDAYZL3xQjoO40
        aws_region: us-west-1
        aws_secret_access_key: B1ER5JHDGJL3C4sVAKK7SBsq806R3IpL
        sns_apns_platform_application_arn: sns_apns_platform_application_arn
        sns_gcm_platform_application_arn: urn://yRMeBxgcCXh8MeTXPBAxhQnm6gP6f5nP
      properties:
        aws_access_key_id:
          default: wywA2BH4VqTpfywiDuyDAYZL3xQjoO40
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        aws_secret_access_key:
          default: B1ER5JHDGJL3C4sVAKK7SBsq806R3IpL
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        aws_region:
          default: us-west-1
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        sns_apns_platform_application_arn:
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        sns_gcm_platform_application_arn:
          default: urn://yRMeBxgcCXh8MeTXPBAxhQnm6gP6f5nP
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
      type: object
    smsTwilioFactorProvider:
      additionalProperties: false
      example:
        messaging_service_sid: 5dEkAiHLPCuQ1uJj4qNXcAnERFAL6cpq
        from: "+1223323"
        auth_token: zw5Ku6z2sxhd0ZVXto5SDHX6KPDByJPU
        sid: wywA2BH4VqTpfywiDuyDAYZL3xQjoO40
      properties:
        from:
          default: "+1223323"
          description: From number
          maxLength: 64
          minLength: 0
          nullable: true
          type: string
        messaging_service_sid:
          default: 5dEkAiHLPCuQ1uJj4qNXcAnERFAL6cpq
          description: Copilot SID
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        auth_token:
          default: zw5Ku6z2sxhd0ZVXto5SDHX6KPDByJPU
          description: Twilio Authentication token
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        sid:
          default: wywA2BH4VqTpfywiDuyDAYZL3xQjoO40
          description: Twilio SID
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
      type: object
    hook:
      additionalProperties: false
      example:
        triggerId: triggerId
        name: hook
        id: "00001"
        enabled: true
        script: "module.exports = function(client, scope, audience, context, cb) cb(null,\
          \ access_token); };"
        dependencies:
          key: ""
      properties:
        triggerId:
          description: Trigger ID
          type: string
        id:
          default: "00001"
          description: ID of this hook.
          type: string
        name:
          default: hook
          description: Name of this hook.
          type: string
        enabled:
          default: true
          description: Whether this hook will be executed (true) or ignored (false).
          type: boolean
        script:
          default: "module.exports = function(client, scope, audience, context, cb)\
            \ cb(null, access_token); };"
          description: Code to be executed when this hook runs.
          type: string
        dependencies:
          additionalProperties: true
          description: Dependencies of this hook used by webtask server.
          type: object
      type: object
    hookCreate:
      additionalProperties: false
      properties:
        name:
          default: my-hook
          description: Name of this hook.
          type: string
        script:
          default: "module.exports = function(client, scope, audience, context, cb)\
            \ cb(null, access_token); };"
          description: Code to be executed when this hook runs.
          minLength: 1
          type: string
        enabled:
          default: false
          description: Whether this hook will be executed (true) or ignored (false).
          type: boolean
        dependencies:
          additionalProperties: true
          description: Dependencies of this hook used by webtask server.
          type: object
        triggerId:
          $ref: '#/components/schemas/hookCreate_triggerId'
      required:
      - name
      - script
      - triggerId
      type: object
    hookUpdate:
      additionalProperties: false
      properties:
        name:
          default: my-hook
          description: Name of this hook.
          type: string
        script:
          default: "module.exports = function(client, scope, audience, context, cb)\
            \ cb(null, access_token); };"
          description: Code to be executed when this hook runs.
          minLength: 1
          type: string
        enabled:
          default: false
          description: Whether this hook will be executed (true) or ignored (false).
          type: boolean
        dependencies:
          additionalProperties: true
          description: Dependencies of this hook used by webtask server.
          type: object
      type: object
    job:
      additionalProperties: true
      example:
        connection_id: con_0000000000000001
        format: csv
        limit: 0
        created_at: created_at
        id: job_0000000000000001
        type: users_export
        fields:
        - export_as: export_as
          name: name
        - export_as: export_as
          name: name
        status: pending
      properties:
        status:
          default: pending
          description: Status of this job.
          type: string
        type:
          default: users_export
          description: Type of job this is.
          type: string
        created_at:
          description: When this job was created.
          type: string
        id:
          default: job_0000000000000001
          description: ID of this job.
          type: string
        connection_id:
          default: con_0000000000000001
          description: connection_id of the connection from which users will be exported.
          type: string
        format:
          $ref: '#/components/schemas/post_users_exports_request_format'
        limit:
          default: 5
          description: Limit the number of records.
          type: integer
        fields:
          description: List of fields to be included in the CSV. Defaults to a predefined
            set of fields.
          items:
            $ref: '#/components/schemas/post_users_exports_request_fields_inner'
          type: array
      required:
      - connection
      - id
      - status
      - type
      type: object
    log:
      additionalProperties: true
      example:
        date: 2016-02-23T19:57:29.532Z
        log_id: log_id
        audience: audience
        user_name: user_name
        ip: 190.257.209.19
        description: description
        strategy_type: strategy_type
        type: sapi
        client_id: AaiyAPdpYdesoKnqjj8HJqRn4T5titww
        hostname: 190.257.209.19
        connection_id: connection_id
        user_id: auth0|56c75c4e42b6359e98374bc2
        scope: ""
        connection: connection
        details:
          key: ""
        isMobile: true
        strategy: strategy
        client_name: My application Name
        location_info:
          country_code: country_code
          city_name: city_name
          latitude: latitude
          country_name: country_name
          country_code3: country_code3
          continent_code: continent_code
          time_zone: time_zone
          longitude: longitude
        user_agent: user_agent
      properties:
        date:
          $ref: '#/components/schemas/log_date'
        type:
          default: sapi
          description: Type of event.
          type: string
        description:
          description: Description of this event.
          nullable: true
          type: string
        connection:
          description: Name of the connection the event relates to.
          type: string
        connection_id:
          description: ID of the connection the event relates to.
          type: string
        client_id:
          default: AaiyAPdpYdesoKnqjj8HJqRn4T5titww
          description: ID of the client (application).
          type: string
        client_name:
          default: My application Name
          description: Name of the client (application).
          type: string
        ip:
          default: 190.257.209.19
          description: IP address of the log event source.
          type: string
        hostname:
          default: 190.257.209.19
          description: Hostname the event applies to.
          type: string
        user_id:
          default: auth0|56c75c4e42b6359e98374bc2
          description: ID of the user involved in the event.
          type: string
        user_name:
          description: Name of the user involved in the event.
          type: string
        audience:
          description: API audience the event applies to.
          type: string
        scope:
          default: ""
          description: Scope permissions applied to the event.
          type: string
        strategy:
          description: Name of the strategy involved in the event.
          type: string
        strategy_type:
          description: Type of strategy involved in the event.
          type: string
        log_id:
          description: Unique ID of the event.
          type: string
        isMobile:
          description: Whether the client was a mobile device (true) or desktop/laptop/server
            (false).
          type: boolean
        details:
          additionalProperties: true
          description: Additional useful details about this event (structure is dependent
            upon event type).
          type: object
        user_agent:
          description: User agent string from the client device that caused the event.
          type: string
        location_info:
          $ref: '#/components/schemas/log_location_info'
      type: object
    promptsSettings:
      additionalProperties: true
      example:
        webauthn_platform_first_factor: true
        identifier_first: true
        universal_login_experience: new
      properties:
        universal_login_experience:
          $ref: '#/components/schemas/promptsSettings_universal_login_experience'
        identifier_first:
          description: Whether identifier first is enabled or not
          type: boolean
        webauthn_platform_first_factor:
          description: Use WebAuthn with Device Biometrics as the first authentication
            factor
          type: boolean
      type: object
    promptsSettingsUpdate:
      additionalProperties: false
      description: Prompts settings
      properties:
        universal_login_experience:
          $ref: '#/components/schemas/promptsSettings_universal_login_experience'
        identifier_first:
          description: Whether identifier first is enabled or not
          nullable: true
          type: boolean
        webauthn_platform_first_factor:
          description: Use WebAuthn with Device Biometrics as the first authentication
            factor
          nullable: true
          type: boolean
      type: object
    scope:
      additionalProperties: false
      example:
        description: description
        value: value
      properties:
        value:
          description: Value of this scope.
          maxLength: 280
          minLength: 1
          type: string
        description:
          description: User-friendly description of this scope.
          maxLength: 500
          type: string
      required:
      - value
      type: object
    resourceServer:
      additionalProperties: false
      example:
        is_system: true
        identifier: identifier
        signing_alg: HS256
        signing_secret: signing_secret
        token_encryption:
          format: compact-nested-jwe
          encryption_key:
            kid: kid
            name: name
            pem: "-----BEGIN PUBLIC KEY-----\r\nMIIBIjANBg...\r\n-----END PUBLIC KEY-----\r\
              \n"
            alg: RSA-OAEP-256
        enforce_policies: true
        allow_offline_access: true
        token_lifetime: 0
        token_dialect: access_token
        proof_of_possession:
          mechanism: mtls
          required: true
        skip_consent_for_verifiable_first_party_clients: true
        authorization_details:
        - ""
        - ""
        name: name
        client: "{}"
        consent_policy: transactional-authorization-with-mfa
        id: id
        scopes:
        - description: description
          value: value
        - description: description
          value: value
        token_lifetime_for_web: 6
      properties:
        id:
          description: ID of the API (resource server).
          type: string
        name:
          description: Friendly name for this resource server. Can not contain `<`
            or `>` characters.
          type: string
        is_system:
          description: Whether this is an Auth0 system API (true) or a custom API
            (false).
          type: boolean
        identifier:
          description: Unique identifier for the API used as the audience parameter
            on authorization calls. Can not be changed once set.
          type: string
        scopes:
          description: List of permissions (scopes) that this API uses.
          items:
            $ref: '#/components/schemas/scope'
          type: array
        signing_alg:
          $ref: '#/components/schemas/client_jwt_configuration_alg'
        signing_secret:
          description: Secret used to sign tokens when using symmetric algorithms
            (HS256).
          minLength: 16
          type: string
        allow_offline_access:
          description: Whether refresh tokens can be issued for this API (true) or
            not (false).
          type: boolean
        skip_consent_for_verifiable_first_party_clients:
          description: Whether to skip user consent for applications flagged as first
            party (true) or not (false).
          type: boolean
        token_lifetime:
          description: Expiration value (in seconds) for access tokens issued for
            this API from the token endpoint.
          type: integer
        token_lifetime_for_web:
          description: Expiration value (in seconds) for access tokens issued for
            this API via Implicit or Hybrid Flows. Cannot be greater than the `token_lifetime`
            value.
          type: integer
        enforce_policies:
          description: Whether authorization polices are enforced (true) or unenforced
            (false).
          type: boolean
        token_dialect:
          $ref: '#/components/schemas/resourceServer_token_dialect'
        client:
          additionalProperties: false
          properties: {}
          type: object
        token_encryption:
          $ref: '#/components/schemas/resourceServer_token_encryption'
        consent_policy:
          $ref: '#/components/schemas/resourceServer_consent_policy'
        authorization_details:
          items: {}
          type: array
        proof_of_possession:
          $ref: '#/components/schemas/resourceServer_proof_of_possession'
      type: object
    resourceServerCreate:
      additionalProperties: false
      properties:
        name:
          description: Friendly name for this resource server. Can not contain `<`
            or `>` characters.
          maxLength: 200
          type: string
        identifier:
          description: Unique identifier for the API used as the audience parameter
            on authorization calls. Can not be changed once set.
          maxLength: 600
          minLength: 1
          type: string
        scopes:
          description: List of permissions (scopes) that this API uses.
          items:
            $ref: '#/components/schemas/scope'
          type: array
        signing_alg:
          $ref: '#/components/schemas/client_jwt_configuration_alg'
        signing_secret:
          description: Secret used to sign tokens when using symmetric algorithms
            (HS256).
          minLength: 16
          type: string
        allow_offline_access:
          description: Whether refresh tokens can be issued for this API (true) or
            not (false).
          type: boolean
        token_lifetime:
          description: Expiration value (in seconds) for access tokens issued for
            this API from the token endpoint.
          type: integer
        token_dialect:
          $ref: '#/components/schemas/resourceServerCreate_token_dialect'
        skip_consent_for_verifiable_first_party_clients:
          description: Whether to skip user consent for applications flagged as first
            party (true) or not (false).
          type: boolean
        enforce_policies:
          description: Whether to enforce authorization policies (true) or to ignore
            them (false).
          type: boolean
        client:
          additionalProperties: false
          properties: {}
          type: object
        token_encryption:
          $ref: '#/components/schemas/resourceServer_token_encryption'
        consent_policy:
          $ref: '#/components/schemas/resourceServer_consent_policy'
        authorization_details:
          items: {}
          type: array
        proof_of_possession:
          $ref: '#/components/schemas/resourceServer_proof_of_possession'
      required:
      - identifier
      type: object
    resourceServerUpdate:
      additionalProperties: false
      properties:
        name:
          description: Friendly name for this resource server. Can not contain `<`
            or `>` characters.
          maxLength: 200
          type: string
        scopes:
          description: List of permissions (scopes) that this API uses.
          items:
            $ref: '#/components/schemas/scope'
          type: array
        signing_alg:
          $ref: '#/components/schemas/client_jwt_configuration_alg'
        signing_secret:
          description: Secret used to sign tokens when using symmetric algorithms
            (HS256).
          minLength: 16
          type: string
        skip_consent_for_verifiable_first_party_clients:
          description: Whether to skip user consent for applications flagged as first
            party (true) or not (false).
          type: boolean
        allow_offline_access:
          description: Whether refresh tokens can be issued for this API (true) or
            not (false).
          type: boolean
        token_lifetime:
          description: Expiration value (in seconds) for access tokens issued for
            this API from the token endpoint.
          type: integer
        token_dialect:
          $ref: '#/components/schemas/resourceServerCreate_token_dialect'
        enforce_policies:
          description: Whether authorization policies are enforced (true) or not enforced
            (false).
          type: boolean
        client:
          additionalProperties: false
          properties: {}
          type: object
        token_encryption:
          $ref: '#/components/schemas/resourceServer_token_encryption'
        consent_policy:
          $ref: '#/components/schemas/resourceServer_consent_policy'
        authorization_details:
          items: {}
          type: array
        proof_of_possession:
          $ref: '#/components/schemas/resourceServer_proof_of_possession'
      type: object
    roleCreate:
      additionalProperties: false
      properties:
        name:
          description: Name of the role.
          type: string
        description:
          description: Description of the role.
          type: string
      required:
      - name
      type: object
    roleUpdate:
      additionalProperties: false
      properties:
        name:
          description: Name of this role.
          type: string
        description:
          description: Description of this role.
          type: string
      type: object
    permission:
      additionalProperties: false
      example:
        resource_server_identifier: resource_server_identifier
        resource_server_name: resource_server_name
        description: description
        permission_name: permission_name
      properties:
        resource_server_identifier:
          description: Resource server (API) identifier that this permission is for.
          type: string
        permission_name:
          description: Name of this permission.
          type: string
        resource_server_name:
          description: Resource server (API) name this permission is for.
          type: string
        description:
          description: Description of this permission.
          type: string
      type: object
    rule:
      additionalProperties: false
      example:
        stage: login_success
        name: rule_1
        id: con_0000000000000001
        enabled: true
        script: |-
          function (user, context, callback) {
            callback(null, user, context);
          }
        order: 0.8008281904610115
      properties:
        name:
          default: rule_1
          description: Name of this rule.
          type: string
        id:
          default: con_0000000000000001
          description: ID of this rule.
          type: string
        enabled:
          default: true
          description: "Whether the rule is enabled (true), or disabled (false)."
          type: boolean
        script:
          default: |-
            function (user, context, callback) {
              callback(null, user, context);
            }
          description: Code to be executed when this rule runs.
          type: string
        order:
          default: 1
          description: Order that this rule should execute in relative to other rules.
            Lower-valued rules execute first.
          type: number
        stage:
          default: login_success
          description: "Execution stage of this rule. Can be `login_success`, `login_failure`,\
            \ or `pre_authorize`."
          type: string
      type: object
    ruleCreate:
      additionalProperties: false
      properties:
        name:
          default: my-rule
          description: Name of this rule.
          type: string
        script:
          default: |-
            function (user, context, callback) {
              callback(null, user, context);
            }
          description: Code to be executed when this rule runs.
          minLength: 1
          type: string
        order:
          default: 2
          description: Order that this rule should execute in relative to other rules.
            Lower-valued rules execute first.
          type: number
        enabled:
          default: true
          description: "Whether the rule is enabled (true), or disabled (false)."
          type: boolean
      required:
      - name
      - script
      type: object
    ruleUpdate:
      additionalProperties: false
      properties:
        script:
          default: |-
            function (user, context, callback) {
              callback(null, user, context);
            }
          description: Code to be executed when this rule runs.
          minLength: 1
          type: string
        name:
          default: my-rule
          description: Name of this rule.
          type: string
        order:
          default: 2
          description: Order that this rule should execute in relative to other rules.
            Lower-valued rules execute first.
          type: number
        enabled:
          default: true
          description: "Whether the rule is enabled (true), or disabled (false)."
          type: boolean
      type: object
    statsEntry:
      additionalProperties: true
      example:
        date: 2014-01-01T00:00:00.000Z
        signups: 6
        updated_at: 2014-01-01T02:00:00.000Z
        leaked_passwords: 1
        created_at: 2014-01-01T20:00:00.000Z
        logins: 0
      properties:
        date:
          default: 2014-01-01T00:00:00.000Z
          description: Date these events occurred in ISO 8601 format.
          type: string
        logins:
          default: 100
          description: Number of logins on this date.
          type: integer
        signups:
          default: 100
          description: Number of signups on this date.
          type: integer
        leaked_passwords:
          default: 100
          description: Number of breached-password detections on this date (subscription
            required).
          type: integer
        updated_at:
          default: 2014-01-01T02:00:00.000Z
          description: Date and time this stats entry was last updated in ISO 8601
            format.
          type: string
        created_at:
          default: 2014-01-01T20:00:00.000Z
          description: Approximate date and time the first event occurred in ISO 8601
            format.
          type: string
      type: object
    tenantSettings:
      additionalProperties: false
      example:
        session_lifetime: 0.8008281904610115
        picture_url: https://mycompany.org/logo.png
        customize_mfa_in_postlogin_action: false
        flags:
          enable_legacy_profile: true
          enable_pipeline2: true
          enforce_client_authentication_on_passwordless_start: true
          revoke_refresh_token_grant: true
          disable_impersonation: false
          disable_fields_map_fix: true
          no_disclose_enterprise_connections: true
          allow_legacy_ro_grant_types: true
          mfa_show_factor_list_on_enrollment: true
          enable_sso: true
          enable_adfs_waad_email_verification: true
          allow_legacy_tokeninfo_endpoint: true
          dashboard_log_streams_next: true
          change_pwd_flow_v1: false
          enable_public_signup_user_exists_error: true
          enable_client_connections: true
          disable_clickjack_protection_headers: true
          allow_changing_enable_sso: true
          enable_idtoken_api2: true
          dashboard_insights_view: true
          allow_legacy_delegation_grant_types: true
          remove_alg_from_jwks: true
          enable_apis_section: false
        default_audience: ""
        acr_values_supported:
        - acr_values_supported
        - acr_values_supported
        change_password:
          html: ""
          enabled: false
        support_url: https://mycompany.org/support
        default_redirection_uri: default_redirection_uri
        guardian_mfa_page:
          html: ""
          enabled: false
        allowed_logout_urls:
        - allowed_logout_urls
        - allowed_logout_urls
        default_directory: ""
        mtls:
          enable_endpoint_aliases: false
        idle_session_lifetime: 6.027456183070403
        error_page:
          html: ""
          show_log_link: false
          url: https://mycompany.org/error
        friendly_name: My Company
        sessions:
          oidc_logout_prompt_enabled: true
        sandbox_version: "18"
        sandbox_versions_available:
        - sandbox_versions_available
        - sandbox_versions_available
        enabled_locales:
        - ar
        - ar
        pushed_authorization_requests_supported: false
        support_email: support@mycompany.org
        device_flow:
          charset: base20
          mask: '****-****'
        session_cookie:
          mode: persistent
        allow_organization_name_in_authentication_api: false
      properties:
        change_password:
          $ref: '#/components/schemas/tenantSettings_change_password'
        guardian_mfa_page:
          $ref: '#/components/schemas/tenantSettings_guardian_mfa_page'
        default_audience:
          default: ""
          description: Default audience for API authorization.
          type: string
        default_directory:
          default: ""
          description: "Name of connection used for password grants at the `/token`endpoint.\
            \ The following connection types are supported: LDAP, AD, Database Connections,\
            \ Passwordless, Windows Azure Active Directory, ADFS."
          type: string
        error_page:
          $ref: '#/components/schemas/tenantSettings_error_page'
        device_flow:
          $ref: '#/components/schemas/tenantSettings_device_flow'
        flags:
          $ref: '#/components/schemas/tenantSettings_flags'
        friendly_name:
          default: My Company
          description: Friendly name for this tenant.
          type: string
        picture_url:
          default: https://mycompany.org/logo.png
          description: "URL of logo to be shown for this tenant (recommended size:\
            \ 150x150)"
          type: string
        support_email:
          default: support@mycompany.org
          description: End-user support email address.
          type: string
        support_url:
          default: https://mycompany.org/support
          description: End-user support URL.
          type: string
        allowed_logout_urls:
          description: URLs that are valid to redirect to after logout from Auth0.
          items:
            type: string
          type: array
        session_lifetime:
          default: 168
          description: Number of hours a session will stay valid.
          type: number
        idle_session_lifetime:
          default: 72
          description: Number of hours for which a session can be inactive before
            the user must log in again.
          type: number
        sandbox_version:
          default: "18"
          description: Selected sandbox version for the extensibility environment.
          type: string
        sandbox_versions_available:
          description: Available sandbox versions for the extensibility environment.
          items:
            type: string
          type: array
        default_redirection_uri:
          description: "The default absolute redirection uri, must be https"
          type: string
        enabled_locales:
          description: Supported locales for the user interface.
          items:
            $ref: '#/components/schemas/get_custom_text_by_language_language_parameter'
          type: array
        session_cookie:
          $ref: '#/components/schemas/tenantSettings_session_cookie'
        sessions:
          $ref: '#/components/schemas/tenantSettings_sessions'
        allow_organization_name_in_authentication_api:
          default: false
          description: Whether to accept an organization name instead of an ID on
            auth endpoints
          type: boolean
        customize_mfa_in_postlogin_action:
          default: false
          description: Whether to enable flexible factors for MFA in the PostLogin
            action
          type: boolean
        acr_values_supported:
          description: Supported ACR values
          items:
            format: acr
            type: string
          type: array
        mtls:
          $ref: '#/components/schemas/tenantSettings_mtls'
        pushed_authorization_requests_supported:
          default: false
          description: Enables the use of Pushed Authorization Requests
          type: boolean
      type: object
    tenantSettingsUpdate:
      additionalProperties: false
      properties:
        change_password:
          $ref: '#/components/schemas/tenantSettings_change_password'
        device_flow:
          $ref: '#/components/schemas/tenantSettingsUpdate_device_flow'
        guardian_mfa_page:
          $ref: '#/components/schemas/tenantSettings_guardian_mfa_page'
        default_audience:
          default: ""
          description: Default audience for API Authorization.
          type: string
        default_directory:
          default: ""
          description: "Name of connection used for password grants at the `/token`\
            \ endpoint. The following connection types are supported: LDAP, AD, Database\
            \ Connections, Passwordless, Windows Azure Active Directory, ADFS."
          type: string
        error_page:
          $ref: '#/components/schemas/tenantSettings_error_page'
        flags:
          $ref: '#/components/schemas/tenantSettingsUpdate_flags'
        friendly_name:
          default: My Company
          description: Friendly name for this tenant.
          type: string
        picture_url:
          default: https://mycompany.org/logo.png
          description: "URL of logo to be shown for this tenant (recommended size:\
            \ 150x150)"
          type: string
        support_email:
          default: support@mycompany.org
          description: End-user support email.
          type: string
        support_url:
          default: https://mycompany.org/support
          description: End-user support url.
          type: string
        allowed_logout_urls:
          description: URLs that are valid to redirect to after logout from Auth0.
          items:
            type: string
          type: array
        session_lifetime:
          default: 168
          description: Number of hours a session will stay valid.
          type: integer
        idle_session_lifetime:
          default: 72
          description: Number of hours for which a session can be inactive before
            the user must log in again.
          type: integer
        sandbox_version:
          default: "18"
          description: Selected sandbox version for the extensibility environment
          maxLength: 8
          type: string
        default_redirection_uri:
          description: "The default absolute redirection uri, must be https"
          type: string
        enabled_locales:
          description: Supported locales for the user interface
          items:
            $ref: '#/components/schemas/get_custom_text_by_language_language_parameter'
          type: array
        session_cookie:
          $ref: '#/components/schemas/tenantSettings_session_cookie'
        sessions:
          $ref: '#/components/schemas/tenantSettings_sessions'
        customize_mfa_in_postlogin_action:
          default: false
          description: Whether to enable flexible factors for MFA in the PostLogin
            action
          nullable: true
          type: boolean
        allow_organization_name_in_authentication_api:
          default: false
          description: Whether to accept an organization name instead of an ID on
            auth endpoints
          nullable: true
          type: boolean
        acr_values_supported:
          description: Supported ACR values
          items:
            format: acr
            type: string
          type: array
        mtls:
          $ref: '#/components/schemas/tenantSettings_mtls'
        pushed_authorization_requests_supported:
          default: false
          description: Enables the use of Pushed Authorization Requests
          nullable: true
          type: boolean
      type: object
    userBlock:
      additionalProperties: false
      example:
        blocked_for:
        - identifier: john.doe@gmail.com
          ip: 10.0.0.1
          connection: connection
        - identifier: john.doe@gmail.com
          ip: 10.0.0.1
          connection: connection
      properties:
        blocked_for:
          description: "Array of identifier + IP address pairs.  IP address is optional,\
            \ and may be omitted in certain circumstances (such as Account Lockout\
            \ mode)."
          items:
            $ref: '#/components/schemas/userBlock_blocked_for_inner'
          type: array
      type: object
    userProfile:
      additionalProperties: true
      example:
        email_verified: true
        phone_verified: true
        name: name
        phone_number: phone_number
        given_name: given_name
        family_name: family_name
        email: email
        username: johndoe
      properties:
        email:
          description: Email address of this user.
          type: string
        email_verified:
          description: Whether this email address is verified (true) or unverified
            (false).
          type: boolean
        name:
          description: Name of this user.
          type: string
        username:
          default: johndoe
          description: Username of this user.
          type: string
        given_name:
          description: Given name/first name/forename of this user.
          type: string
        phone_number:
          description: Phone number for this user.
          type: string
        phone_verified:
          description: Whether this phone number is verified (true) or unverified
            (false).
          type: boolean
        family_name:
          description: Family name/last name/surname of this user.
          type: string
      type: object
    userCreate:
      additionalProperties: false
      properties:
        email:
          default: john.doe@gmail.com
          description: The user's email.
          type: string
        phone_number:
          default: "+199999999999999"
          description: "The user's phone number (following the E.164 recommendation),\
            \ only valid for users from SMS connections."
          type: string
        user_metadata:
          additionalProperties: true
          description: Data related to the user that does not affect the application's
            core functionality.
          type: object
        blocked:
          default: false
          description: Whether this user was blocked by an administrator (true) or
            not (false).
          type: boolean
        email_verified:
          default: false
          description: Whether this email address is verified (true) or unverified
            (false). User will receive a verification email after creation if `email_verified`
            is false or not specified
          type: boolean
        phone_verified:
          default: false
          description: Whether this phone number has been verified (true) or not (false).
          type: boolean
        app_metadata:
          $ref: '#/components/schemas/get_invitations_200_response_oneOf_inner_app_metadata'
        given_name:
          default: John
          description: The user's given name(s).
          maxLength: 150
          minLength: 1
          type: string
        family_name:
          default: Doe
          description: The user's family name(s).
          maxLength: 150
          minLength: 1
          type: string
        name:
          default: John Doe
          description: The user's full name.
          maxLength: 300
          minLength: 1
          type: string
        nickname:
          default: Johnny
          description: The user's nickname.
          maxLength: 300
          minLength: 1
          type: string
        picture:
          default: https://secure.gravatar.com/avatar/15626c5e0c749cb912f9d1ad48dba440?s=480&r=pg&d=https%3A%2F%2Fssl.gstatic.com%2Fs2%2Fprofiles%2Fimages%2Fsilhouette80.png
          description: A URI pointing to the user's picture.
          type: string
        user_id:
          default: abc
          description: The external user's id provided by the identity provider.
          maxLength: 255
          minLength: 0
          type: string
        connection:
          default: Initial-Connection
          description: Name of the connection this user should be created in.
          minLength: 1
          type: string
        password:
          default: secret
          description: Initial password for this user (mandatory only for auth0 connection
            strategy).
          minLength: 1
          type: string
        verify_email:
          default: false
          description: Whether the user will receive a verification email after creation
            (true) or no email (false). Overrides behavior of `email_verified` parameter.
          type: boolean
        username:
          default: johndoe
          description: The user's username. Only valid if the connection requires
            a username.
          maxLength: 128
          minLength: 1
          type: string
      required:
      - connection
      type: object
    userUpdate:
      additionalProperties: true
      properties:
        blocked:
          default: false
          description: Whether this user was blocked by an administrator (true) or
            not (false).
          type: boolean
        email_verified:
          default: false
          description: Whether this email address is verified (true) or unverified
            (false). If set to false the user will not receive a verification email
            unless `verify_email` is set to true.
          type: boolean
        email:
          default: john.doe@gmail.com
          description: Email address of this user.
          type: string
        phone_number:
          default: "+199999999999999"
          description: "The user's phone number (following the E.164 recommendation),\
            \ only valid for users from SMS connections."
          type: string
        phone_verified:
          default: false
          description: Whether this phone number has been verified (true) or not (false).
          type: boolean
        user_metadata:
          additionalProperties: true
          description: User metadata to which this user has read/write access.
          nullable: true
          type: object
        app_metadata:
          $ref: '#/components/schemas/userUpdate_app_metadata'
        given_name:
          default: John
          description: Given name/first name/forename of this user.
          maxLength: 150
          minLength: 1
          nullable: true
          type: string
        family_name:
          default: Doe
          description: Family name/last name/surname of this user.
          maxLength: 150
          minLength: 1
          nullable: true
          type: string
        name:
          default: John Doe
          description: Name of this user.
          maxLength: 300
          minLength: 1
          nullable: true
          type: string
        nickname:
          default: Johnny
          description: Preferred nickname or alias of this user.
          maxLength: 300
          minLength: 1
          nullable: true
          type: string
        picture:
          default: https://secure.gravatar.com/avatar/15626c5e0c749cb912f9d1ad48dba440?s=480&r=pg&d=https%3A%2F%2Fssl.gstatic.com%2Fs2%2Fprofiles%2Fimages%2Fsilhouette80.png
          description: "URL to picture, photo, or avatar of this user."
          nullable: true
          type: string
        verify_email:
          default: false
          description: Whether this user will receive a verification email after creation
            (true) or no email (false). Overrides behavior of `email_verified` parameter.
          type: boolean
        verify_phone_number:
          default: false
          description: Whether this user will receive a text after changing the phone
            number (true) or no text (false). Only valid when changing phone number.
          type: boolean
        password:
          default: secret
          description: New password for this user (mandatory for non-SMS connections).
          minLength: 1
          type: string
        connection:
          default: Initial-Connection
          description: ID of the connection this user should be created in.
          minLength: 1
          type: string
        client_id:
          default: DaM8bokEXBWrTUFCiJjWn50jei6ardyX
          description: Auth0 client ID. Only valid when updating email address.
          minLength: 1
          type: string
        username:
          default: johndoe
          description: The user's username. Only valid if the connection requires
            a username.
          maxLength: 128
          minLength: 1
          type: string
      type: object
    userEnrollment:
      additionalProperties: true
      example:
        identifier: identifier
        auth_method: authenticator
        enrolled_at: enrolled_at
        name: name
        last_auth: last_auth
        phone_number: phone_number
        id: id
        type: type
        status: pending
      properties:
        id:
          description: ID of this enrollment.
          type: string
        status:
          $ref: '#/components/schemas/userEnrollment_status'
        type:
          description: Type of enrollment.
          type: string
        name:
          description: Name of enrollment (usually phone number).
          maxLength: 20
          type: string
        identifier:
          description: Device identifier (usually phone identifier) of this enrollment.
          type: string
        phone_number:
          description: Phone number for this enrollment.
          type: string
        auth_method:
          $ref: '#/components/schemas/userEnrollment_auth_method'
        enrolled_at:
          description: Start date and time of this enrollment.
          type: string
        last_auth:
          description: Last authentication date and time of this enrollment.
          type: string
      type: object
    userIdentity:
      additionalProperties: false
      example:
        access_token: access_token
        refresh_token: refresh_token
        isSocial: true
        user_id: abc
        provider: twitter
        connection: twitter
        profileData:
          email_verified: true
          phone_verified: true
          name: name
          phone_number: phone_number
          given_name: given_name
          family_name: family_name
          email: email
          username: johndoe
        access_token_secret: access_token_secret
      properties:
        connection:
          default: twitter
          description: Connection name of this identity.
          type: string
        user_id:
          $ref: '#/components/schemas/userIdentity_user_id'
        provider:
          default: twitter
          description: Type of identity provider.
          type: string
        profileData:
          $ref: '#/components/schemas/userProfile'
        isSocial:
          description: Whether the identity provider is a social provider (true) or
            not (false).
          type: boolean
        access_token:
          description: IDP access token returned if scope `read:user_idp_tokens` is
            defined.
          type: string
        access_token_secret:
          description: IDP access token secret returned only if `scope read:user_idp_tokens`
            is defined.
          type: string
        refresh_token:
          description: IDP refresh token returned only if scope `read:user_idp_tokens`
            is defined.
          type: string
      required:
      - connection
      - provider
      - user_id
      type: object
    get_actions_200_response_actions_inner_supported_triggers_inner_id:
      enum:
      - post-login
      - credentials-exchange
      - pre-user-registration
      - post-user-registration
      - post-change-password
      - send-phone-message
      - iga-approval
      - iga-certification
      - iga-fulfillment-assignment
      - iga-fulfillment-execution
      - password-reset-post-challenge
      type: string
    get_actions_200_response_actions_inner_supported_triggers_inner_compatible_triggers_inner:
      additionalProperties: true
      example:
        id: null
        version: version
      properties:
        id:
          $ref: '#/components/schemas/get_actions_200_response_actions_inner_supported_triggers_inner_id'
        version:
          description: "The version of a trigger. v1, v2, etc."
          type: string
      required:
      - id
      - version
      type: object
    get_actions_200_response_actions_inner_supported_triggers_inner:
      additionalProperties: false
      example:
        runtimes:
        - runtimes
        - runtimes
        default_runtime: default_runtime
        compatible_triggers:
        - id: null
          version: version
        - id: null
          version: version
        id: post-login
        version: version
        status: status
      properties:
        id:
          $ref: '#/components/schemas/get_actions_200_response_actions_inner_supported_triggers_inner_id'
        version:
          description: "The version of a trigger. v1, v2, etc."
          type: string
        status:
          description: status points to the trigger status.
          type: string
        runtimes:
          description: runtimes supported by this trigger.
          items:
            type: string
          type: array
        default_runtime:
          description: Runtime that will be used when none is specified when creating
            an action.
          type: string
        compatible_triggers:
          description: compatible_triggers informs which other trigger supports the
            same event and api.
          items:
            $ref: '#/components/schemas/get_actions_200_response_actions_inner_supported_triggers_inner_compatible_triggers_inner'
          type: array
      required:
      - id
      type: object
    get_actions_200_response_actions_inner_dependencies_inner:
      additionalProperties: false
      description: "Dependency is an npm module. These values are used to produce\
        \ an immutable artifact, which manifests as a layer_id."
      example:
        registry_url: registry_url
        name: name
        version: version
      properties:
        name:
          description: "name is the name of the npm module, e.g. lodash"
          type: string
        version:
          description: "description is the version of the npm module, e.g. 4.17.1"
          type: string
        registry_url:
          description: registry_url is an optional value used primarily for private
            npm registries.
          type: string
      type: object
    get_actions_200_response_actions_inner_secrets_inner:
      additionalProperties: true
      example:
        updated_at: 2021-01-01T00:00:00.000Z
        name: mySecret
      properties:
        name:
          default: mySecret
          description: "The name of the particular secret, e.g. API_KEY."
          type: string
        updated_at:
          default: 2021-01-01T00:00:00.000Z
          description: The time when the secret was last updated.
          type: string
      type: object
    get_actions_200_response_actions_inner_integration_feature_type:
      default: action
      description: feature_type is the type of the integration.
      enum:
      - unspecified
      - action
      - social_connection
      - log_stream
      - sso_integration
      - sms_provider
      type: string
    get_actions_200_response_actions_inner_integration_current_release_semver:
      additionalProperties: false
      description: Semver denotes the major.minor version of an integration release
      example:
        major: 5
        minor: 5
      properties:
        major:
          default: 1
          description: Major is the major number of a semver
          type: integer
        minor:
          default: 1
          description: Minior is the minior number of a semver
          type: integer
      type: object
    get_actions_200_response_actions_inner_integration_current_release_required_secrets_inner_type:
      enum:
      - UNSPECIFIED
      - STRING
      type: string
    get_actions_200_response_actions_inner_integration_current_release_required_secrets_inner_options_inner:
      additionalProperties: false
      example:
        label: label
        value: value
      properties:
        value:
          description: The value of an option that will be used within the application.
          type: string
        label:
          description: The display value of an option suitable for displaying in a
            UI.
          type: string
      type: object
    get_actions_200_response_actions_inner_integration_current_release_required_secrets_inner:
      additionalProperties: false
      description: |-
        Param are form input values, primarily utilized when specifying secrets and
        configuration values for actions.

        These are especially important for partner integrations -- but can be
        exposed to tenant admins as well if they want to parameterize their custom
        actions.
      example:
        name: name
        options:
        - label: label
          value: value
        - label: label
          value: value
        description: description
        optional: true
        default_value: default_value
        label: label
        placeholder: placeholder
        type: UNSPECIFIED
        required: true
      properties:
        type:
          $ref: '#/components/schemas/get_actions_200_response_actions_inner_integration_current_release_required_secrets_inner_type'
        name:
          description: The name of the parameter.
          type: string
        required:
          description: The flag for if this parameter is required.
          type: boolean
        optional:
          description: The temp flag for if this parameter is required (experimental;
            for Labs use only).
          type: boolean
        label:
          description: The short label for this parameter.
          type: string
        description:
          description: The lengthier description for this parameter.
          type: string
        default_value:
          description: The default value for this parameter.
          type: string
        placeholder:
          description: Placeholder text for this parameter.
          type: string
        options:
          description: The allowable options for this param.
          items:
            $ref: '#/components/schemas/get_actions_200_response_actions_inner_integration_current_release_required_secrets_inner_options_inner'
          type: array
      type: object
    get_actions_200_response_actions_inner_integration_current_release:
      additionalProperties: true
      example:
        required_configuration:
        - name: name
          options:
          - label: label
            value: value
          - label: label
            value: value
          description: description
          optional: true
          default_value: default_value
          label: label
          placeholder: placeholder
          type: UNSPECIFIED
          required: true
        - name: name
          options:
          - label: label
            value: value
          - label: label
            value: value
          description: description
          optional: true
          default_value: default_value
          label: label
          placeholder: placeholder
          type: UNSPECIFIED
          required: true
        required_secrets:
        - name: name
          options:
          - label: label
            value: value
          - label: label
            value: value
          description: description
          optional: true
          default_value: default_value
          label: label
          placeholder: placeholder
          type: UNSPECIFIED
          required: true
        - name: name
          options:
          - label: label
            value: value
          - label: label
            value: value
          description: description
          optional: true
          default_value: default_value
          label: label
          placeholder: placeholder
          type: UNSPECIFIED
          required: true
        semver:
          major: 5
          minor: 5
        id: id
        trigger:
          runtimes:
          - runtimes
          - runtimes
          default_runtime: default_runtime
          compatible_triggers:
          - id: null
            version: version
          - id: null
            version: version
          id: post-login
          version: version
          status: status
      properties:
        id:
          description: The id of the associated IntegrationRelease
          type: string
        trigger:
          $ref: '#/components/schemas/get_actions_200_response_actions_inner_supported_triggers_inner'
        semver:
          $ref: '#/components/schemas/get_actions_200_response_actions_inner_integration_current_release_semver'
        required_secrets:
          description: |-
            required_secrets declares all the necessary secrets for an integration to
            work.
          items:
            $ref: '#/components/schemas/get_actions_200_response_actions_inner_integration_current_release_required_secrets_inner'
          type: array
        required_configuration:
          description: required_configuration declares all the necessary configuration
            fields for an integration to work.
          items:
            $ref: '#/components/schemas/get_actions_200_response_actions_inner_integration_current_release_required_secrets_inner'
          type: array
      type: object
    get_actions_200_response_actions_inner_integration:
      additionalProperties: false
      description: |-
        Integration defines a self contained functioning unit which partners
        publish. A partner may create one or many of these integrations.
      example:
        privacy_policy_url: privacy_policy_url
        short_description: Awesome Auth0 integration
        terms_of_use_url: terms_of_use_url
        description: An awesome Auth0 integration
        current_release:
          required_configuration:
          - name: name
            options:
            - label: label
              value: value
            - label: label
              value: value
            description: description
            optional: true
            default_value: default_value
            label: label
            placeholder: placeholder
            type: UNSPECIFIED
            required: true
          - name: name
            options:
            - label: label
              value: value
            - label: label
              value: value
            description: description
            optional: true
            default_value: default_value
            label: label
            placeholder: placeholder
            type: UNSPECIFIED
            required: true
          required_secrets:
          - name: name
            options:
            - label: label
              value: value
            - label: label
              value: value
            description: description
            optional: true
            default_value: default_value
            label: label
            placeholder: placeholder
            type: UNSPECIFIED
            required: true
          - name: name
            options:
            - label: label
              value: value
            - label: label
              value: value
            description: description
            optional: true
            default_value: default_value
            label: label
            placeholder: placeholder
            type: UNSPECIFIED
            required: true
          semver:
            major: 5
            minor: 5
          id: id
          trigger:
            runtimes:
            - runtimes
            - runtimes
            default_runtime: default_runtime
            compatible_triggers:
            - id: null
              version: version
            - id: null
              version: version
            id: post-login
            version: version
            status: status
        created_at: 2021-06-21T15:47:29.072Z
        catalog_id: awesome-auth0-integration
        url_slug: awesome-auth0-integration-slug
        feature_type: action
        partner_id: b8575c12-8d9d-4b5c-b28e-671fe9d39029
        updated_at: 2021-06-21T15:47:29.072Z
        name: Example Auth0 integration
        public_support_link: public_support_link
        logo: logo
        id: 8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b
      properties:
        id:
          default: 8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b
          description: |-
            id is a system generated GUID. This same ID is designed to be federated in
            all the applicable localities.
          type: string
        catalog_id:
          default: awesome-auth0-integration
          description: catalog_id refers to the ID in the marketplace catalog
          type: string
        url_slug:
          default: awesome-auth0-integration-slug
          description: url_slug refers to the url_slug in the marketplace catalog
          type: string
        partner_id:
          default: b8575c12-8d9d-4b5c-b28e-671fe9d39029
          description: |-
            partner_id is the foreign key reference to the partner account this
            integration belongs to.
          type: string
        name:
          default: Example Auth0 integration
          description: |-
            name is the integration name, which will be used for display purposes in
            the marketplace.

            To start we're going to make sure the display name is at least 3
            characters. Can adjust this easily later.
          type: string
        description:
          default: An awesome Auth0 integration
          description: |-
            description adds more text for the integration name -- also relevant for
            the marketplace listing.
          type: string
        short_description:
          default: Awesome Auth0 integration
          description: "short_description is the brief description of the integration,\
            \ which is used for display purposes in cards"
          type: string
        logo:
          type: string
        feature_type:
          $ref: '#/components/schemas/get_actions_200_response_actions_inner_integration_feature_type'
        terms_of_use_url:
          type: string
        privacy_policy_url:
          type: string
        public_support_link:
          type: string
        current_release:
          $ref: '#/components/schemas/get_actions_200_response_actions_inner_integration_current_release'
        created_at:
          default: 2021-06-21T15:47:29.072Z
          type: string
        updated_at:
          default: 2021-06-21T15:47:29.072Z
          type: string
      type: object
    get_actions_200_response_actions_inner_status:
      default: built
      description: The build status of this action.
      enum:
      - pending
      - building
      - packaged
      - built
      - retrying
      - failed
      type: string
    get_actions_200_response_actions_inner:
      additionalProperties: false
      example:
        code: "module.exports = () => {}"
        supported_triggers:
        - runtimes:
          - runtimes
          - runtimes
          default_runtime: default_runtime
          compatible_triggers:
          - id: null
            version: version
          - id: null
            version: version
          id: post-login
          version: version
          status: status
        - runtimes:
          - runtimes
          - runtimes
          default_runtime: default_runtime
          compatible_triggers:
          - id: null
            version: version
          - id: null
            version: version
          id: post-login
          version: version
          status: status
        runtime: node12
        created_at: 2021-01-01T00:00:00.000Z
        deployed_version:
          key: ""
        secrets:
        - updated_at: 2021-01-01T00:00:00.000Z
          name: mySecret
        - updated_at: 2021-01-01T00:00:00.000Z
          name: mySecret
        installed_integration_id: 7d2bc0c9-c0c2-433a-9f4e-86ef80270aad
        dependencies:
        - registry_url: registry_url
          name: name
          version: version
        - registry_url: registry_url
          name: name
          version: version
        all_changes_deployed: false
        updated_at: 2021-01-01T00:00:00.000Z
        built_at: 2021-01-01T00:00:00.000Z
        name: my-action
        integration:
          privacy_policy_url: privacy_policy_url
          short_description: Awesome Auth0 integration
          terms_of_use_url: terms_of_use_url
          description: An awesome Auth0 integration
          current_release:
            required_configuration:
            - name: name
              options:
              - label: label
                value: value
              - label: label
                value: value
              description: description
              optional: true
              default_value: default_value
              label: label
              placeholder: placeholder
              type: UNSPECIFIED
              required: true
            - name: name
              options:
              - label: label
                value: value
              - label: label
                value: value
              description: description
              optional: true
              default_value: default_value
              label: label
              placeholder: placeholder
              type: UNSPECIFIED
              required: true
            required_secrets:
            - name: name
              options:
              - label: label
                value: value
              - label: label
                value: value
              description: description
              optional: true
              default_value: default_value
              label: label
              placeholder: placeholder
              type: UNSPECIFIED
              required: true
            - name: name
              options:
              - label: label
                value: value
              - label: label
                value: value
              description: description
              optional: true
              default_value: default_value
              label: label
              placeholder: placeholder
              type: UNSPECIFIED
              required: true
            semver:
              major: 5
              minor: 5
            id: id
            trigger:
              runtimes:
              - runtimes
              - runtimes
              default_runtime: default_runtime
              compatible_triggers:
              - id: null
                version: version
              - id: null
                version: version
              id: post-login
              version: version
              status: status
          created_at: 2021-06-21T15:47:29.072Z
          catalog_id: awesome-auth0-integration
          url_slug: awesome-auth0-integration-slug
          feature_type: action
          partner_id: b8575c12-8d9d-4b5c-b28e-671fe9d39029
          updated_at: 2021-06-21T15:47:29.072Z
          name: Example Auth0 integration
          public_support_link: public_support_link
          logo: logo
          id: 8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b
        id: 910b1053-577f-4d81-a8c8-020e7319a38a
        status: built
      properties:
        id:
          default: 910b1053-577f-4d81-a8c8-020e7319a38a
          description: The unique ID of the action.
          type: string
        name:
          default: my-action
          description: The name of an action.
          type: string
        supported_triggers:
          description: "The list of triggers that this action supports. At this time,\
            \ an action can only target a single trigger at a time."
          items:
            $ref: '#/components/schemas/get_actions_200_response_actions_inner_supported_triggers_inner'
          type: array
        code:
          default: "module.exports = () => {}"
          description: The source code of the action.
          type: string
        dependencies:
          description: "The list of third party npm modules, and their versions, that\
            \ this action depends on."
          items:
            $ref: '#/components/schemas/get_actions_200_response_actions_inner_dependencies_inner'
          type: array
        runtime:
          default: node12
          description: "The Node runtime. For example: `node12`, defaults to `node12`"
          type: string
        secrets:
          description: The list of secrets that are included in an action or a version
            of an action.
          items:
            $ref: '#/components/schemas/get_actions_200_response_actions_inner_secrets_inner'
          type: array
        deployed_version:
          additionalProperties: true
          description: The version of the action that is currently deployed.
          type: object
        installed_integration_id:
          default: 7d2bc0c9-c0c2-433a-9f4e-86ef80270aad
          description: installed_integration_id is the fk reference to the InstalledIntegration
            entity.
          type: string
        integration:
          $ref: '#/components/schemas/get_actions_200_response_actions_inner_integration'
        status:
          $ref: '#/components/schemas/get_actions_200_response_actions_inner_status'
        all_changes_deployed:
          default: false
          description: True if all of an Action's contents have been deployed.
          type: boolean
        built_at:
          default: 2021-01-01T00:00:00.000Z
          description: The time when this action was built successfully.
          type: string
        created_at:
          default: 2021-01-01T00:00:00.000Z
          description: The time when this action was created.
          type: string
        updated_at:
          default: 2021-01-01T00:00:00.000Z
          description: The time when this action was updated.
          type: string
      type: object
    get_actions_200_response:
      additionalProperties: false
      example:
        per_page: 1.4658129805029452
        total: 0.8008281904610115
        page: 6.027456183070403
        actions:
        - code: "module.exports = () => {}"
          supported_triggers:
          - runtimes:
            - runtimes
            - runtimes
            default_runtime: default_runtime
            compatible_triggers:
            - id: null
              version: version
            - id: null
              version: version
            id: post-login
            version: version
            status: status
          - runtimes:
            - runtimes
            - runtimes
            default_runtime: default_runtime
            compatible_triggers:
            - id: null
              version: version
            - id: null
              version: version
            id: post-login
            version: version
            status: status
          runtime: node12
          created_at: 2021-01-01T00:00:00.000Z
          deployed_version:
            key: ""
          secrets:
          - updated_at: 2021-01-01T00:00:00.000Z
            name: mySecret
          - updated_at: 2021-01-01T00:00:00.000Z
            name: mySecret
          installed_integration_id: 7d2bc0c9-c0c2-433a-9f4e-86ef80270aad
          dependencies:
          - registry_url: registry_url
            name: name
            version: version
          - registry_url: registry_url
            name: name
            version: version
          all_changes_deployed: false
          updated_at: 2021-01-01T00:00:00.000Z
          built_at: 2021-01-01T00:00:00.000Z
          name: my-action
          integration:
            privacy_policy_url: privacy_policy_url
            short_description: Awesome Auth0 integration
            terms_of_use_url: terms_of_use_url
            description: An awesome Auth0 integration
            current_release:
              required_configuration:
              - name: name
                options:
                - label: label
                  value: value
                - label: label
                  value: value
                description: description
                optional: true
                default_value: default_value
                label: label
                placeholder: placeholder
                type: UNSPECIFIED
                required: true
              - name: name
                options:
                - label: label
                  value: value
                - label: label
                  value: value
                description: description
                optional: true
                default_value: default_value
                label: label
                placeholder: placeholder
                type: UNSPECIFIED
                required: true
              required_secrets:
              - name: name
                options:
                - label: label
                  value: value
                - label: label
                  value: value
                description: description
                optional: true
                default_value: default_value
                label: label
                placeholder: placeholder
                type: UNSPECIFIED
                required: true
              - name: name
                options:
                - label: label
                  value: value
                - label: label
                  value: value
                description: description
                optional: true
                default_value: default_value
                label: label
                placeholder: placeholder
                type: UNSPECIFIED
                required: true
              semver:
                major: 5
                minor: 5
              id: id
              trigger:
                runtimes:
                - runtimes
                - runtimes
                default_runtime: default_runtime
                compatible_triggers:
                - id: null
                  version: version
                - id: null
                  version: version
                id: post-login
                version: version
                status: status
            created_at: 2021-06-21T15:47:29.072Z
            catalog_id: awesome-auth0-integration
            url_slug: awesome-auth0-integration-slug
            feature_type: action
            partner_id: b8575c12-8d9d-4b5c-b28e-671fe9d39029
            updated_at: 2021-06-21T15:47:29.072Z
            name: Example Auth0 integration
            public_support_link: public_support_link
            logo: logo
            id: 8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b
          id: 910b1053-577f-4d81-a8c8-020e7319a38a
          status: built
        - code: "module.exports = () => {}"
          supported_triggers:
          - runtimes:
            - runtimes
            - runtimes
            default_runtime: default_runtime
            compatible_triggers:
            - id: null
              version: version
            - id: null
              version: version
            id: post-login
            version: version
            status: status
          - runtimes:
            - runtimes
            - runtimes
            default_runtime: default_runtime
            compatible_triggers:
            - id: null
              version: version
            - id: null
              version: version
            id: post-login
            version: version
            status: status
          runtime: node12
          created_at: 2021-01-01T00:00:00.000Z
          deployed_version:
            key: ""
          secrets:
          - updated_at: 2021-01-01T00:00:00.000Z
            name: mySecret
          - updated_at: 2021-01-01T00:00:00.000Z
            name: mySecret
          installed_integration_id: 7d2bc0c9-c0c2-433a-9f4e-86ef80270aad
          dependencies:
          - registry_url: registry_url
            name: name
            version: version
          - registry_url: registry_url
            name: name
            version: version
          all_changes_deployed: false
          updated_at: 2021-01-01T00:00:00.000Z
          built_at: 2021-01-01T00:00:00.000Z
          name: my-action
          integration:
            privacy_policy_url: privacy_policy_url
            short_description: Awesome Auth0 integration
            terms_of_use_url: terms_of_use_url
            description: An awesome Auth0 integration
            current_release:
              required_configuration:
              - name: name
                options:
                - label: label
                  value: value
                - label: label
                  value: value
                description: description
                optional: true
                default_value: default_value
                label: label
                placeholder: placeholder
                type: UNSPECIFIED
                required: true
              - name: name
                options:
                - label: label
                  value: value
                - label: label
                  value: value
                description: description
                optional: true
                default_value: default_value
                label: label
                placeholder: placeholder
                type: UNSPECIFIED
                required: true
              required_secrets:
              - name: name
                options:
                - label: label
                  value: value
                - label: label
                  value: value
                description: description
                optional: true
                default_value: default_value
                label: label
                placeholder: placeholder
                type: UNSPECIFIED
                required: true
              - name: name
                options:
                - label: label
                  value: value
                - label: label
                  value: value
                description: description
                optional: true
                default_value: default_value
                label: label
                placeholder: placeholder
                type: UNSPECIFIED
                required: true
              semver:
                major: 5
                minor: 5
              id: id
              trigger:
                runtimes:
                - runtimes
                - runtimes
                default_runtime: default_runtime
                compatible_triggers:
                - id: null
                  version: version
                - id: null
                  version: version
                id: post-login
                version: version
                status: status
            created_at: 2021-06-21T15:47:29.072Z
            catalog_id: awesome-auth0-integration
            url_slug: awesome-auth0-integration-slug
            feature_type: action
            partner_id: b8575c12-8d9d-4b5c-b28e-671fe9d39029
            updated_at: 2021-06-21T15:47:29.072Z
            name: Example Auth0 integration
            public_support_link: public_support_link
            logo: logo
            id: 8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b
          id: 910b1053-577f-4d81-a8c8-020e7319a38a
          status: built
      properties:
        total:
          default: 1
          description: The total result count.
          type: number
        page:
          default: 0
          description: Page index of the results being returned. First page is 0.
          type: number
        per_page:
          default: 20
          description: Number of results per page.
          type: number
        actions:
          description: The list of actions.
          items:
            $ref: '#/components/schemas/get_actions_200_response_actions_inner'
          type: array
      type: object
    post_action_request_secrets_inner:
      additionalProperties: true
      properties:
        name:
          default: mySecret
          description: "The name of the particular secret, e.g. API_KEY."
          type: string
        value:
          default: mySecretValue
          description: "The value of the particular secret, e.g. secret123. A secret's\
            \ value can only be set upon creation. A secret's value will never be\
            \ returned by the API."
          type: string
      type: object
    post_action_request:
      additionalProperties: false
      properties:
        name:
          default: my-action
          description: The name of an action.
          type: string
        supported_triggers:
          description: "The list of triggers that this action supports. At this time,\
            \ an action can only target a single trigger at a time."
          items:
            $ref: '#/components/schemas/get_actions_200_response_actions_inner_supported_triggers_inner'
          type: array
        code:
          default: "module.exports = () => {}"
          description: The source code of the action.
          type: string
        dependencies:
          description: "The list of third party npm modules, and their versions, that\
            \ this action depends on."
          items:
            $ref: '#/components/schemas/get_actions_200_response_actions_inner_dependencies_inner'
          type: array
        runtime:
          default: node12
          description: "The Node runtime. For example: `node12`, defaults to `node12`"
          type: string
        secrets:
          description: The list of secrets that are included in an action or a version
            of an action.
          items:
            $ref: '#/components/schemas/post_action_request_secrets_inner'
          type: array
      required:
      - name
      - supported_triggers
      type: object
    get_action_versions_200_response_versions_inner_status:
      default: built
      description: The build status of this specific version.
      enum:
      - pending
      - building
      - packaged
      - built
      - retrying
      - failed
      type: string
    get_action_versions_200_response_versions_inner_errors_inner:
      additionalProperties: false
      description: Error is a generic error with a human readable id which should
        be easily referenced in support tickets.
      example:
        msg: msg
        id: id
        url: url
      properties:
        id:
          type: string
        msg:
          type: string
        url:
          type: string
      type: object
    get_action_versions_200_response_versions_inner:
      additionalProperties: false
      example:
        code: "module.exports = () => {}"
        supported_triggers:
        - runtimes:
          - runtimes
          - runtimes
          default_runtime: default_runtime
          compatible_triggers:
          - id: null
            version: version
          - id: null
            version: version
          id: post-login
          version: version
          status: status
        - runtimes:
          - runtimes
          - runtimes
          default_runtime: default_runtime
          compatible_triggers:
          - id: null
            version: version
          - id: null
            version: version
          id: post-login
          version: version
          status: status
        deployed: true
        runtime: node12
        created_at: 2021-01-01T00:00:00.000Z
        secrets:
        - updated_at: 2021-01-01T00:00:00.000Z
          name: mySecret
        - updated_at: 2021-01-01T00:00:00.000Z
          name: mySecret
        dependencies:
        - registry_url: registry_url
          name: name
          version: version
        - registry_url: registry_url
          name: name
          version: version
        number: 5.962133916683182
        updated_at: 2021-01-01T00:00:00.000Z
        action_id: 910b1053-577f-4d81-a8c8-020e7319a38a
        built_at: 2021-01-01T00:00:00.000Z
        action: ""
        id: 12a3b9e6-06e6-4a29-96bf-90c82fe79a0d
        errors:
        - msg: msg
          id: id
          url: url
        - msg: msg
          id: id
          url: url
        status: built
      properties:
        id:
          default: 12a3b9e6-06e6-4a29-96bf-90c82fe79a0d
          description: The unique id of an action version.
          type: string
        action_id:
          default: 910b1053-577f-4d81-a8c8-020e7319a38a
          description: The id of the action to which this version belongs.
          type: string
        code:
          default: "module.exports = () => {}"
          description: The source code of this specific version of the action.
          type: string
        dependencies:
          description: "The list of third party npm modules, and their versions, that\
            \ this specific version depends on. "
          items:
            $ref: '#/components/schemas/get_actions_200_response_actions_inner_dependencies_inner'
          type: array
        deployed:
          default: true
          description: Indicates if this speciic version is the currently one deployed.
          type: boolean
        runtime:
          default: node12
          description: "The Node runtime. For example: `node12`"
          type: string
        secrets:
          description: The list of secrets that are included in an action or a version
            of an action.
          items:
            $ref: '#/components/schemas/get_actions_200_response_actions_inner_secrets_inner'
          type: array
        status:
          $ref: '#/components/schemas/get_action_versions_200_response_versions_inner_status'
        number:
          default: 1
          description: The index of this version in list of versions for the action.
          type: number
        errors:
          description: Any errors that occurred while the version was being built.
          items:
            $ref: '#/components/schemas/get_action_versions_200_response_versions_inner_errors_inner'
          type: array
        action:
          description: The action to which this verison belongs.
        built_at:
          default: 2021-01-01T00:00:00.000Z
          description: The time when this version was built successfully.
          type: string
        created_at:
          default: 2021-01-01T00:00:00.000Z
          description: The time when this version was created.
          type: string
        updated_at:
          default: 2021-01-01T00:00:00.000Z
          description: The time when a version was updated. Versions are never updated
            externally. Only Auth0 will update an action version as it is beiing built.
          type: string
        supported_triggers:
          description: "The list of triggers that this version supports. At this time,\
            \ a version can only target a single trigger at a time."
          items:
            $ref: '#/components/schemas/get_actions_200_response_actions_inner_supported_triggers_inner'
          type: array
      type: object
    get_action_versions_200_response:
      additionalProperties: false
      example:
        per_page: 1.4658129805029452
        total: 0.8008281904610115
        versions:
        - code: "module.exports = () => {}"
          supported_triggers:
          - runtimes:
            - runtimes
            - runtimes
            default_runtime: default_runtime
            compatible_triggers:
            - id: null
              version: version
            - id: null
              version: version
            id: post-login
            version: version
            status: status
          - runtimes:
            - runtimes
            - runtimes
            default_runtime: default_runtime
            compatible_triggers:
            - id: null
              version: version
            - id: null
              version: version
            id: post-login
            version: version
            status: status
          deployed: true
          runtime: node12
          created_at: 2021-01-01T00:00:00.000Z
          secrets:
          - updated_at: 2021-01-01T00:00:00.000Z
            name: mySecret
          - updated_at: 2021-01-01T00:00:00.000Z
            name: mySecret
          dependencies:
          - registry_url: registry_url
            name: name
            version: version
          - registry_url: registry_url
            name: name
            version: version
          number: 5.962133916683182
          updated_at: 2021-01-01T00:00:00.000Z
          action_id: 910b1053-577f-4d81-a8c8-020e7319a38a
          built_at: 2021-01-01T00:00:00.000Z
          action: ""
          id: 12a3b9e6-06e6-4a29-96bf-90c82fe79a0d
          errors:
          - msg: msg
            id: id
            url: url
          - msg: msg
            id: id
            url: url
          status: built
        - code: "module.exports = () => {}"
          supported_triggers:
          - runtimes:
            - runtimes
            - runtimes
            default_runtime: default_runtime
            compatible_triggers:
            - id: null
              version: version
            - id: null
              version: version
            id: post-login
            version: version
            status: status
          - runtimes:
            - runtimes
            - runtimes
            default_runtime: default_runtime
            compatible_triggers:
            - id: null
              version: version
            - id: null
              version: version
            id: post-login
            version: version
            status: status
          deployed: true
          runtime: node12
          created_at: 2021-01-01T00:00:00.000Z
          secrets:
          - updated_at: 2021-01-01T00:00:00.000Z
            name: mySecret
          - updated_at: 2021-01-01T00:00:00.000Z
            name: mySecret
          dependencies:
          - registry_url: registry_url
            name: name
            version: version
          - registry_url: registry_url
            name: name
            version: version
          number: 5.962133916683182
          updated_at: 2021-01-01T00:00:00.000Z
          action_id: 910b1053-577f-4d81-a8c8-020e7319a38a
          built_at: 2021-01-01T00:00:00.000Z
          action: ""
          id: 12a3b9e6-06e6-4a29-96bf-90c82fe79a0d
          errors:
          - msg: msg
            id: id
            url: url
          - msg: msg
            id: id
            url: url
          status: built
        page: 6.027456183070403
      properties:
        total:
          default: 1
          description: The total result count.
          type: number
        page:
          default: 0
          description: Page index of the results being returned. First page is 0.
          type: number
        per_page:
          default: 20
          description: Number of results per page. Paging is disabled if parameter
            not sent.
          type: number
        versions:
          items:
            $ref: '#/components/schemas/get_action_versions_200_response_versions_inner'
          type: array
      type: object
    post_deploy_draft_version_request:
      nullable: true
      oneOf:
      - $ref: '#/components/schemas/actionsDraftUpdate'
    patch_action_request:
      additionalProperties: false
      properties:
        name:
          default: my-action
          description: The name of an action.
          type: string
        supported_triggers:
          description: "The list of triggers that this action supports. At this time,\
            \ an action can only target a single trigger at a time."
          items:
            $ref: '#/components/schemas/get_actions_200_response_actions_inner_supported_triggers_inner'
          type: array
        code:
          default: "module.exports = () => {}"
          description: The source code of the action.
          type: string
        dependencies:
          description: "The list of third party npm modules, and their versions, that\
            \ this action depends on."
          items:
            $ref: '#/components/schemas/get_actions_200_response_actions_inner_dependencies_inner'
          type: array
        runtime:
          default: node12
          description: "The Node runtime. For example: `node12`, defaults to `node12`"
          type: string
        secrets:
          description: The list of secrets that are included in an action or a version
            of an action.
          items:
            $ref: '#/components/schemas/post_action_request_secrets_inner'
          type: array
      type: object
    post_test_action_request:
      additionalProperties: false
      properties:
        payload:
          additionalProperties: true
          description: The payload for the action.
          type: object
      required:
      - payload
      type: object
    post_test_action_200_response:
      additionalProperties: false
      example:
        payload:
          key: ""
      properties:
        payload:
          additionalProperties: true
          description: The resulting payload after an action was executed.
          type: object
      type: object
    get_execution_200_response_status:
      default: final
      description: The overall status of an execution.
      enum:
      - unspecified
      - pending
      - final
      - partial
      - canceled
      - suspended
      type: string
    get_execution_200_response_results_inner:
      additionalProperties: false
      description: Captures the results of a single action being executed.
      example:
        action_name: my-action
        started_at: 2021-01-01T00:00:00.000Z
        error:
          msg: msg
          id: id
          url: url
        ended_at: 2021-01-01T00:00:00.000Z
      properties:
        action_name:
          default: my-action
          description: The name of the action that was executed.
          type: string
        error:
          $ref: '#/components/schemas/get_action_versions_200_response_versions_inner_errors_inner'
        started_at:
          default: 2021-01-01T00:00:00.000Z
          description: The time when the action was started.
          type: string
        ended_at:
          default: 2021-01-01T00:00:00.000Z
          description: The time when the action finished executing.
          type: string
      type: object
    get_execution_200_response:
      additionalProperties: false
      description: The result of a specific execution of a trigger.
      example:
        updated_at: 2021-01-01T00:00:00.000Z
        trigger_id: post-login
        created_at: 2021-01-01T00:00:00.000Z
        id: c5b35bb1-c67d-40bb-9b0d-700b6fe33dd9
        results:
        - action_name: my-action
          started_at: 2021-01-01T00:00:00.000Z
          error:
            msg: msg
            id: id
            url: url
          ended_at: 2021-01-01T00:00:00.000Z
        - action_name: my-action
          started_at: 2021-01-01T00:00:00.000Z
          error:
            msg: msg
            id: id
            url: url
          ended_at: 2021-01-01T00:00:00.000Z
        status: final
      properties:
        id:
          default: c5b35bb1-c67d-40bb-9b0d-700b6fe33dd9
          description: ID identifies this specific execution simulation. These IDs
            would resemble real executions in production.
          type: string
        trigger_id:
          $ref: '#/components/schemas/get_actions_200_response_actions_inner_supported_triggers_inner_id'
        status:
          $ref: '#/components/schemas/get_execution_200_response_status'
        results:
          items:
            $ref: '#/components/schemas/get_execution_200_response_results_inner'
          type: array
        created_at:
          default: 2021-01-01T00:00:00.000Z
          description: The time that the execution was started.
          type: string
        updated_at:
          default: 2021-01-01T00:00:00.000Z
          description: The time that the exeution finished executing.
          type: string
      type: object
    get_triggers_200_response:
      additionalProperties: false
      example:
        triggers:
        - runtimes:
          - runtimes
          - runtimes
          default_runtime: default_runtime
          compatible_triggers:
          - id: null
            version: version
          - id: null
            version: version
          id: post-login
          version: version
          status: status
        - runtimes:
          - runtimes
          - runtimes
          default_runtime: default_runtime
          compatible_triggers:
          - id: null
            version: version
          - id: null
            version: version
          id: post-login
          version: version
          status: status
      properties:
        triggers:
          items:
            $ref: '#/components/schemas/get_actions_200_response_actions_inner_supported_triggers_inner'
          type: array
      type: object
    get_bindings_200_response_bindings_inner:
      additionalProperties: false
      description: "Binding is the associative entity joining a trigger, and an action\
        \ together."
      example:
        updated_at: 2021-01-01T00:00:00.000Z
        trigger_id: post-login
        action:
          code: "module.exports = () => {}"
          supported_triggers:
          - runtimes:
            - runtimes
            - runtimes
            default_runtime: default_runtime
            compatible_triggers:
            - id: null
              version: version
            - id: null
              version: version
            id: post-login
            version: version
            status: status
          - runtimes:
            - runtimes
            - runtimes
            default_runtime: default_runtime
            compatible_triggers:
            - id: null
              version: version
            - id: null
              version: version
            id: post-login
            version: version
            status: status
          runtime: node12
          created_at: 2021-01-01T00:00:00.000Z
          deployed_version:
            key: ""
          secrets:
          - updated_at: 2021-01-01T00:00:00.000Z
            name: mySecret
          - updated_at: 2021-01-01T00:00:00.000Z
            name: mySecret
          installed_integration_id: 7d2bc0c9-c0c2-433a-9f4e-86ef80270aad
          dependencies:
          - registry_url: registry_url
            name: name
            version: version
          - registry_url: registry_url
            name: name
            version: version
          all_changes_deployed: false
          updated_at: 2021-01-01T00:00:00.000Z
          built_at: 2021-01-01T00:00:00.000Z
          name: my-action
          integration:
            privacy_policy_url: privacy_policy_url
            short_description: Awesome Auth0 integration
            terms_of_use_url: terms_of_use_url
            description: An awesome Auth0 integration
            current_release:
              required_configuration:
              - name: name
                options:
                - label: label
                  value: value
                - label: label
                  value: value
                description: description
                optional: true
                default_value: default_value
                label: label
                placeholder: placeholder
                type: UNSPECIFIED
                required: true
              - name: name
                options:
                - label: label
                  value: value
                - label: label
                  value: value
                description: description
                optional: true
                default_value: default_value
                label: label
                placeholder: placeholder
                type: UNSPECIFIED
                required: true
              required_secrets:
              - name: name
                options:
                - label: label
                  value: value
                - label: label
                  value: value
                description: description
                optional: true
                default_value: default_value
                label: label
                placeholder: placeholder
                type: UNSPECIFIED
                required: true
              - name: name
                options:
                - label: label
                  value: value
                - label: label
                  value: value
                description: description
                optional: true
                default_value: default_value
                label: label
                placeholder: placeholder
                type: UNSPECIFIED
                required: true
              semver:
                major: 5
                minor: 5
              id: id
              trigger:
                runtimes:
                - runtimes
                - runtimes
                default_runtime: default_runtime
                compatible_triggers:
                - id: null
                  version: version
                - id: null
                  version: version
                id: post-login
                version: version
                status: status
            created_at: 2021-06-21T15:47:29.072Z
            catalog_id: awesome-auth0-integration
            url_slug: awesome-auth0-integration-slug
            feature_type: action
            partner_id: b8575c12-8d9d-4b5c-b28e-671fe9d39029
            updated_at: 2021-06-21T15:47:29.072Z
            name: Example Auth0 integration
            public_support_link: public_support_link
            logo: logo
            id: 8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b
          id: 910b1053-577f-4d81-a8c8-020e7319a38a
          status: built
        created_at: 2021-01-01T00:00:00.000Z
        id: 4a881e22-0562-4178-bc91-b0f2b321dc13
        display_name: my-action-1
      properties:
        id:
          default: 4a881e22-0562-4178-bc91-b0f2b321dc13
          description: The unique ID of this binding.
          type: string
        trigger_id:
          $ref: '#/components/schemas/get_actions_200_response_actions_inner_supported_triggers_inner_id'
        display_name:
          default: my-action-1
          description: The name of the binding.
          type: string
        action:
          $ref: '#/components/schemas/get_actions_200_response_actions_inner'
        created_at:
          default: 2021-01-01T00:00:00.000Z
          description: The time when the binding was created.
          type: string
        updated_at:
          default: 2021-01-01T00:00:00.000Z
          description: The time when the binding was updated.
          type: string
      type: object
    get_bindings_200_response:
      additionalProperties: false
      example:
        per_page: 1.4658129805029452
        total: 0.8008281904610115
        bindings:
        - updated_at: 2021-01-01T00:00:00.000Z
          trigger_id: post-login
          action:
            code: "module.exports = () => {}"
            supported_triggers:
            - runtimes:
              - runtimes
              - runtimes
              default_runtime: default_runtime
              compatible_triggers:
              - id: null
                version: version
              - id: null
                version: version
              id: post-login
              version: version
              status: status
            - runtimes:
              - runtimes
              - runtimes
              default_runtime: default_runtime
              compatible_triggers:
              - id: null
                version: version
              - id: null
                version: version
              id: post-login
              version: version
              status: status
            runtime: node12
            created_at: 2021-01-01T00:00:00.000Z
            deployed_version:
              key: ""
            secrets:
            - updated_at: 2021-01-01T00:00:00.000Z
              name: mySecret
            - updated_at: 2021-01-01T00:00:00.000Z
              name: mySecret
            installed_integration_id: 7d2bc0c9-c0c2-433a-9f4e-86ef80270aad
            dependencies:
            - registry_url: registry_url
              name: name
              version: version
            - registry_url: registry_url
              name: name
              version: version
            all_changes_deployed: false
            updated_at: 2021-01-01T00:00:00.000Z
            built_at: 2021-01-01T00:00:00.000Z
            name: my-action
            integration:
              privacy_policy_url: privacy_policy_url
              short_description: Awesome Auth0 integration
              terms_of_use_url: terms_of_use_url
              description: An awesome Auth0 integration
              current_release:
                required_configuration:
                - name: name
                  options:
                  - label: label
                    value: value
                  - label: label
                    value: value
                  description: description
                  optional: true
                  default_value: default_value
                  label: label
                  placeholder: placeholder
                  type: UNSPECIFIED
                  required: true
                - name: name
                  options:
                  - label: label
                    value: value
                  - label: label
                    value: value
                  description: description
                  optional: true
                  default_value: default_value
                  label: label
                  placeholder: placeholder
                  type: UNSPECIFIED
                  required: true
                required_secrets:
                - name: name
                  options:
                  - label: label
                    value: value
                  - label: label
                    value: value
                  description: description
                  optional: true
                  default_value: default_value
                  label: label
                  placeholder: placeholder
                  type: UNSPECIFIED
                  required: true
                - name: name
                  options:
                  - label: label
                    value: value
                  - label: label
                    value: value
                  description: description
                  optional: true
                  default_value: default_value
                  label: label
                  placeholder: placeholder
                  type: UNSPECIFIED
                  required: true
                semver:
                  major: 5
                  minor: 5
                id: id
                trigger:
                  runtimes:
                  - runtimes
                  - runtimes
                  default_runtime: default_runtime
                  compatible_triggers:
                  - id: null
                    version: version
                  - id: null
                    version: version
                  id: post-login
                  version: version
                  status: status
              created_at: 2021-06-21T15:47:29.072Z
              catalog_id: awesome-auth0-integration
              url_slug: awesome-auth0-integration-slug
              feature_type: action
              partner_id: b8575c12-8d9d-4b5c-b28e-671fe9d39029
              updated_at: 2021-06-21T15:47:29.072Z
              name: Example Auth0 integration
              public_support_link: public_support_link
              logo: logo
              id: 8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b
            id: 910b1053-577f-4d81-a8c8-020e7319a38a
            status: built
          created_at: 2021-01-01T00:00:00.000Z
          id: 4a881e22-0562-4178-bc91-b0f2b321dc13
          display_name: my-action-1
        - updated_at: 2021-01-01T00:00:00.000Z
          trigger_id: post-login
          action:
            code: "module.exports = () => {}"
            supported_triggers:
            - runtimes:
              - runtimes
              - runtimes
              default_runtime: default_runtime
              compatible_triggers:
              - id: null
                version: version
              - id: null
                version: version
              id: post-login
              version: version
              status: status
            - runtimes:
              - runtimes
              - runtimes
              default_runtime: default_runtime
              compatible_triggers:
              - id: null
                version: version
              - id: null
                version: version
              id: post-login
              version: version
              status: status
            runtime: node12
            created_at: 2021-01-01T00:00:00.000Z
            deployed_version:
              key: ""
            secrets:
            - updated_at: 2021-01-01T00:00:00.000Z
              name: mySecret
            - updated_at: 2021-01-01T00:00:00.000Z
              name: mySecret
            installed_integration_id: 7d2bc0c9-c0c2-433a-9f4e-86ef80270aad
            dependencies:
            - registry_url: registry_url
              name: name
              version: version
            - registry_url: registry_url
              name: name
              version: version
            all_changes_deployed: false
            updated_at: 2021-01-01T00:00:00.000Z
            built_at: 2021-01-01T00:00:00.000Z
            name: my-action
            integration:
              privacy_policy_url: privacy_policy_url
              short_description: Awesome Auth0 integration
              terms_of_use_url: terms_of_use_url
              description: An awesome Auth0 integration
              current_release:
                required_configuration:
                - name: name
                  options:
                  - label: label
                    value: value
                  - label: label
                    value: value
                  description: description
                  optional: true
                  default_value: default_value
                  label: label
                  placeholder: placeholder
                  type: UNSPECIFIED
                  required: true
                - name: name
                  options:
                  - label: label
                    value: value
                  - label: label
                    value: value
                  description: description
                  optional: true
                  default_value: default_value
                  label: label
                  placeholder: placeholder
                  type: UNSPECIFIED
                  required: true
                required_secrets:
                - name: name
                  options:
                  - label: label
                    value: value
                  - label: label
                    value: value
                  description: description
                  optional: true
                  default_value: default_value
                  label: label
                  placeholder: placeholder
                  type: UNSPECIFIED
                  required: true
                - name: name
                  options:
                  - label: label
                    value: value
                  - label: label
                    value: value
                  description: description
                  optional: true
                  default_value: default_value
                  label: label
                  placeholder: placeholder
                  type: UNSPECIFIED
                  required: true
                semver:
                  major: 5
                  minor: 5
                id: id
                trigger:
                  runtimes:
                  - runtimes
                  - runtimes
                  default_runtime: default_runtime
                  compatible_triggers:
                  - id: null
                    version: version
                  - id: null
                    version: version
                  id: post-login
                  version: version
                  status: status
              created_at: 2021-06-21T15:47:29.072Z
              catalog_id: awesome-auth0-integration
              url_slug: awesome-auth0-integration-slug
              feature_type: action
              partner_id: b8575c12-8d9d-4b5c-b28e-671fe9d39029
              updated_at: 2021-06-21T15:47:29.072Z
              name: Example Auth0 integration
              public_support_link: public_support_link
              logo: logo
              id: 8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b
            id: 910b1053-577f-4d81-a8c8-020e7319a38a
            status: built
          created_at: 2021-01-01T00:00:00.000Z
          id: 4a881e22-0562-4178-bc91-b0f2b321dc13
          display_name: my-action-1
        page: 6.027456183070403
      properties:
        total:
          default: 1
          description: The total result count.
          type: number
        page:
          default: 0
          description: Page index of the results being returned. First page is 0.
          type: number
        per_page:
          default: 20
          description: Number of results per page.
          type: number
        bindings:
          description: The list of actions that are bound to this trigger in the order
            in which they will be executed.
          items:
            $ref: '#/components/schemas/get_bindings_200_response_bindings_inner'
          type: array
      type: object
    patch_bindings_request_bindings_inner_oneOf_ref_type:
      default: action_name
      description: "How the action is being referred to: `action_id` or `action_name`."
      enum:
      - binding_id
      - action_id
      - action_name
      type: string
    patch_bindings_request_bindings_inner_oneOf_ref:
      additionalProperties: true
      description: A reference to an action. An action can be referred to by ID or
        by Name.
      properties:
        type:
          $ref: '#/components/schemas/patch_bindings_request_bindings_inner_oneOf_ref_type'
        value:
          default: my-action
          description: The id or name of an action that is being bound to a trigger.
          type: string
      type: object
    patch_bindings_request_bindings_inner_oneOf:
      additionalProperties: false
      properties:
        ref:
          $ref: '#/components/schemas/patch_bindings_request_bindings_inner_oneOf_ref'
        display_name:
          default: my-action-1
          description: The name of the binding.
          type: string
        secrets:
          description: The list of secrets that are included in an action or a version
            of an action.
          items:
            $ref: '#/components/schemas/post_action_request_secrets_inner'
          type: array
      required:
      - ref
      type: object
    patch_bindings_request_bindings_inner:
      oneOf:
      - $ref: '#/components/schemas/patch_bindings_request_bindings_inner_oneOf'
    patch_bindings_request:
      additionalProperties: false
      properties:
        bindings:
          description: The actions that will be bound to this trigger. The order in
            which they are included will be the order in which they are executed.
          items:
            $ref: '#/components/schemas/patch_bindings_request_bindings_inner'
          type: array
      type: object
    patch_bindings_200_response:
      additionalProperties: false
      example:
        bindings:
        - updated_at: 2021-01-01T00:00:00.000Z
          trigger_id: post-login
          action:
            code: "module.exports = () => {}"
            supported_triggers:
            - runtimes:
              - runtimes
              - runtimes
              default_runtime: default_runtime
              compatible_triggers:
              - id: null
                version: version
              - id: null
                version: version
              id: post-login
              version: version
              status: status
            - runtimes:
              - runtimes
              - runtimes
              default_runtime: default_runtime
              compatible_triggers:
              - id: null
                version: version
              - id: null
                version: version
              id: post-login
              version: version
              status: status
            runtime: node12
            created_at: 2021-01-01T00:00:00.000Z
            deployed_version:
              key: ""
            secrets:
            - updated_at: 2021-01-01T00:00:00.000Z
              name: mySecret
            - updated_at: 2021-01-01T00:00:00.000Z
              name: mySecret
            installed_integration_id: 7d2bc0c9-c0c2-433a-9f4e-86ef80270aad
            dependencies:
            - registry_url: registry_url
              name: name
              version: version
            - registry_url: registry_url
              name: name
              version: version
            all_changes_deployed: false
            updated_at: 2021-01-01T00:00:00.000Z
            built_at: 2021-01-01T00:00:00.000Z
            name: my-action
            integration:
              privacy_policy_url: privacy_policy_url
              short_description: Awesome Auth0 integration
              terms_of_use_url: terms_of_use_url
              description: An awesome Auth0 integration
              current_release:
                required_configuration:
                - name: name
                  options:
                  - label: label
                    value: value
                  - label: label
                    value: value
                  description: description
                  optional: true
                  default_value: default_value
                  label: label
                  placeholder: placeholder
                  type: UNSPECIFIED
                  required: true
                - name: name
                  options:
                  - label: label
                    value: value
                  - label: label
                    value: value
                  description: description
                  optional: true
                  default_value: default_value
                  label: label
                  placeholder: placeholder
                  type: UNSPECIFIED
                  required: true
                required_secrets:
                - name: name
                  options:
                  - label: label
                    value: value
                  - label: label
                    value: value
                  description: description
                  optional: true
                  default_value: default_value
                  label: label
                  placeholder: placeholder
                  type: UNSPECIFIED
                  required: true
                - name: name
                  options:
                  - label: label
                    value: value
                  - label: label
                    value: value
                  description: description
                  optional: true
                  default_value: default_value
                  label: label
                  placeholder: placeholder
                  type: UNSPECIFIED
                  required: true
                semver:
                  major: 5
                  minor: 5
                id: id
                trigger:
                  runtimes:
                  - runtimes
                  - runtimes
                  default_runtime: default_runtime
                  compatible_triggers:
                  - id: null
                    version: version
                  - id: null
                    version: version
                  id: post-login
                  version: version
                  status: status
              created_at: 2021-06-21T15:47:29.072Z
              catalog_id: awesome-auth0-integration
              url_slug: awesome-auth0-integration-slug
              feature_type: action
              partner_id: b8575c12-8d9d-4b5c-b28e-671fe9d39029
              updated_at: 2021-06-21T15:47:29.072Z
              name: Example Auth0 integration
              public_support_link: public_support_link
              logo: logo
              id: 8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b
            id: 910b1053-577f-4d81-a8c8-020e7319a38a
            status: built
          created_at: 2021-01-01T00:00:00.000Z
          id: 4a881e22-0562-4178-bc91-b0f2b321dc13
          display_name: my-action-1
        - updated_at: 2021-01-01T00:00:00.000Z
          trigger_id: post-login
          action:
            code: "module.exports = () => {}"
            supported_triggers:
            - runtimes:
              - runtimes
              - runtimes
              default_runtime: default_runtime
              compatible_triggers:
              - id: null
                version: version
              - id: null
                version: version
              id: post-login
              version: version
              status: status
            - runtimes:
              - runtimes
              - runtimes
              default_runtime: default_runtime
              compatible_triggers:
              - id: null
                version: version
              - id: null
                version: version
              id: post-login
              version: version
              status: status
            runtime: node12
            created_at: 2021-01-01T00:00:00.000Z
            deployed_version:
              key: ""
            secrets:
            - updated_at: 2021-01-01T00:00:00.000Z
              name: mySecret
            - updated_at: 2021-01-01T00:00:00.000Z
              name: mySecret
            installed_integration_id: 7d2bc0c9-c0c2-433a-9f4e-86ef80270aad
            dependencies:
            - registry_url: registry_url
              name: name
              version: version
            - registry_url: registry_url
              name: name
              version: version
            all_changes_deployed: false
            updated_at: 2021-01-01T00:00:00.000Z
            built_at: 2021-01-01T00:00:00.000Z
            name: my-action
            integration:
              privacy_policy_url: privacy_policy_url
              short_description: Awesome Auth0 integration
              terms_of_use_url: terms_of_use_url
              description: An awesome Auth0 integration
              current_release:
                required_configuration:
                - name: name
                  options:
                  - label: label
                    value: value
                  - label: label
                    value: value
                  description: description
                  optional: true
                  default_value: default_value
                  label: label
                  placeholder: placeholder
                  type: UNSPECIFIED
                  required: true
                - name: name
                  options:
                  - label: label
                    value: value
                  - label: label
                    value: value
                  description: description
                  optional: true
                  default_value: default_value
                  label: label
                  placeholder: placeholder
                  type: UNSPECIFIED
                  required: true
                required_secrets:
                - name: name
                  options:
                  - label: label
                    value: value
                  - label: label
                    value: value
                  description: description
                  optional: true
                  default_value: default_value
                  label: label
                  placeholder: placeholder
                  type: UNSPECIFIED
                  required: true
                - name: name
                  options:
                  - label: label
                    value: value
                  - label: label
                    value: value
                  description: description
                  optional: true
                  default_value: default_value
                  label: label
                  placeholder: placeholder
                  type: UNSPECIFIED
                  required: true
                semver:
                  major: 5
                  minor: 5
                id: id
                trigger:
                  runtimes:
                  - runtimes
                  - runtimes
                  default_runtime: default_runtime
                  compatible_triggers:
                  - id: null
                    version: version
                  - id: null
                    version: version
                  id: post-login
                  version: version
                  status: status
              created_at: 2021-06-21T15:47:29.072Z
              catalog_id: awesome-auth0-integration
              url_slug: awesome-auth0-integration-slug
              feature_type: action
              partner_id: b8575c12-8d9d-4b5c-b28e-671fe9d39029
              updated_at: 2021-06-21T15:47:29.072Z
              name: Example Auth0 integration
              public_support_link: public_support_link
              logo: logo
              id: 8e9fe2d0-a2fc-4c8c-9e35-dae5afadb70b
            id: 910b1053-577f-4d81-a8c8-020e7319a38a
            status: built
          created_at: 2021-01-01T00:00:00.000Z
          id: 4a881e22-0562-4178-bc91-b0f2b321dc13
          display_name: my-action-1
      properties:
        bindings:
          items:
            $ref: '#/components/schemas/get_bindings_200_response_bindings_inner'
          type: array
      type: object
    get_breached_password_detection_200_response_shields_inner:
      enum:
      - block
      - user_notification
      - admin_notification
      type: string
    get_breached_password_detection_200_response_admin_notification_frequency_inner:
      enum:
      - immediately
      - daily
      - weekly
      - monthly
      type: string
    get_breached_password_detection_200_response_method:
      default: standard
      description: |-
        The subscription level for breached password detection methods. Use "enhanced" to enable Credential Guard.
                Possible values: <code>standard</code>, <code>enhanced</code>.
      enum:
      - standard
      - enhanced
      type: string
    get_breached_password_detection_200_response_stage_pre_user_registration_shields_inner:
      enum:
      - block
      - admin_notification
      type: string
    get_breached_password_detection_200_response_stage_pre_user_registration:
      additionalProperties: false
      example:
        shields:
        - block
        - block
      properties:
        shields:
          description: |-
            Action to take when a breached password is detected during a signup.
                          Possible values: <code>block</code>, <code>admin_notification</code>.
          items:
            $ref: '#/components/schemas/get_breached_password_detection_200_response_stage_pre_user_registration_shields_inner'
          type: array
      type: object
    get_breached_password_detection_200_response_stage:
      additionalProperties: false
      example:
        pre-user-registration:
          shields:
          - block
          - block
      properties:
        pre-user-registration:
          $ref: '#/components/schemas/get_breached_password_detection_200_response_stage_pre_user_registration'
      type: object
    get_breached_password_detection_200_response:
      additionalProperties: {}
      example:
        shields:
        - block
        - block
        method: standard
        stage:
          pre-user-registration:
            shields:
            - block
            - block
        admin_notification_frequency:
        - immediately
        - immediately
        enabled: true
      properties:
        enabled:
          default: true
          description: Whether or not breached password detection is active.
          type: boolean
        shields:
          description: |-
            Action to take when a breached password is detected during a login.
                  Possible values: <code>block</code>, <code>user_notification</code>, <code>admin_notification</code>.
          items:
            $ref: '#/components/schemas/get_breached_password_detection_200_response_shields_inner'
          type: array
        admin_notification_frequency:
          description: |-
            When "admin_notification" is enabled, determines how often email notifications are sent.
                    Possible values: <code>immediately</code>, <code>daily</code>, <code>weekly</code>, <code>monthly</code>.
          items:
            $ref: '#/components/schemas/get_breached_password_detection_200_response_admin_notification_frequency_inner'
          type: array
        method:
          $ref: '#/components/schemas/get_breached_password_detection_200_response_method'
        stage:
          $ref: '#/components/schemas/get_breached_password_detection_200_response_stage'
      type: object
    patch_breached_password_detection_request:
      additionalProperties: false
      properties:
        enabled:
          default: true
          description: Whether or not breached password detection is active.
          type: boolean
        shields:
          description: |-
            Action to take when a breached password is detected during a login.
                  Possible values: <code>block</code>, <code>user_notification</code>, <code>admin_notification</code>.
          items:
            $ref: '#/components/schemas/get_breached_password_detection_200_response_shields_inner'
          type: array
        admin_notification_frequency:
          description: |-
            When "admin_notification" is enabled, determines how often email notifications are sent.
                    Possible values: <code>immediately</code>, <code>daily</code>, <code>weekly</code>, <code>monthly</code>.
          items:
            $ref: '#/components/schemas/get_breached_password_detection_200_response_admin_notification_frequency_inner'
          type: array
        method:
          $ref: '#/components/schemas/get_breached_password_detection_200_response_method'
        stage:
          $ref: '#/components/schemas/get_breached_password_detection_200_response_stage'
      type: object
    get_brute_force_protection_200_response_shields_inner:
      enum:
      - block
      - user_notification
      type: string
    get_brute_force_protection_200_response_allowlist_inner:
      anyOf:
      - format: ipv4
        type: string
      - format: cidr
        type: string
      - format: ipv6
        type: string
      - format: ipv6_cidr
        type: string
      type: string
    get_brute_force_protection_200_response_mode:
      default: count_per_identifier_and_ip
      description: |-
        Account Lockout: Determines whether or not IP address is used when counting failed attempts.
                  Possible values: <code>count_per_identifier_and_ip</code>, <code>count_per_identifier</code>.
      enum:
      - count_per_identifier_and_ip
      - count_per_identifier
      type: string
    get_brute_force_protection_200_response:
      additionalProperties: {}
      example:
        allowlist:
        - get_brute_force_protection_200_response_allowlist_inner
        - get_brute_force_protection_200_response_allowlist_inner
        mode: count_per_identifier_and_ip
        shields:
        - block
        - block
        max_attempts: 0
        enabled: true
      properties:
        enabled:
          description: Whether or not brute force attack protections are active.
          type: boolean
        shields:
          description: |-
            Action to take when a brute force protection threshold is violated.
                    Possible values: <code>block</code>, <code>user_notification</code>.
          items:
            $ref: '#/components/schemas/get_brute_force_protection_200_response_shields_inner'
          type: array
        allowlist:
          description: List of trusted IP addresses that will not have attack protection
            enforced against them.
          items:
            $ref: '#/components/schemas/get_brute_force_protection_200_response_allowlist_inner'
          type: array
        mode:
          $ref: '#/components/schemas/get_brute_force_protection_200_response_mode'
        max_attempts:
          default: 10
          description: Maximum number of unsuccessful attempts.
          type: integer
      type: object
    patch_brute_force_protection_request:
      additionalProperties: false
      properties:
        enabled:
          description: Whether or not brute force attack protections are active.
          type: boolean
        shields:
          description: |-
            Action to take when a brute force protection threshold is violated.
                    Possible values: <code>block</code>, <code>user_notification</code>.
          items:
            $ref: '#/components/schemas/get_brute_force_protection_200_response_shields_inner'
          type: array
        allowlist:
          description: List of trusted IP addresses that will not have attack protection
            enforced against them.
          items:
            $ref: '#/components/schemas/get_brute_force_protection_200_response_allowlist_inner'
          type: array
        mode:
          $ref: '#/components/schemas/get_brute_force_protection_200_response_mode'
        max_attempts:
          default: 10
          description: Maximum number of unsuccessful attempts.
          type: integer
      type: object
    get_suspicious_ip_throttling_200_response_stage_pre_login:
      additionalProperties: false
      description: Configuration options that apply before every login attempt.
      example:
        rate: 6
        max_attempts: 0
      properties:
        max_attempts:
          default: 100
          description: Total number of attempts allowed per day.
          type: integer
        rate:
          default: 864000
          description: "Interval of time, given in milliseconds, at which new attempts\
            \ are granted."
          type: integer
      type: object
    get_suspicious_ip_throttling_200_response_stage_pre_user_registration:
      additionalProperties: false
      description: Configuration options that apply before every user registration
        attempt.
      example:
        rate: 5
        max_attempts: 1
      properties:
        max_attempts:
          default: 50
          description: Total number of attempts allowed.
          type: integer
        rate:
          default: 1728000
          description: "Interval of time, given in milliseconds, at which new attempts\
            \ are granted."
          type: integer
      type: object
    get_suspicious_ip_throttling_200_response_stage:
      additionalProperties: false
      description: Holds per-stage configuration options (max_attempts and rate).
      example:
        pre-login:
          rate: 6
          max_attempts: 0
        pre-user-registration:
          rate: 5
          max_attempts: 1
      properties:
        pre-login:
          $ref: '#/components/schemas/get_suspicious_ip_throttling_200_response_stage_pre_login'
        pre-user-registration:
          $ref: '#/components/schemas/get_suspicious_ip_throttling_200_response_stage_pre_user_registration'
      type: object
    get_suspicious_ip_throttling_200_response:
      additionalProperties: {}
      example:
        allowlist:
        - get_brute_force_protection_200_response_allowlist_inner
        - get_brute_force_protection_200_response_allowlist_inner
        shields:
        - block
        - block
        stage:
          pre-login:
            rate: 6
            max_attempts: 0
          pre-user-registration:
            rate: 5
            max_attempts: 1
        enabled: true
      properties:
        enabled:
          description: Whether or not suspicious IP throttling attack protections
            are active.
          type: boolean
        shields:
          description: |-
            Action to take when a suspicious IP throttling threshold is violated.
                      Possible values: <code>block</code>, <code>admin_notification</code>.
          items:
            $ref: '#/components/schemas/get_breached_password_detection_200_response_stage_pre_user_registration_shields_inner'
          type: array
        allowlist:
          description: List of trusted IP addresses that will not have attack protection
            enforced against them.
          items:
            $ref: '#/components/schemas/get_brute_force_protection_200_response_allowlist_inner'
          type: array
        stage:
          $ref: '#/components/schemas/get_suspicious_ip_throttling_200_response_stage'
      type: object
    patch_suspicious_ip_throttling_request:
      additionalProperties: false
      properties:
        enabled:
          description: Whether or not suspicious IP throttling attack protections
            are active.
          type: boolean
        shields:
          description: |-
            Action to take when a suspicious IP throttling threshold is violated.
                      Possible values: <code>block</code>, <code>admin_notification</code>.
          items:
            $ref: '#/components/schemas/get_breached_password_detection_200_response_stage_pre_user_registration_shields_inner'
          type: array
        allowlist:
          description: List of trusted IP addresses that will not have attack protection
            enforced against them.
          items:
            $ref: '#/components/schemas/get_brute_force_protection_200_response_allowlist_inner'
          type: array
        stage:
          $ref: '#/components/schemas/get_suspicious_ip_throttling_200_response_stage'
      type: object
    get_branding_200_response_colors_page_background:
      description: |
        Page Background Color or Gradient.
        Property contains either <code>null</code> to unset, a solid color as a string value <code>#FFFFFF</code>, or a gradient as an object.

        <pre><code>
        {
          type: 'linear-gradient',
          start: '#FFFFFF',
          end: '#000000',
          angle_deg: 35
        }
        </code></pre>
      oneOf:
      - nullable: true
        type: string
      - additionalProperties: true
        nullable: true
        type: object
    get_branding_200_response_colors:
      additionalProperties: false
      description: Custom color settings.
      example:
        page_background: get_branding_200_response_colors_page_background
        primary: primary
      properties:
        primary:
          description: Accent color.
          type: string
        page_background:
          $ref: '#/components/schemas/get_branding_200_response_colors_page_background'
      type: object
    get_branding_200_response_font:
      additionalProperties: false
      description: Custom font settings.
      example:
        url: url
      properties:
        url:
          description: URL for the custom font. The URL must point to a font file
            and not a stylesheet. Must use HTTPS.
          type: string
      type: object
    get_branding_200_response:
      additionalProperties: true
      example:
        favicon_url: favicon_url
        logo_url: logo_url
        colors:
          page_background: get_branding_200_response_colors_page_background
          primary: primary
        font:
          url: url
      properties:
        colors:
          $ref: '#/components/schemas/get_branding_200_response_colors'
        favicon_url:
          description: URL for the favicon. Must use HTTPS.
          type: string
        logo_url:
          description: URL for the logo. Must use HTTPS.
          type: string
        font:
          $ref: '#/components/schemas/get_branding_200_response_font'
      type: object
    patch_branding_request_colors:
      additionalProperties: false
      description: Custom color settings.
      nullable: true
      properties:
        primary:
          description: Accent color.
          nullable: true
          type: string
        page_background:
          $ref: '#/components/schemas/get_branding_200_response_colors_page_background'
      type: object
    patch_branding_request_font:
      additionalProperties: false
      description: Custom font settings.
      nullable: true
      properties:
        url:
          description: URL for the custom font. The URL must point to a font file
            and not a stylesheet. Must use HTTPS.
          nullable: true
          type: string
      type: object
    patch_branding_request:
      additionalProperties: false
      description: Branding settings
      properties:
        colors:
          $ref: '#/components/schemas/patch_branding_request_colors'
        favicon_url:
          description: URL for the favicon. Must use HTTPS.
          nullable: true
          type: string
        logo_url:
          description: URL for the logo. Must use HTTPS.
          nullable: true
          type: string
        font:
          $ref: '#/components/schemas/patch_branding_request_font'
      type: object
    get_universal_login_200_response_oneOf:
      additionalProperties: false
      example:
        body: body
      properties:
        body:
          description: The custom page template for the New Universal Login Experience
          type: string
      type: object
    get_universal_login_200_response:
      oneOf:
      - $ref: '#/components/schemas/get_universal_login_200_response_oneOf'
      - description: The custom page template for the New Universal Login Experience
        type: string
    put_universal_login_request_oneOf:
      additionalProperties: false
      properties:
        template:
          maxLength: 102400
          type: string
      required:
      - template
      type: object
    put_universal_login_request:
      oneOf:
      - maxLength: 102400
        type: string
      - $ref: '#/components/schemas/put_universal_login_request_oneOf'
    post_branding_theme_request_borders_buttons_style:
      description: Buttons style
      enum:
      - pill
      - rounded
      - sharp
      type: string
    post_branding_theme_request_borders_inputs_style:
      description: Inputs style
      enum:
      - pill
      - rounded
      - sharp
      type: string
    post_branding_theme_request_borders:
      additionalProperties: false
      example:
        show_widget_shadow: true
        buttons_style: pill
        input_border_radius: 1.4658129805029452
        input_border_weight: 5.962133916683182
        widget_border_weight: 5.637376656633329
        widget_corner_radius: 2.3021358869347655
        button_border_weight: 6.027456183070403
        button_border_radius: 0.8008281904610115
        inputs_style: pill
      properties:
        button_border_radius:
          description: Button border radius
          type: number
        button_border_weight:
          description: Button border weight
          type: number
        buttons_style:
          $ref: '#/components/schemas/post_branding_theme_request_borders_buttons_style'
        input_border_radius:
          description: Input border radius
          type: number
        input_border_weight:
          description: Input border weight
          type: number
        inputs_style:
          $ref: '#/components/schemas/post_branding_theme_request_borders_inputs_style'
        show_widget_shadow:
          description: Show widget shadow
          type: boolean
        widget_border_weight:
          description: Widget border weight
          type: number
        widget_corner_radius:
          description: Widget corner radius
          type: number
      required:
      - button_border_radius
      - button_border_weight
      - buttons_style
      - input_border_radius
      - input_border_weight
      - inputs_style
      - show_widget_shadow
      - widget_border_weight
      - widget_corner_radius
      type: object
    post_branding_theme_request_colors:
      additionalProperties: false
      example:
        secondary_button_border: secondary_button_border
        primary_button: primary_button
        secondary_button_label: secondary_button_label
        body_text: body_text
        primary_button_label: primary_button_label
        widget_background: widget_background
        error: error
        icons: icons
        widget_border: widget_border
        base_focus_color: base_focus_color
        input_border: input_border
        links_focused_components: links_focused_components
        input_filled_text: input_filled_text
        base_hover_color: base_hover_color
        input_labels_placeholders: input_labels_placeholders
        success: success
        input_background: input_background
        header: header
      properties:
        base_focus_color:
          description: Base Focus Color
          type: string
        base_hover_color:
          description: Base Hover Color
          type: string
        body_text:
          description: Body text
          type: string
        error:
          description: Error
          type: string
        header:
          description: Header
          type: string
        icons:
          description: Icons
          type: string
        input_background:
          description: Input background
          type: string
        input_border:
          description: Input border
          type: string
        input_filled_text:
          description: Input filled text
          type: string
        input_labels_placeholders:
          description: Input labels & placeholders
          type: string
        links_focused_components:
          description: Links & focused components
          type: string
        primary_button:
          description: Primary button
          type: string
        primary_button_label:
          description: Primary button label
          type: string
        secondary_button_border:
          description: Secondary button border
          type: string
        secondary_button_label:
          description: Secondary button label
          type: string
        success:
          description: Success
          type: string
        widget_background:
          description: Widget background
          type: string
        widget_border:
          description: Widget border
          type: string
      required:
      - body_text
      - error
      - header
      - icons
      - input_background
      - input_border
      - input_filled_text
      - input_labels_placeholders
      - links_focused_components
      - primary_button
      - primary_button_label
      - secondary_button_border
      - secondary_button_label
      - success
      - widget_background
      - widget_border
      type: object
    post_branding_theme_request_fonts_body_text:
      additionalProperties: false
      description: Body text
      example:
        size: 7.061401241503109
        bold: true
      properties:
        bold:
          description: Body text bold
          type: boolean
        size:
          description: Body text size
          type: number
      required:
      - bold
      - size
      type: object
    post_branding_theme_request_fonts_buttons_text:
      additionalProperties: false
      description: Buttons text
      example:
        size: 9.301444243932576
        bold: true
      properties:
        bold:
          description: Buttons text bold
          type: boolean
        size:
          description: Buttons text size
          type: number
      required:
      - bold
      - size
      type: object
    post_branding_theme_request_fonts_input_labels:
      additionalProperties: false
      description: Input Labels
      example:
        size: 3.616076749251911
        bold: true
      properties:
        bold:
          description: Input Labels bold
          type: boolean
        size:
          description: Input Labels size
          type: number
      required:
      - bold
      - size
      type: object
    post_branding_theme_request_fonts_links:
      additionalProperties: false
      description: Links
      example:
        size: 2.027123023002322
        bold: true
      properties:
        bold:
          description: Links bold
          type: boolean
        size:
          description: Links size
          type: number
      required:
      - bold
      - size
      type: object
    post_branding_theme_request_fonts_links_style:
      description: Links style
      enum:
      - normal
      - underlined
      type: string
    post_branding_theme_request_fonts_subtitle:
      additionalProperties: false
      description: Subtitle
      example:
        size: 7.386281948385884
        bold: true
      properties:
        bold:
          description: Subtitle bold
          type: boolean
        size:
          description: Subtitle size
          type: number
      required:
      - bold
      - size
      type: object
    post_branding_theme_request_fonts_title:
      additionalProperties: false
      description: Title
      example:
        size: 1.2315135367772556
        bold: true
      properties:
        bold:
          description: Title bold
          type: boolean
        size:
          description: Title size
          type: number
      required:
      - bold
      - size
      type: object
    post_branding_theme_request_fonts:
      additionalProperties: false
      example:
        body_text:
          size: 7.061401241503109
          bold: true
        buttons_text:
          size: 9.301444243932576
          bold: true
        input_labels:
          size: 3.616076749251911
          bold: true
        subtitle:
          size: 7.386281948385884
          bold: true
        links:
          size: 2.027123023002322
          bold: true
        title:
          size: 1.2315135367772556
          bold: true
        reference_text_size: 4.145608029883936
        font_url: font_url
        links_style: normal
      properties:
        body_text:
          $ref: '#/components/schemas/post_branding_theme_request_fonts_body_text'
        buttons_text:
          $ref: '#/components/schemas/post_branding_theme_request_fonts_buttons_text'
        font_url:
          description: Font URL
          type: string
        input_labels:
          $ref: '#/components/schemas/post_branding_theme_request_fonts_input_labels'
        links:
          $ref: '#/components/schemas/post_branding_theme_request_fonts_links'
        links_style:
          $ref: '#/components/schemas/post_branding_theme_request_fonts_links_style'
        reference_text_size:
          description: Reference text size
          type: number
        subtitle:
          $ref: '#/components/schemas/post_branding_theme_request_fonts_subtitle'
        title:
          $ref: '#/components/schemas/post_branding_theme_request_fonts_title'
      required:
      - body_text
      - buttons_text
      - font_url
      - input_labels
      - links
      - links_style
      - reference_text_size
      - subtitle
      - title
      type: object
    post_branding_theme_request_page_background_page_layout:
      description: Page Layout
      enum:
      - center
      - left
      - right
      type: string
    post_branding_theme_request_page_background:
      additionalProperties: false
      example:
        background_image_url: background_image_url
        background_color: background_color
        page_layout: center
      properties:
        background_color:
          description: Background color
          type: string
        background_image_url:
          description: Background image url
          type: string
        page_layout:
          $ref: '#/components/schemas/post_branding_theme_request_page_background_page_layout'
      required:
      - background_color
      - background_image_url
      - page_layout
      type: object
    post_branding_theme_request_widget_header_text_alignment:
      description: Header text alignment
      enum:
      - center
      - left
      - right
      type: string
    post_branding_theme_request_widget_logo_position:
      description: Logo position
      enum:
      - center
      - left
      - none
      - right
      type: string
    post_branding_theme_request_widget_social_buttons_layout:
      description: Social buttons layout
      enum:
      - bottom
      - top
      type: string
    post_branding_theme_request_widget:
      additionalProperties: false
      example:
        social_buttons_layout: bottom
        header_text_alignment: center
        logo_url: logo_url
        logo_height: 1.0246457001441578
        logo_position: center
      properties:
        header_text_alignment:
          $ref: '#/components/schemas/post_branding_theme_request_widget_header_text_alignment'
        logo_height:
          description: Logo height
          type: number
        logo_position:
          $ref: '#/components/schemas/post_branding_theme_request_widget_logo_position'
        logo_url:
          description: Logo url
          type: string
        social_buttons_layout:
          $ref: '#/components/schemas/post_branding_theme_request_widget_social_buttons_layout'
      required:
      - header_text_alignment
      - logo_height
      - logo_position
      - logo_url
      - social_buttons_layout
      type: object
    post_branding_theme_request:
      additionalProperties: false
      description: Branding theme
      properties:
        borders:
          $ref: '#/components/schemas/post_branding_theme_request_borders'
        colors:
          $ref: '#/components/schemas/post_branding_theme_request_colors'
        displayName:
          description: Display Name
          maxLength: 2048
          type: string
        fonts:
          $ref: '#/components/schemas/post_branding_theme_request_fonts'
        page_background:
          $ref: '#/components/schemas/post_branding_theme_request_page_background'
        widget:
          $ref: '#/components/schemas/post_branding_theme_request_widget'
      required:
      - borders
      - colors
      - fonts
      - page_background
      - widget
      type: object
    post_branding_theme_200_response:
      additionalProperties: false
      example:
        page_background:
          background_image_url: background_image_url
          background_color: background_color
          page_layout: center
        widget:
          social_buttons_layout: bottom
          header_text_alignment: center
          logo_url: logo_url
          logo_height: 1.0246457001441578
          logo_position: center
        borders:
          show_widget_shadow: true
          buttons_style: pill
          input_border_radius: 1.4658129805029452
          input_border_weight: 5.962133916683182
          widget_border_weight: 5.637376656633329
          widget_corner_radius: 2.3021358869347655
          button_border_weight: 6.027456183070403
          button_border_radius: 0.8008281904610115
          inputs_style: pill
        fonts:
          body_text:
            size: 7.061401241503109
            bold: true
          buttons_text:
            size: 9.301444243932576
            bold: true
          input_labels:
            size: 3.616076749251911
            bold: true
          subtitle:
            size: 7.386281948385884
            bold: true
          links:
            size: 2.027123023002322
            bold: true
          title:
            size: 1.2315135367772556
            bold: true
          reference_text_size: 4.145608029883936
          font_url: font_url
          links_style: normal
        displayName: displayName
        themeId: themeId
        colors:
          secondary_button_border: secondary_button_border
          primary_button: primary_button
          secondary_button_label: secondary_button_label
          body_text: body_text
          primary_button_label: primary_button_label
          widget_background: widget_background
          error: error
          icons: icons
          widget_border: widget_border
          base_focus_color: base_focus_color
          input_border: input_border
          links_focused_components: links_focused_components
          input_filled_text: input_filled_text
          base_hover_color: base_hover_color
          input_labels_placeholders: input_labels_placeholders
          success: success
          input_background: input_background
          header: header
      properties:
        borders:
          $ref: '#/components/schemas/post_branding_theme_request_borders'
        colors:
          $ref: '#/components/schemas/post_branding_theme_request_colors'
        displayName:
          description: Display Name
          maxLength: 2048
          type: string
        fonts:
          $ref: '#/components/schemas/post_branding_theme_request_fonts'
        page_background:
          $ref: '#/components/schemas/post_branding_theme_request_page_background'
        themeId:
          description: Theme Id
          maxLength: 32
          type: string
        widget:
          $ref: '#/components/schemas/post_branding_theme_request_widget'
      required:
      - borders
      - colors
      - displayName
      - fonts
      - page_background
      - themeId
      - widget
      type: object
    get_client_grants_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        total:
          type: number
        client_grants:
          items:
            $ref: '#/components/schemas/clientGrant'
          type: array
      type: object
    get_client_grants_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/clientGrant'
        type: array
      - $ref: '#/components/schemas/get_client_grants_200_response_oneOf'
    patch_client_grants_by_id_request:
      additionalProperties: false
      properties:
        scope:
          description: Scopes allowed for this client grant.
          items:
            maxLength: 280
            minLength: 1
            type: string
          type: array
      type: object
    get_clients_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        total:
          type: number
        clients:
          items:
            $ref: '#/components/schemas/client'
          type: array
      type: object
    get_clients_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/client'
        type: array
      - $ref: '#/components/schemas/get_clients_200_response_oneOf'
    get_credentials_200_response_inner_alg:
      default: RS256
      description: "Algorithm which will be used with the credential. Supported algorithms:\
        \ RS256,RS384,PS256"
      enum:
      - RS256
      - RS384
      - PS256
      type: string
    get_credentials_200_response_inner:
      additionalProperties: true
      example:
        credential_type: ""
        subject_dn: subject_dn
        thumbprint_sha256: thumbprint_sha256
        expires_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        kid: IZSSTECp...
        name: ""
        created_at: 2000-01-23T04:56:07.000+00:00
        id: cred_1m7sfABoNTTKYwTQ8qt6tX
        alg: RS256
      properties:
        id:
          default: cred_1m7sfABoNTTKYwTQ8qt6tX
          description: ID of the credential. Generated on creation.
          type: string
        name:
          default: ""
          description: The name given to the credential by the user.
          type: string
        kid:
          default: IZSSTECp...
          description: "The key identifier of the credential, generated on creation."
          type: string
        alg:
          $ref: '#/components/schemas/get_credentials_200_response_inner_alg'
        credential_type:
          default: ""
          description: "The type of credential. Supported types: public_key."
          type: string
        subject_dn:
          description: The X509 certificate's Subject Distinguished Name
          type: string
        thumbprint_sha256:
          description: The X509 certificate's SHA256 thumbprint
          type: string
        created_at:
          description: The ISO 8601 formatted date the credential was created.
          format: date-time
          type: string
        updated_at:
          description: The ISO 8601 formatted date the credential was updated.
          format: date-time
          type: string
        expires_at:
          description: The ISO 8601 formatted date representing the expiration of
            the credential.
          format: date-time
          type: string
      type: object
    post_credentials_request_credential_type:
      description: "Credential type. Supported types: public_key, cert_subject_dn\
        \ or x509_cert"
      enum:
      - public_key
      - cert_subject_dn
      - x509_cert
      type: string
    post_credentials_request:
      additionalProperties: true
      properties:
        credential_type:
          $ref: '#/components/schemas/post_credentials_request_credential_type'
        name:
          default: ""
          description: Friendly name for a credential.
          maxLength: 128
          type: string
      required:
      - credential_type
      type: object
    patch_credentials_by_credential_id_request:
      additionalProperties: false
      properties:
        expires_at:
          description: The ISO 8601 formatted date representing the expiration of
            the credential.
          format: date-time
          nullable: true
          type: string
      type: object
    get_connections_strategy_parameter_inner:
      enum:
      - ad
      - adfs
      - amazon
      - apple
      - dropbox
      - bitbucket
      - aol
      - auth0-oidc
      - auth0
      - baidu
      - bitly
      - box
      - custom
      - daccount
      - dwolla
      - email
      - evernote-sandbox
      - evernote
      - exact
      - facebook
      - fitbit
      - flickr
      - github
      - google-apps
      - google-oauth2
      - instagram
      - ip
      - line
      - linkedin
      - miicard
      - oauth1
      - oauth2
      - office365
      - oidc
      - okta
      - paypal
      - paypal-sandbox
      - pingfederate
      - planningcenter
      - renren
      - salesforce-community
      - salesforce-sandbox
      - salesforce
      - samlp
      - sharepoint
      - shopify
      - sms
      - soundcloud
      - thecity-sandbox
      - thecity
      - thirtysevensignals
      - twitter
      - untappd
      - vkontakte
      - waad
      - weibo
      - windowslive
      - wordpress
      - yahoo
      - yammer
      - yandex
      - auth0-adldap
      type: string
      uniqueItems: true
    get_connections_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        total:
          type: number
        connections:
          items:
            $ref: '#/components/schemas/connection'
          type: array
      type: object
    get_connections_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/connection'
        type: array
      - $ref: '#/components/schemas/get_connections_200_response_oneOf'
    get_scim_configuration_200_response_mapping_inner:
      additionalProperties: true
      example:
        scim: scim
        auth0: auth0
      properties:
        auth0:
          description: The field location in the auth0 schema
          type: string
        scim:
          description: The field location in the SCIM schema
          type: string
      type: object
    get_scim_configuration_200_response:
      additionalProperties: false
      example:
        connection_name: connection_name
        updated_on: updated_on
        tenant_name: tenant_name
        mapping:
        - scim: scim
          auth0: auth0
        - scim: scim
          auth0: auth0
        user_id_attribute: user_id_attribute
        connection_id: connection_id
        created_at: created_at
        strategy: strategy
      properties:
        connection_id:
          description: The connection's identifier
          type: string
        connection_name:
          description: The connection's identifier
          type: string
        strategy:
          description: The connection's strategy
          type: string
        tenant_name:
          description: The tenant's name
          type: string
        user_id_attribute:
          description: User ID attribute for generating unique user ids
          type: string
        mapping:
          description: The mapping between auth0 and SCIM
          items:
            $ref: '#/components/schemas/get_scim_configuration_200_response_mapping_inner'
          type: array
        created_at:
          description: The Date Time Scim Configuration was created
          type: string
        updated_on:
          description: The Date Time Scim Configuration was last updated
          type: string
      type: object
    post_scim_configuration_request:
      additionalProperties: false
      nullable: true
      properties:
        user_id_attribute:
          description: User ID attribute for generating unique user ids
          type: string
        mapping:
          description: The mapping between auth0 and SCIM
          items:
            $ref: '#/components/schemas/get_scim_configuration_200_response_mapping_inner'
          type: array
      type: object
    patch_scim_configuration_request:
      additionalProperties: false
      properties:
        user_id_attribute:
          description: User ID attribute for generating unique user ids
          type: string
        mapping:
          description: The mapping between auth0 and SCIM
          items:
            $ref: '#/components/schemas/get_scim_configuration_200_response_mapping_inner'
          type: array
      required:
      - mapping
      - user_id_attribute
      type: object
    get_default_mapping_200_response:
      additionalProperties: false
      example:
        mapping:
        - scim: scim
          auth0: auth0
        - scim: scim
          auth0: auth0
      properties:
        mapping:
          description: The mapping between auth0 and SCIM
          items:
            $ref: '#/components/schemas/get_scim_configuration_200_response_mapping_inner'
          type: array
      type: object
    get_scim_tokens_200_response_inner:
      additionalProperties: true
      example:
        last_used_at: last_used_at
        valid_until: valid_until
        token_id: token_id
        created_at: created_at
        scopes:
        - scopes
        - scopes
      properties:
        token_id:
          description: The token's identifier
          type: string
        scopes:
          description: The scopes of the scim token
          items:
            description: The token's scope
            type: string
          type: array
        created_at:
          description: The token's created at timestamp
          type: string
        valid_until:
          description: The token's valid until timestamp
          type: string
        last_used_at:
          description: The token's last used at timestamp
          type: string
      type: object
    post_scim_token_request:
      additionalProperties: false
      description: SCIM Token
      properties:
        scopes:
          description: The scopes of the scim token
          items:
            description: The token's scope
            type: string
          type: array
        token_lifetime:
          description: Lifetime of the token in seconds. Must be greater than 900
          nullable: true
          type: integer
      type: object
    post_scim_token_201_response:
      additionalProperties: false
      example:
        valid_until: valid_until
        token_id: token_id
        created_at: created_at
        scopes:
        - scopes
        - scopes
        token: token
      properties:
        token_id:
          description: The token's identifier
          type: string
        token:
          description: The scim client's token
          type: string
        scopes:
          description: The scopes of the scim token
          items:
            description: The token's scope
            type: string
          type: array
        created_at:
          description: The token's created at timestamp
          type: string
        valid_until:
          description: The token's valid until at timestamp
          type: string
      type: object
    post_custom_domains_request_type:
      description: Custom domain provisioning type. Must be `auth0_managed_certs`
        or `self_managed_certs`.
      enum:
      - auth0_managed_certs
      - self_managed_certs
      type: string
    post_custom_domains_request_verification_method:
      default: txt
      description: Custom domain verification method. Must be `txt`.
      enum:
      - txt
      type: string
    post_custom_domains_request_tls_policy:
      default: recommended
      description: "compatible includes TLS 1.0, 1.1, 1.2, and recommended only includes\
        \ TLS 1.2"
      enum:
      - recommended
      - compatible
      type: string
    post_custom_domains_request_custom_client_ip_header:
      default: true-client-ip
      description: "HTTP header to fetch client IP header. Ex: CF-Connecting-IP, X-Forwarded-For\
        \ or True-Client-IP."
      enum:
      - true-client-ip
      - cf-connecting-ip
      - x-forwarded-for
      - x-azure-clientip
      - null
      type: string
    post_custom_domains_request:
      additionalProperties: false
      properties:
        domain:
          description: Domain name.
          type: string
        type:
          $ref: '#/components/schemas/post_custom_domains_request_type'
        verification_method:
          $ref: '#/components/schemas/post_custom_domains_request_verification_method'
        tls_policy:
          $ref: '#/components/schemas/post_custom_domains_request_tls_policy'
        custom_client_ip_header:
          $ref: '#/components/schemas/post_custom_domains_request_custom_client_ip_header'
      required:
      - domain
      - type
      type: object
    post_custom_domains_201_response_status:
      default: ready
      description: "Custom domain configuration status. Can be `disabled`, `pending`,\
        \ `pending_verification`, or `ready`."
      enum:
      - disabled
      - pending
      - pending_verification
      - ready
      type: string
    post_custom_domains_201_response_type:
      default: self_managed_certs
      description: Custom domain provisioning type. Can be `auth0_managed_certs` or
        `self_managed_certs`.
      enum:
      - auth0_managed_certs
      - self_managed_certs
      type: string
    post_custom_domains_201_response_verification_methods_inner_name:
      default: txt
      description: Domain verification method.
      enum:
      - cname
      - txt
      type: string
    post_custom_domains_201_response_verification_methods_inner:
      additionalProperties: false
      example:
        record: auth0-domain-verification=...
        domain: _cf-custom-hostname.login.mycompany.com
        name: txt
      properties:
        name:
          $ref: '#/components/schemas/post_custom_domains_201_response_verification_methods_inner_name'
        record:
          default: auth0-domain-verification=...
          description: Value used to verify the domain.
          type: string
        domain:
          default: _cf-custom-hostname.login.mycompany.com
          description: The name of the txt record for verification
          type: string
      required:
      - name
      - record
      type: object
    post_custom_domains_201_response_verification:
      additionalProperties: false
      description: Domain verification settings.
      example:
        methods:
        - record: auth0-domain-verification=...
          domain: _cf-custom-hostname.login.mycompany.com
          name: txt
        - record: auth0-domain-verification=...
          domain: _cf-custom-hostname.login.mycompany.com
          name: txt
      properties:
        methods:
          description: Domain verification methods.
          items:
            $ref: '#/components/schemas/post_custom_domains_201_response_verification_methods_inner'
          type: array
      type: object
    post_custom_domains_201_response:
      additionalProperties: false
      example:
        custom_domain_id: cd_0000000000000001
        domain: login.mycompany.com
        type: self_managed_certs
        tls_policy: recommended
        custom_client_ip_header: custom_client_ip_header
        verification:
          methods:
          - record: auth0-domain-verification=...
            domain: _cf-custom-hostname.login.mycompany.com
            name: txt
          - record: auth0-domain-verification=...
            domain: _cf-custom-hostname.login.mycompany.com
            name: txt
        primary: false
        status: ready
      properties:
        custom_domain_id:
          default: cd_0000000000000001
          description: ID of the custom domain.
          type: string
        domain:
          default: login.mycompany.com
          description: Domain name.
          type: string
        primary:
          default: false
          description: Whether this is a primary domain (true) or not (false).
          type: boolean
        status:
          $ref: '#/components/schemas/post_custom_domains_201_response_status'
        type:
          $ref: '#/components/schemas/post_custom_domains_201_response_type'
        verification:
          $ref: '#/components/schemas/post_custom_domains_201_response_verification'
        custom_client_ip_header:
          description: The HTTP header to fetch the client's IP address
          nullable: true
          type: string
        tls_policy:
          default: recommended
          description: The TLS version policy
          type: string
      required:
      - custom_domain_id
      - domain
      - primary
      - status
      - type
      - verification
      type: object
    patch_custom_domains_by_id_request_custom_client_ip_header:
      default: true-client-ip
      description: The HTTP header to fetch the client's IP address
      enum:
      - true-client-ip
      - cf-connecting-ip
      - x-forwarded-for
      - x-azure-clientip
      - ""
      type: string
    patch_custom_domains_by_id_request:
      additionalProperties: false
      properties:
        tls_policy:
          $ref: '#/components/schemas/post_custom_domains_request_tls_policy'
        custom_client_ip_header:
          $ref: '#/components/schemas/patch_custom_domains_by_id_request_custom_client_ip_header'
      type: object
    post_verify_200_response:
      additionalProperties: false
      example:
        cname_api_key: d4feca...
        custom_domain_id: cd_0000000000000001
        domain: login.mycompany.com
        origin_domain_name: mycompany_cd_0000000000000001.edge.tenants.auth0.com
        type: self_managed_certs
        tls_policy: recommended
        custom_client_ip_header: custom_client_ip_header
        verification:
          methods:
          - record: auth0-domain-verification=...
            domain: _cf-custom-hostname.login.mycompany.com
            name: txt
          - record: auth0-domain-verification=...
            domain: _cf-custom-hostname.login.mycompany.com
            name: txt
        primary: false
        status: ready
      properties:
        custom_domain_id:
          default: cd_0000000000000001
          description: ID of the custom domain.
          type: string
        domain:
          default: login.mycompany.com
          description: Domain name.
          type: string
        primary:
          default: false
          description: Whether this is a primary domain (true) or not (false).
          type: boolean
        status:
          $ref: '#/components/schemas/post_custom_domains_201_response_status'
        type:
          $ref: '#/components/schemas/post_custom_domains_201_response_type'
        cname_api_key:
          default: d4feca...
          description: CNAME API key header.
          type: string
        origin_domain_name:
          default: mycompany_cd_0000000000000001.edge.tenants.auth0.com
          description: Intermediate address.
          type: string
        verification:
          $ref: '#/components/schemas/post_custom_domains_201_response_verification'
        custom_client_ip_header:
          description: The HTTP header to fetch the client's IP address
          nullable: true
          type: string
        tls_policy:
          default: recommended
          description: The TLS version policy
          type: string
      required:
      - custom_domain_id
      - domain
      - primary
      - status
      - type
      type: object
    get_device_credentials_type_parameter:
      enum:
      - public_key
      - refresh_token
      - rotating_refresh_token
      type: string
    get_device_credentials_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        total:
          type: number
        device_credentials:
          items:
            $ref: '#/components/schemas/deviceCredential'
          type: array
      type: object
    get_device_credentials_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/deviceCredential'
        type: array
      - $ref: '#/components/schemas/get_device_credentials_200_response_oneOf'
    post_device_credentials_201_response:
      additionalProperties: true
      example:
        id: dcr_0000000000000001
      properties:
        id:
          default: dcr_0000000000000001
          description: The credential's identifier
          type: string
      required:
      - id
      type: object
    post_email_templates_request_template:
      default: verify_email
      description: "Template name. Can be `verify_email`, `verify_email_by_code`,\
        \ `reset_email`, `welcome_email`, `blocked_account`, `stolen_credentials`,\
        \ `enrollment_email`, `mfa_oob_code`, `user_invitation`, `change_password`\
        \ (legacy), or `password_reset` (legacy)."
      enum:
      - verify_email
      - verify_email_by_code
      - reset_email
      - welcome_email
      - blocked_account
      - stolen_credentials
      - enrollment_email
      - mfa_oob_code
      - user_invitation
      - change_password
      - password_reset
      type: string
    post_email_templates_request:
      additionalProperties: false
      example:
        template: verify_email
        urlLifetimeInSeconds: 0.8008281904610115
        subject: subject
        resultUrl: resultUrl
        syntax: liquid
        from: sender@auth0.com
        includeEmailInRedirect: true
        body: body
        enabled: true
      properties:
        template:
          $ref: '#/components/schemas/post_email_templates_request_template'
        body:
          description: Body of the email template.
          nullable: true
          type: string
        from:
          default: sender@auth0.com
          description: Senders `from` email address.
          nullable: true
          type: string
        resultUrl:
          description: URL to redirect the user to after a successful action.
          nullable: true
          type: string
        subject:
          description: Subject line of the email.
          nullable: true
          type: string
        syntax:
          default: liquid
          description: Syntax of the template body.
          nullable: true
          type: string
        urlLifetimeInSeconds:
          description: Lifetime in seconds that the link within the email will be
            valid for.
          nullable: true
          type: number
        includeEmailInRedirect:
          description: Whether the `reset_email` and `verify_email` templates should
            include the user's email address as the `email` parameter in the returnUrl
            (true) or whether no email address should be included in the redirect
            (false). Defaults to true.
          type: boolean
        enabled:
          description: Whether the template is enabled (true) or disabled (false).
          nullable: true
          type: boolean
      required:
      - body
      - enabled
      - from
      - subject
      - syntax
      - template
      type: object
    get_email_templates_by_templateName_templateName_parameter:
      enum:
      - verify_email
      - verify_email_by_code
      - reset_email
      - welcome_email
      - blocked_account
      - stolen_credentials
      - enrollment_email
      - mfa_oob_code
      - user_invitation
      - change_password
      - password_reset
      type: string
    get_email_templates_by_templateName_200_response:
      additionalProperties: false
      example:
        template: verify_email
        urlLifetimeInSeconds: 0.8008281904610115
        subject: subject
        resultUrl: resultUrl
        syntax: liquid
        from: sender@auth0.com
        includeEmailInRedirect: true
        body: body
        enabled: true
      properties:
        template:
          $ref: '#/components/schemas/post_email_templates_request_template'
        body:
          description: Body of the email template.
          nullable: true
          type: string
        from:
          default: sender@auth0.com
          description: Senders `from` email address.
          nullable: true
          type: string
        resultUrl:
          description: URL to redirect the user to after a successful action.
          nullable: true
          type: string
        subject:
          description: Subject line of the email.
          nullable: true
          type: string
        syntax:
          default: liquid
          description: Syntax of the template body.
          nullable: true
          type: string
        urlLifetimeInSeconds:
          description: Lifetime in seconds that the link within the email will be
            valid for.
          nullable: true
          type: number
        includeEmailInRedirect:
          description: Whether the `reset_email` and `verify_email` templates should
            include the user's email address as the `email` parameter in the returnUrl
            (true) or whether no email address should be included in the redirect
            (false). Defaults to true.
          type: boolean
        enabled:
          description: Whether the template is enabled (true) or disabled (false).
          nullable: true
          type: boolean
      type: object
    get_grants_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        total:
          type: number
        grants:
          items:
            $ref: '#/components/schemas/userGrant'
          type: array
      type: object
    get_grants_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/userGrant'
        type: array
      - $ref: '#/components/schemas/get_grants_200_response_oneOf'
    post_ticket_200_response:
      additionalProperties: true
      example:
        ticket_id: u2x2-u2x2-u2x2-u2x2-u2x2-u2x2
        ticket_url: "https://{tenant}.guardian.auth0.com/enrollment?ticket_id={ticket_id}"
      properties:
        ticket_id:
          default: u2x2-u2x2-u2x2-u2x2-u2x2-u2x2
          description: The ticket_id used to identify the enrollment
          type: string
        ticket_url:
          default: "https://{tenant}.guardian.auth0.com/enrollment?ticket_id={ticket_id}"
          description: The url you can use to start enrollment
          type: string
      type: object
    get_message_types_200_response_message_types_inner:
      enum:
      - sms
      - voice
      type: string
    get_message_types_200_response:
      additionalProperties: false
      example:
        message_types:
        - sms
        - sms
      properties:
        message_types:
          description: The list of phone factors to enable on the tenant. Can include
            `sms` and `voice`.
          items:
            $ref: '#/components/schemas/get_message_types_200_response_message_types_inner'
          type: array
      type: object
    put_message_types_request:
      additionalProperties: false
      properties:
        message_types:
          description: The list of phone factors to enable on the tenant. Can include
            `sms` and `voice`.
          items:
            $ref: '#/components/schemas/get_message_types_200_response_message_types_inner'
          type: array
      required:
      - message_types
      type: object
    put_twilio_request:
      additionalProperties: false
      properties:
        from:
          default: "+1223323"
          description: From number
          maxLength: 64
          minLength: 0
          nullable: true
          type: string
        messaging_service_sid:
          default: 5dEkAiHLPCuQ1uJj4qNXcAnERFAL6cpq
          description: Copilot SID
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        auth_token:
          default: zw5Ku6z2sxhd0ZVXto5SDHX6KPDByJPU
          description: Twilio Authentication token
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        sid:
          default: wywA2BH4VqTpfywiDuyDAYZL3xQjoO40
          description: Twilio SID
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
      type: object
    get_phone_providers_200_response_provider:
      enum:
      - auth0
      - twilio
      - phone-message-hook
      type: string
    get_phone_providers_200_response:
      additionalProperties: false
      example:
        provider: auth0
      properties:
        provider:
          $ref: '#/components/schemas/get_phone_providers_200_response_provider'
      type: object
    put_phone_providers_request:
      additionalProperties: false
      properties:
        provider:
          $ref: '#/components/schemas/get_phone_providers_200_response_provider'
      required:
      - provider
      type: object
    get_apns_200_response:
      additionalProperties: false
      example:
        bundle_id: bundle_id
        sandbox: true
        enabled: true
      properties:
        bundle_id:
          maxLength: 20
          minLength: 1
          nullable: true
          type: string
        sandbox:
          type: boolean
        enabled:
          type: boolean
      type: object
    put_apns_request:
      additionalProperties: false
      properties:
        sandbox:
          type: boolean
        bundle_id:
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        p12:
          maxLength: 10000
          minLength: 1
          nullable: true
          type: string
      type: object
    put_apns_200_response:
      additionalProperties: false
      example:
        bundle_id: bundle_id
        sandbox: true
      properties:
        sandbox:
          type: boolean
        bundle_id:
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
      type: object
    put_fcm_request:
      additionalProperties: false
      properties:
        server_key:
          maxLength: 152
          minLength: 1
          nullable: true
          type: string
      type: object
    put_sns_request:
      additionalProperties: false
      example:
        aws_access_key_id: wywA2BH4VqTpfywiDuyDAYZL3xQjoO40
        aws_region: us-west-1
        aws_secret_access_key: B1ER5JHDGJL3C4sVAKK7SBsq806R3IpL
        sns_apns_platform_application_arn: sns_apns_platform_application_arn
        sns_gcm_platform_application_arn: urn://yRMeBxgcCXh8MeTXPBAxhQnm6gP6f5nP
      properties:
        aws_access_key_id:
          default: wywA2BH4VqTpfywiDuyDAYZL3xQjoO40
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        aws_secret_access_key:
          default: B1ER5JHDGJL3C4sVAKK7SBsq806R3IpL
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        aws_region:
          default: us-west-1
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        sns_apns_platform_application_arn:
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
        sns_gcm_platform_application_arn:
          default: urn://yRMeBxgcCXh8MeTXPBAxhQnm6gP6f5nP
          maxLength: 1000
          minLength: 1
          nullable: true
          type: string
      type: object
    get_pn_providers_200_response_provider:
      enum:
      - guardian
      - sns
      - direct
      type: string
    get_pn_providers_200_response:
      additionalProperties: false
      example:
        provider: guardian
      properties:
        provider:
          $ref: '#/components/schemas/get_pn_providers_200_response_provider'
      type: object
    put_pn_providers_request:
      additionalProperties: false
      properties:
        provider:
          $ref: '#/components/schemas/get_pn_providers_200_response_provider'
      required:
      - provider
      type: object
    put_factors_by_name_request:
      additionalProperties: false
      properties:
        enabled:
          description: Whether this factor is enabled (true) or disabled (false).
          type: boolean
      required:
      - enabled
      type: object
    put_factors_by_name_name_parameter:
      enum:
      - push-notification
      - sms
      - email
      - duo
      - otp
      - webauthn-roaming
      - webauthn-platform
      - recovery-code
      type: string
    put_factors_by_name_200_response:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          default: true
          description: Whether this factor is enabled (true) or disabled (false).
          type: boolean
      required:
      - enabled
      type: object
    get_policies_200_response_inner:
      description: The MFA policy
      enum:
      - all-applications
      - confidence-score
      type: string
    get_hooks_triggerId_parameter:
      enum:
      - credentials-exchange
      - pre-user-registration
      - post-user-registration
      - post-change-password
      - send-phone-message
      type: string
    get_hooks_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        total:
          type: number
        hooks:
          items:
            $ref: '#/components/schemas/hook'
          type: array
      type: object
    get_hooks_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/hook'
        type: array
      - $ref: '#/components/schemas/get_hooks_200_response_oneOf'
    post_users_exports_request_format:
      default: csv
      description: Format of the file. Must be `json` or `csv`.
      enum:
      - json
      - csv
      type: string
    post_users_exports_request_fields_inner:
      additionalProperties: false
      example:
        export_as: export_as
        name: name
      properties:
        name:
          description: Name of the field in the profile.
          maxLength: 100
          type: string
        export_as:
          description: Title of the column in the exported CSV.
          maxLength: 100
          type: string
      required:
      - name
      type: object
    post_users_exports_request:
      additionalProperties: false
      properties:
        connection_id:
          default: con_0000000000000001
          description: connection_id of the connection from which users will be exported.
          type: string
        format:
          $ref: '#/components/schemas/post_users_exports_request_format'
        limit:
          default: 5
          description: Limit the number of records.
          type: integer
        fields:
          description: List of fields to be included in the CSV. Defaults to a predefined
            set of fields.
          items:
            $ref: '#/components/schemas/post_users_exports_request_fields_inner'
          type: array
      type: object
    post_users_imports_request:
      additionalProperties: true
      properties:
        users:
          format: binary
          type: string
        connection_id:
          default: con_0000000000000001
          description: connection_id of the connection to which users will be imported.
          type: string
        upsert:
          default: false
          description: Whether to update users if they already exist (true) or to
            ignore them (false).
          type: boolean
        external_id:
          description: Customer-defined ID.
          type: string
        send_completion_email:
          default: true
          description: Whether to send a completion email to all tenant owners when
            the job is finished (true) or not (false).
          type: boolean
      required:
      - connection_id
      - users
      type: object
    post_verification_email_request_identity_provider:
      default: google-oauth2
      description: Identity provider name of the identity (e.g. `google-oauth2`).
      enum:
      - ad
      - adfs
      - amazon
      - apple
      - dropbox
      - bitbucket
      - aol
      - auth0-oidc
      - auth0
      - baidu
      - bitly
      - box
      - custom
      - daccount
      - dwolla
      - email
      - evernote-sandbox
      - evernote
      - exact
      - facebook
      - fitbit
      - flickr
      - github
      - google-apps
      - google-oauth2
      - instagram
      - ip
      - line
      - linkedin
      - miicard
      - oauth1
      - oauth2
      - office365
      - oidc
      - okta
      - paypal
      - paypal-sandbox
      - pingfederate
      - planningcenter
      - renren
      - salesforce-community
      - salesforce-sandbox
      - salesforce
      - samlp
      - sharepoint
      - shopify
      - sms
      - soundcloud
      - thecity-sandbox
      - thecity
      - thirtysevensignals
      - twitter
      - untappd
      - vkontakte
      - waad
      - weibo
      - windowslive
      - wordpress
      - yahoo
      - yammer
      - yandex
      type: string
    post_verification_email_request_identity:
      additionalProperties: false
      description: "This must be provided to verify primary social, enterprise and\
        \ passwordless email identities. Also, is needed to verify secondary identities."
      properties:
        user_id:
          default: 5457edea1b8f22891a000004
          description: user_id of the identity to be verified.
          type: string
        provider:
          $ref: '#/components/schemas/post_verification_email_request_identity_provider'
      required:
      - provider
      - user_id
      type: object
    post_verification_email_request:
      additionalProperties: false
      properties:
        user_id:
          default: google-oauth2|1234
          description: user_id of the user to send the verification email to.
          type: string
        client_id:
          description: "client_id of the client (application). If no value provided,\
            \ the global Client ID will be used."
          type: string
        identity:
          $ref: '#/components/schemas/post_verification_email_request_identity'
        organization_id:
          default: org_2eondWoxcMIpaLQc
          description: "(Optional) Organization ID – the ID of the Organization. If\
            \ provided, organization parameters will be made available to the email\
            \ template and organization branding will be applied to the prompt. In\
            \ addition, the redirect link in the prompt will include organization_id\
            \ and organization_name query string parameters."
          type: string
      required:
      - user_id
      type: object
    get_errors_200_response_oneOf_inner_errors_inner:
      additionalProperties: true
      example:
        path: path
        code: code
        message: message
      properties:
        code:
          description: Error code.
          type: string
        message:
          description: Error message.
          type: string
        path:
          description: Error field.
          type: string
      type: object
    get_errors_200_response_oneOf_inner:
      additionalProperties: false
      example:
        user:
          key: ""
        errors:
        - path: path
          code: code
          message: message
        - path: path
          code: code
          message: message
      properties:
        user:
          additionalProperties: true
          description: "User, as provided in the import file"
          type: object
        errors:
          description: Errors importing the user.
          items:
            $ref: '#/components/schemas/get_errors_200_response_oneOf_inner_errors_inner'
          type: array
      type: object
    get_errors_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/get_errors_200_response_oneOf_inner'
        type: array
      - $ref: '#/components/schemas/job'
    get_signing_keys_200_response_inner_current_since:
      oneOf:
      - description: The date and time when the key became the current key
        type: string
      - additionalProperties: true
        description: The date and time when the key became the current key
        type: object
    get_signing_keys_200_response_inner_current_until:
      oneOf:
      - description: The date and time when the current key was rotated
        type: string
      - additionalProperties: true
        description: The date and time when the current key was rotated
        type: object
    get_signing_keys_200_response_inner_revoked_at:
      oneOf:
      - description: The date and time when the key was revoked
        type: string
      - additionalProperties: true
        description: The date and time when the key was revoked
        type: object
    get_signing_keys_200_response_inner:
      additionalProperties: false
      example:
        pkcs7: "-----BEGIN PKCS7-----\r\nMIIDPA....t8xAA==\r\n-----END PKCS7-----"
        next: true
        current: true
        revoked_at: get_signing_keys_200_response_inner_revoked_at
        previous: true
        current_until: get_signing_keys_200_response_inner_current_until
        kid: 21hi274Rp02112mgkUGma
        fingerprint: CC:FB:DD:D8:9A:B5:DE:1B:F0:CC:36:D2:99:59:21:12:03:DD:A8:25
        thumbprint: CCFBDDD89AB5DE1BF0CC36D29959211203DDA825
        cert: "-----BEGIN CERTIFICATE-----\r\nMIIDDTCCA...YiA0TQhAt8=\r\n-----END\
          \ CERTIFICATE-----"
        current_since: get_signing_keys_200_response_inner_current_since
        revoked: true
      properties:
        kid:
          default: 21hi274Rp02112mgkUGma
          description: The key id of the signing key
          type: string
        cert:
          default: "-----BEGIN CERTIFICATE-----\r\nMIIDDTCCA...YiA0TQhAt8=\r\n-----END\
            \ CERTIFICATE-----"
          description: The public certificate of the signing key
          type: string
        pkcs7:
          default: "-----BEGIN PKCS7-----\r\nMIIDPA....t8xAA==\r\n-----END PKCS7-----"
          description: The public certificate of the signing key in pkcs7 format
          type: string
        current:
          default: true
          description: True if the key is the the current key
          type: boolean
        next:
          description: True if the key is the the next key
          type: boolean
        previous:
          description: True if the key is the the previous key
          type: boolean
        current_since:
          $ref: '#/components/schemas/get_signing_keys_200_response_inner_current_since'
        current_until:
          $ref: '#/components/schemas/get_signing_keys_200_response_inner_current_until'
        fingerprint:
          default: CC:FB:DD:D8:9A:B5:DE:1B:F0:CC:36:D2:99:59:21:12:03:DD:A8:25
          description: The cert fingerprint
          type: string
        thumbprint:
          default: CCFBDDD89AB5DE1BF0CC36D29959211203DDA825
          description: The cert thumbprint
          type: string
        revoked:
          description: True if the key is revoked
          type: boolean
        revoked_at:
          $ref: '#/components/schemas/get_signing_keys_200_response_inner_revoked_at'
      required:
      - cert
      - fingerprint
      - kid
      - thumbprint
      type: object
    post_signing_keys_201_response:
      additionalProperties: true
      example:
        kid: 21hi274Rp02112mgkUGma
        cert: "-----BEGIN CERTIFICATE-----\r\nMIIDDTCCA...YiA0TQhAt8=\r\n-----END\
          \ CERTIFICATE-----"
      properties:
        cert:
          default: "-----BEGIN CERTIFICATE-----\r\nMIIDDTCCA...YiA0TQhAt8=\r\n-----END\
            \ CERTIFICATE-----"
          description: Next key certificate
          type: string
        kid:
          default: 21hi274Rp02112mgkUGma
          description: Next key id
          type: string
      required:
      - cert
      - kid
      type: object
    put_signing_keys_200_response:
      additionalProperties: true
      example:
        kid: 21hi274Rp02112mgkUGma
        cert: "-----BEGIN CERTIFICATE-----\r\nMIIDDTCCA...YiA0TQhAt8=\r\n-----END\
          \ CERTIFICATE-----"
      properties:
        cert:
          default: "-----BEGIN CERTIFICATE-----\r\nMIIDDTCCA...YiA0TQhAt8=\r\n-----END\
            \ CERTIFICATE-----"
          description: Revoked key certificate
          type: string
        kid:
          default: 21hi274Rp02112mgkUGma
          description: Revoked key id
          type: string
      required:
      - cert
      - kid
      type: object
    get_log_streams_200_response_inner_oneOf_status:
      description: "The status of the log stream. Possible values: `active`, `paused`,\
        \ `suspended`"
      enum:
      - active
      - paused
      - suspended
      type: string
    get_log_streams_200_response_inner_oneOf_type:
      enum:
      - http
      type: string
    get_log_streams_200_response_inner_oneOf_filters_inner_type:
      description: Filter type. Currently `category` is the only valid type.
      enum:
      - category
      type: string
    get_log_streams_200_response_inner_oneOf_filters_inner_name:
      description: Category group name
      enum:
      - auth.ancillary.fail
      - auth.ancillary.success
      - auth.login.fail
      - auth.login.notification
      - auth.login.success
      - auth.logout.fail
      - auth.logout.success
      - auth.signup.fail
      - auth.signup.success
      - auth.silent_auth.fail
      - auth.silent_auth.success
      - auth.token_exchange.fail
      - auth.token_exchange.success
      - management.fail
      - management.success
      - system.notification
      - user.fail
      - user.notification
      - user.success
      - other
      type: string
    get_log_streams_200_response_inner_oneOf_filters_inner:
      additionalProperties: true
      example:
        name: auth.ancillary.fail
        type: category
      properties:
        type:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner_type'
        name:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner_name'
      type: object
    get_log_streams_200_response_inner_oneOf_sink_httpContentFormat:
      description: HTTP JSON format
      enum:
      - JSONARRAY
      - JSONLINES
      - JSONOBJECT
      type: string
    get_log_streams_200_response_inner_oneOf_sink_httpCustomHeaders_inner:
      additionalProperties: true
      example:
        header: header
        value: value
      properties:
        header:
          description: HTTP header name
          type: string
        value:
          description: HTTP header value
          type: string
      type: object
    get_log_streams_200_response_inner_oneOf_sink:
      additionalProperties: false
      example:
        httpCustomHeaders:
        - header: header
          value: value
        - header: header
          value: value
        httpEndpoint: httpEndpoint
        httpAuthorization: httpAuthorization
        httpContentType: httpContentType
        httpContentFormat: JSONARRAY
      properties:
        httpAuthorization:
          description: HTTP Authorization header
          type: string
        httpContentFormat:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_sink_httpContentFormat'
        httpContentType:
          description: HTTP Content-Type header
          type: string
        httpEndpoint:
          description: HTTP endpoint
          type: string
        httpCustomHeaders:
          description: custom HTTP headers
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_sink_httpCustomHeaders_inner'
          type: array
      required:
      - httpEndpoint
      type: object
    get_log_streams_200_response_inner_oneOf:
      additionalProperties: true
      example:
        sink:
          httpCustomHeaders:
          - header: header
            value: value
          - header: header
            value: value
          httpEndpoint: httpEndpoint
          httpAuthorization: httpAuthorization
          httpContentType: httpContentType
          httpContentFormat: JSONARRAY
        name: name
        id: id
        filters:
        - name: auth.ancillary.fail
          type: category
        - name: auth.ancillary.fail
          type: category
        type: http
        status: active
      properties:
        id:
          description: The id of the log stream
          type: string
        name:
          description: log stream name
          type: string
        status:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_status'
        type:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_type'
        filters:
          description: "Only logs events matching these filters will be delivered\
            \ by the stream. If omitted or empty, all events will be delivered."
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner'
          type: array
        sink:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_sink'
      type: object
    get_log_streams_200_response_inner_oneOf_1_type:
      enum:
      - eventbridge
      type: string
    get_log_streams_200_response_inner_oneOf_1_sink_awsRegion:
      description: The region in which the EventBridge event source will be created
      enum:
      - ap-east-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-south-1
      - ap-southeast-1
      - ap-southeast-2
      - ca-central-1
      - cn-north-1
      - cn-northwest-1
      - eu-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - me-south-1
      - sa-east-1
      - us-gov-east-1
      - us-gov-west-1
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      type: string
    get_log_streams_200_response_inner_oneOf_1_sink:
      additionalProperties: false
      properties:
        awsAccountId:
          description: AWS account ID
          type: string
        awsRegion:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_1_sink_awsRegion'
        awsPartnerEventSource:
          description: AWS EventBridge partner event source
          type: string
      required:
      - awsAccountId
      - awsRegion
      type: object
    get_log_streams_200_response_inner_oneOf_1:
      additionalProperties: true
      properties:
        id:
          description: The id of the log stream
          type: string
        name:
          description: log stream name
          type: string
        status:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_status'
        type:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_1_type'
        filters:
          description: "Only logs events matching these filters will be delivered\
            \ by the stream. If omitted or empty, all events will be delivered."
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner'
          type: array
        sink:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_1_sink'
      type: object
    get_log_streams_200_response_inner_oneOf_2_type:
      enum:
      - eventgrid
      type: string
    get_log_streams_200_response_inner_oneOf_2_sink_azureRegion:
      description: Azure Region Name
      enum:
      - australiacentral
      - australiaeast
      - australiasoutheast
      - brazilsouth
      - canadacentral
      - canadaeast
      - centralindia
      - centralus
      - eastasia
      - eastus
      - eastus2
      - francecentral
      - germanywestcentral
      - japaneast
      - japanwest
      - koreacentral
      - koreasouth
      - northcentralus
      - northeurope
      - norwayeast
      - southafricanorth
      - southcentralus
      - southeastasia
      - southindia
      - switzerlandnorth
      - uaenorth
      - uksouth
      - ukwest
      - westcentralus
      - westeurope
      - westindia
      - westus
      - westus2
      type: string
    get_log_streams_200_response_inner_oneOf_2_sink:
      additionalProperties: false
      properties:
        azureSubscriptionId:
          description: Subscription ID
          type: string
        azureRegion:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_2_sink_azureRegion'
        azureResourceGroup:
          description: Resource Group
          type: string
        azurePartnerTopic:
          description: Partner Topic
          type: string
      required:
      - azureRegion
      - azureResourceGroup
      - azureSubscriptionId
      type: object
    get_log_streams_200_response_inner_oneOf_2:
      additionalProperties: true
      properties:
        id:
          description: The id of the log stream
          type: string
        name:
          description: log stream name
          type: string
        status:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_status'
        type:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_2_type'
        filters:
          description: "Only logs events matching these filters will be delivered\
            \ by the stream. If omitted or empty, all events will be delivered."
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner'
          type: array
        sink:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_2_sink'
      type: object
    get_log_streams_200_response_inner_oneOf_3_type:
      enum:
      - datadog
      type: string
    get_log_streams_200_response_inner_oneOf_3_sink_datadogRegion:
      description: Datadog region
      enum:
      - us
      - eu
      - us3
      - us5
      type: string
    get_log_streams_200_response_inner_oneOf_3_sink:
      additionalProperties: false
      properties:
        datadogApiKey:
          description: Datadog API Key
          type: string
        datadogRegion:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_3_sink_datadogRegion'
      required:
      - datadogApiKey
      - datadogRegion
      type: object
    get_log_streams_200_response_inner_oneOf_3:
      additionalProperties: true
      properties:
        id:
          description: The id of the log stream
          type: string
        name:
          description: log stream name
          type: string
        status:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_status'
        type:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_3_type'
        filters:
          description: "Only logs events matching these filters will be delivered\
            \ by the stream. If omitted or empty, all events will be delivered."
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner'
          type: array
        sink:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_3_sink'
      type: object
    get_log_streams_200_response_inner_oneOf_4_type:
      enum:
      - splunk
      type: string
    get_log_streams_200_response_inner_oneOf_4_sink:
      additionalProperties: false
      properties:
        splunkDomain:
          description: Splunk URL Endpoint
          type: string
        splunkPort:
          description: Port
          type: string
        splunkToken:
          description: Splunk token
          type: string
        splunkSecure:
          description: Verify TLS certificate
          type: boolean
      required:
      - splunkDomain
      - splunkPort
      - splunkSecure
      - splunkToken
      type: object
    get_log_streams_200_response_inner_oneOf_4:
      additionalProperties: true
      properties:
        id:
          description: The id of the log stream
          type: string
        name:
          description: log stream name
          type: string
        status:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_status'
        type:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_4_type'
        filters:
          description: "Only logs events matching these filters will be delivered\
            \ by the stream. If omitted or empty, all events will be delivered."
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner'
          type: array
        sink:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_4_sink'
      type: object
    get_log_streams_200_response_inner_oneOf_5_type:
      enum:
      - sumo
      type: string
    get_log_streams_200_response_inner_oneOf_5_sink:
      additionalProperties: false
      properties:
        sumoSourceAddress:
          description: HTTP Source Address
          type: string
      required:
      - sumoSourceAddress
      type: object
    get_log_streams_200_response_inner_oneOf_5:
      additionalProperties: true
      properties:
        id:
          description: The id of the log stream
          type: string
        name:
          description: log stream name
          type: string
        status:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_status'
        type:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_5_type'
        filters:
          description: "Only logs events matching these filters will be delivered\
            \ by the stream. If omitted or empty, all events will be delivered."
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner'
          type: array
        sink:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_5_sink'
      type: object
    get_log_streams_200_response_inner_oneOf_6_type:
      enum:
      - segment
      type: string
    get_log_streams_200_response_inner_oneOf_6_sink:
      additionalProperties: false
      properties:
        segmentWriteKey:
          description: Segment write key
          type: string
      required:
      - segmentWriteKey
      type: object
    get_log_streams_200_response_inner_oneOf_6:
      additionalProperties: true
      properties:
        id:
          description: The id of the log stream
          type: string
        name:
          description: log stream name
          type: string
        status:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_status'
        type:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_6_type'
        filters:
          description: "Only logs events matching these filters will be delivered\
            \ by the stream. If omitted or empty, all events will be delivered."
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner'
          type: array
        sink:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_6_sink'
      type: object
    get_log_streams_200_response_inner_oneOf_7_type:
      enum:
      - mixpanel
      type: string
    get_log_streams_200_response_inner_oneOf_7_sink_mixpanelRegion:
      description: Mixpanel Region
      enum:
      - us
      - eu
      type: string
    get_log_streams_200_response_inner_oneOf_7_sink:
      additionalProperties: false
      properties:
        mixpanelRegion:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_7_sink_mixpanelRegion'
        mixpanelProjectId:
          description: Mixpanel Project Id
          type: string
        mixpanelServiceAccountUsername:
          description: Mixpanel Service Account Username
          type: string
        mixpanelServiceAccountPassword:
          description: Mixpanel Service Account Password
          type: string
      required:
      - mixpanelProjectId
      - mixpanelRegion
      - mixpanelServiceAccountPassword
      - mixpanelServiceAccountUsername
      type: object
    get_log_streams_200_response_inner_oneOf_7:
      additionalProperties: true
      properties:
        id:
          description: The id of the log stream
          type: string
        name:
          description: log stream name
          type: string
        status:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_status'
        type:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_7_type'
        filters:
          description: "Only logs events matching these filters will be delivered\
            \ by the stream. If omitted or empty, all events will be delivered."
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner'
          type: array
        sink:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_7_sink'
      type: object
    get_log_streams_200_response_inner:
      oneOf:
      - $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf'
      - $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_1'
      - $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_2'
      - $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_3'
      - $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_4'
      - $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_5'
      - $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_6'
      - $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_7'
    post_log_streams_request_oneOf:
      additionalProperties: false
      properties:
        name:
          description: log stream name
          type: string
        type:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_type'
        filters:
          description: "Only logs events matching these filters will be delivered\
            \ by the stream. If omitted or empty, all events will be delivered."
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner'
          type: array
        sink:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_sink'
        startFrom:
          default: 2021-03-01T19:57:29.532Z
          description: The optional datetime (ISO 8601) to start streaming logs from
          type: string
      required:
      - sink
      - type
      type: object
    post_log_streams_request_oneOf_1_sink:
      additionalProperties: false
      properties:
        awsAccountId:
          description: AWS account ID
          type: string
        awsRegion:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_1_sink_awsRegion'
      required:
      - awsAccountId
      - awsRegion
      type: object
    post_log_streams_request_oneOf_1:
      additionalProperties: false
      properties:
        name:
          description: log stream name
          type: string
        type:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_1_type'
        filters:
          description: "Only logs events matching these filters will be delivered\
            \ by the stream. If omitted or empty, all events will be delivered."
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner'
          type: array
        sink:
          $ref: '#/components/schemas/post_log_streams_request_oneOf_1_sink'
        startFrom:
          default: 2021-03-01T19:57:29.532Z
          description: The optional datetime (ISO 8601) to start streaming logs from
          type: string
      required:
      - sink
      - type
      type: object
    post_log_streams_request_oneOf_2_sink:
      additionalProperties: false
      properties:
        azureSubscriptionId:
          description: Subscription ID
          type: string
        azureRegion:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_2_sink_azureRegion'
        azureResourceGroup:
          description: Resource Group
          type: string
      required:
      - azureRegion
      - azureResourceGroup
      - azureSubscriptionId
      type: object
    post_log_streams_request_oneOf_2:
      additionalProperties: false
      properties:
        name:
          description: log stream name
          type: string
        type:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_2_type'
        filters:
          description: "Only logs events matching these filters will be delivered\
            \ by the stream. If omitted or empty, all events will be delivered."
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner'
          type: array
        sink:
          $ref: '#/components/schemas/post_log_streams_request_oneOf_2_sink'
        startFrom:
          default: 2021-03-01T19:57:29.532Z
          description: The optional datetime (ISO 8601) to start streaming logs from
          type: string
      required:
      - sink
      - type
      type: object
    post_log_streams_request_oneOf_3:
      additionalProperties: false
      properties:
        name:
          description: log stream name
          type: string
        type:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_3_type'
        filters:
          description: "Only logs events matching these filters will be delivered\
            \ by the stream. If omitted or empty, all events will be delivered."
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner'
          type: array
        sink:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_3_sink'
        startFrom:
          default: 2021-03-01T19:57:29.532Z
          description: The optional datetime (ISO 8601) to start streaming logs from
          type: string
      required:
      - sink
      - type
      type: object
    post_log_streams_request_oneOf_4:
      additionalProperties: false
      properties:
        name:
          description: log stream name
          type: string
        type:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_4_type'
        filters:
          description: "Only logs events matching these filters will be delivered\
            \ by the stream. If omitted or empty, all events will be delivered."
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner'
          type: array
        sink:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_4_sink'
        startFrom:
          default: 2021-03-01T19:57:29.532Z
          description: The optional datetime (ISO 8601) to start streaming logs from
          type: string
      required:
      - sink
      - type
      type: object
    post_log_streams_request_oneOf_5:
      additionalProperties: false
      properties:
        name:
          description: log stream name
          type: string
        type:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_5_type'
        filters:
          description: "Only logs events matching these filters will be delivered\
            \ by the stream. If omitted or empty, all events will be delivered."
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner'
          type: array
        sink:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_5_sink'
        startFrom:
          default: 2021-03-01T19:57:29.532Z
          description: The optional datetime (ISO 8601) to start streaming logs from
          type: string
      required:
      - sink
      - type
      type: object
    post_log_streams_request_oneOf_6:
      additionalProperties: false
      properties:
        name:
          description: log stream name
          type: string
        type:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_6_type'
        filters:
          description: "Only logs events matching these filters will be delivered\
            \ by the stream. If omitted or empty, all events will be delivered."
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner'
          type: array
        sink:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_6_sink'
        startFrom:
          default: 2021-03-01T19:57:29.532Z
          description: The optional datetime (ISO 8601) to start streaming logs from
          type: string
      required:
      - sink
      - type
      type: object
    post_log_streams_request_oneOf_7:
      additionalProperties: false
      properties:
        name:
          description: log stream name
          type: string
        type:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_7_type'
        filters:
          description: "Only logs events matching these filters will be delivered\
            \ by the stream. If omitted or empty, all events will be delivered."
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner'
          type: array
        sink:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_7_sink'
        startFrom:
          default: 2021-03-01T19:57:29.532Z
          description: The optional datetime (ISO 8601) to start streaming logs from
          type: string
      required:
      - sink
      - type
      type: object
    post_log_streams_request:
      oneOf:
      - $ref: '#/components/schemas/post_log_streams_request_oneOf'
      - $ref: '#/components/schemas/post_log_streams_request_oneOf_1'
      - $ref: '#/components/schemas/post_log_streams_request_oneOf_2'
      - $ref: '#/components/schemas/post_log_streams_request_oneOf_3'
      - $ref: '#/components/schemas/post_log_streams_request_oneOf_4'
      - $ref: '#/components/schemas/post_log_streams_request_oneOf_5'
      - $ref: '#/components/schemas/post_log_streams_request_oneOf_6'
      - $ref: '#/components/schemas/post_log_streams_request_oneOf_7'
    patch_log_streams_by_id_request_sink_oneOf:
      additionalProperties: false
      properties:
        datadogApiKey:
          description: Datadog API Key
          type: string
        datadogRegion:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_3_sink_datadogRegion'
      required:
      - datadogRegion
      type: object
    patch_log_streams_by_id_request_sink_oneOf_1:
      additionalProperties: false
      properties:
        splunkDomain:
          description: Splunk URL Endpoint
          type: string
        splunkPort:
          description: Port
          type: string
        splunkToken:
          description: Splunk token
          type: string
        splunkSecure:
          description: Verify TLS certificate
          type: boolean
      required:
      - splunkDomain
      - splunkPort
      - splunkSecure
      type: object
    patch_log_streams_by_id_request_sink_oneOf_2:
      additionalProperties: false
      properties:
        segmentWriteKey:
          description: Segment write key
          type: string
      type: object
    patch_log_streams_by_id_request_sink_oneOf_3:
      additionalProperties: false
      properties:
        mixpanelRegion:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_7_sink_mixpanelRegion'
        mixpanelProjectId:
          description: Mixpanel Project Id
          type: string
        mixpanelServiceAccountUsername:
          description: Mixpanel Service Account Username
          type: string
        mixpanelServiceAccountPassword:
          description: Mixpanel Service Account Password
          type: string
      required:
      - mixpanelProjectId
      - mixpanelRegion
      - mixpanelServiceAccountUsername
      type: object
    patch_log_streams_by_id_request_sink:
      oneOf:
      - $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_sink'
      - $ref: '#/components/schemas/patch_log_streams_by_id_request_sink_oneOf'
      - $ref: '#/components/schemas/patch_log_streams_by_id_request_sink_oneOf_1'
      - $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_5_sink'
      - $ref: '#/components/schemas/patch_log_streams_by_id_request_sink_oneOf_2'
      - $ref: '#/components/schemas/patch_log_streams_by_id_request_sink_oneOf_3'
    patch_log_streams_by_id_request:
      additionalProperties: false
      properties:
        name:
          description: log stream name
          type: string
        status:
          $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_status'
        filters:
          description: "Only logs events matching these filters will be delivered\
            \ by the stream. If omitted or empty, all events will be delivered."
          items:
            $ref: '#/components/schemas/get_log_streams_200_response_inner_oneOf_filters_inner'
          type: array
        sink:
          $ref: '#/components/schemas/patch_log_streams_by_id_request_sink'
      type: object
    get_logs_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        length:
          type: number
        total:
          type: number
        logs:
          items:
            $ref: '#/components/schemas/log'
          type: array
      type: object
    get_logs_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/log'
        type: array
      - $ref: '#/components/schemas/get_logs_200_response_oneOf'
    get_organizations_200_response_oneOf_inner_branding_colors:
      additionalProperties: false
      description: Color scheme used to customize the login pages
      example:
        page_background: page_background
        primary: primary
      properties:
        primary:
          description: HEX Color for primary elements
          type: string
        page_background:
          description: HEX Color for background
          type: string
      required:
      - page_background
      - primary
      type: object
    get_organizations_200_response_oneOf_inner_branding:
      additionalProperties: false
      description: Theme defines how to style the login pages
      example:
        logo_url: logo_url
        colors:
          page_background: page_background
          primary: primary
      properties:
        logo_url:
          description: URL of logo to display on login page
          type: string
        colors:
          $ref: '#/components/schemas/get_organizations_200_response_oneOf_inner_branding_colors'
      type: object
    get_organizations_200_response_oneOf_inner:
      additionalProperties: true
      example:
        metadata:
          key: ""
        branding:
          logo_url: logo_url
          colors:
            page_background: page_background
            primary: primary
        name: organization-1
        id: id
        display_name: Acme Users
      properties:
        id:
          description: Organization identifier
          type: string
        name:
          default: organization-1
          description: The name of this organization.
          maxLength: 50
          minLength: 3
          type: string
        display_name:
          default: Acme Users
          description: Friendly name of this organization.
          maxLength: 255
          minLength: 3
          type: string
        branding:
          $ref: '#/components/schemas/get_organizations_200_response_oneOf_inner_branding'
        metadata:
          additionalProperties: true
          description: "Metadata associated with the organization, in the form of\
            \ an object with string values (max 255 chars).  Maximum of 10 metadata\
            \ properties allowed."
          type: object
      type: object
    get_organizations_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        total:
          type: number
        organizations:
          items:
            $ref: '#/components/schemas/get_organizations_200_response_oneOf_inner'
          type: array
      type: object
    get_organizations_200_response_oneOf_1:
      additionalProperties: false
      properties:
        next:
          type: string
        organizations:
          items:
            $ref: '#/components/schemas/get_organizations_200_response_oneOf_inner'
          type: array
      type: object
    get_organizations_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/get_organizations_200_response_oneOf_inner'
        type: array
      - $ref: '#/components/schemas/get_organizations_200_response_oneOf'
      - $ref: '#/components/schemas/get_organizations_200_response_oneOf_1'
    post_organizations_request_enabled_connections_inner:
      additionalProperties: false
      description: Connection to be added to the organization.
      properties:
        connection_id:
          description: ID of the connection.
          type: string
        assign_membership_on_login:
          description: "When true, all users that log in with this connection will\
            \ be automatically granted membership in the organization. When false,\
            \ users must be granted membership in the organization before logging\
            \ in with this connection."
          type: boolean
        show_as_button:
          description: "Determines whether a connection should be displayed on this\
            \ organization’s login prompt. Only applicable for enterprise connections.\
            \ Default: true."
          type: boolean
        is_signup_enabled:
          description: "Determines whether organization signup should be enabled for\
            \ this organization connection. Only applicable for database connections.\
            \ Default: false."
          type: boolean
      required:
      - connection_id
      type: object
    post_organizations_request:
      additionalProperties: false
      properties:
        name:
          default: organization-1
          description: The name of this organization.
          maxLength: 50
          minLength: 3
          type: string
        display_name:
          default: Acme Users
          description: Friendly name of this organization.
          maxLength: 255
          minLength: 3
          type: string
        branding:
          $ref: '#/components/schemas/get_organizations_200_response_oneOf_inner_branding'
        metadata:
          additionalProperties: true
          description: "Metadata associated with the organization, in the form of\
            \ an object with string values (max 255 chars).  Maximum of 10 metadata\
            \ properties allowed."
          type: object
        enabled_connections:
          description: Connections that will be enabled for this organization. See
            POST enabled_connections endpoint for the object format. (Max of 10 connections
            allowed)
          items:
            $ref: '#/components/schemas/post_organizations_request_enabled_connections_inner'
          type: array
      required:
      - name
      type: object
    post_organizations_201_response_enabled_connections_inner_connection:
      additionalProperties: true
      example:
        name: name
        strategy: strategy
      properties:
        name:
          description: The name of the enabled connection.
          type: string
        strategy:
          description: The strategy of the enabled connection.
          type: string
      type: object
    post_organizations_201_response_enabled_connections_inner:
      additionalProperties: true
      example:
        assign_membership_on_login: true
        is_signup_enabled: true
        connection_id: connection_id
        show_as_button: true
        connection:
          name: name
          strategy: strategy
      properties:
        connection_id:
          description: ID of the connection.
          type: string
        assign_membership_on_login:
          description: "When true, all users that log in with this connection will\
            \ be automatically granted membership in the organization. When false,\
            \ users must be granted membership in the organization before logging\
            \ in with this connection."
          type: boolean
        show_as_button:
          description: "Determines whether a connection should be displayed on this\
            \ organization’s login prompt. Only applicable for enterprise connections.\
            \ Default: true."
          type: boolean
        is_signup_enabled:
          description: "Determines whether organization signup should be enabled for\
            \ this organization connection. Only applicable for database connections.\
            \ Default: false."
          type: boolean
        connection:
          $ref: '#/components/schemas/post_organizations_201_response_enabled_connections_inner_connection'
      type: object
    post_organizations_201_response:
      additionalProperties: true
      example:
        metadata:
          key: ""
        enabled_connections:
        - assign_membership_on_login: true
          is_signup_enabled: true
          connection_id: connection_id
          show_as_button: true
          connection:
            name: name
            strategy: strategy
        - assign_membership_on_login: true
          is_signup_enabled: true
          connection_id: connection_id
          show_as_button: true
          connection:
            name: name
            strategy: strategy
        branding:
          logo_url: logo_url
          colors:
            page_background: page_background
            primary: primary
        name: organization-1
        id: id
        display_name: Acme Users
      properties:
        id:
          description: Organization identifier
          type: string
        name:
          default: organization-1
          description: The name of this organization.
          maxLength: 50
          minLength: 3
          type: string
        display_name:
          default: Acme Users
          description: Friendly name of this organization.
          maxLength: 255
          minLength: 3
          type: string
        branding:
          $ref: '#/components/schemas/get_organizations_200_response_oneOf_inner_branding'
        metadata:
          additionalProperties: true
          description: "Metadata associated with the organization, in the form of\
            \ an object with string values (max 255 chars).  Maximum of 10 metadata\
            \ properties allowed."
          type: object
        enabled_connections:
          items:
            $ref: '#/components/schemas/post_organizations_201_response_enabled_connections_inner'
          type: array
      type: object
    patch_organizations_by_id_request_branding:
      additionalProperties: false
      description: Theme defines how to style the login pages
      nullable: true
      properties:
        logo_url:
          description: URL of logo to display on login page
          type: string
        colors:
          $ref: '#/components/schemas/get_organizations_200_response_oneOf_inner_branding_colors'
      type: object
    patch_organizations_by_id_request:
      additionalProperties: false
      properties:
        display_name:
          default: Acme Users
          description: Friendly name of this organization.
          maxLength: 255
          minLength: 3
          type: string
        name:
          default: organization-1
          description: The name of this organization.
          maxLength: 50
          minLength: 3
          type: string
        branding:
          $ref: '#/components/schemas/patch_organizations_by_id_request_branding'
        metadata:
          additionalProperties: true
          description: "Metadata associated with the organization, in the form of\
            \ an object with string values (max 255 chars).  Maximum of 10 metadata\
            \ properties allowed."
          nullable: true
          type: object
      type: object
    get_enabled_connections_200_response_oneOf_inner:
      additionalProperties: false
      example:
        assign_membership_on_login: true
        is_signup_enabled: true
        connection_id: connection_id
        show_as_button: true
        connection:
          name: name
          strategy: strategy
      properties:
        connection_id:
          description: ID of the connection.
          type: string
        assign_membership_on_login:
          description: "When true, all users that log in with this connection will\
            \ be automatically granted membership in the organization. When false,\
            \ users must be granted membership in the organization before logging\
            \ in with this connection."
          type: boolean
        show_as_button:
          description: "Determines whether a connection should be displayed on this\
            \ organization’s login prompt. Only applicable for enterprise connections.\
            \ Default: true."
          type: boolean
        is_signup_enabled:
          description: "Determines whether organization signup should be enabled for\
            \ this organization connection. Only applicable for database connections.\
            \ Default: false."
          type: boolean
        connection:
          $ref: '#/components/schemas/post_organizations_201_response_enabled_connections_inner_connection'
      type: object
    get_enabled_connections_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        total:
          type: number
        enabled_connections:
          items:
            $ref: '#/components/schemas/get_enabled_connections_200_response_oneOf_inner'
          type: array
      type: object
    get_enabled_connections_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/get_enabled_connections_200_response_oneOf_inner'
        type: array
      - $ref: '#/components/schemas/get_enabled_connections_200_response_oneOf'
    post_enabled_connections_request:
      additionalProperties: false
      properties:
        connection_id:
          description: Single connection ID to add to the organization.
          type: string
        assign_membership_on_login:
          description: "When true, all users that log in with this connection will\
            \ be automatically granted membership in the organization. When false,\
            \ users must be granted membership in the organization before logging\
            \ in with this connection."
          type: boolean
        is_signup_enabled:
          description: "Determines whether organization signup should be enabled for\
            \ this organization connection. Only applicable for database connections.\
            \ Default: false."
          type: boolean
        show_as_button:
          description: "Determines whether a connection should be displayed on this\
            \ organization’s login prompt. Only applicable for enterprise connections.\
            \ Default: true."
          type: boolean
      required:
      - connection_id
      type: object
    patch_enabled_connections_by_connectionId_request:
      additionalProperties: false
      properties:
        assign_membership_on_login:
          description: "When true, all users that log in with this connection will\
            \ be automatically granted membership in the organization. When false,\
            \ users must be granted membership in the organization before logging\
            \ in with this connection."
          type: boolean
        is_signup_enabled:
          description: "Determines whether organization signup should be enabled for\
            \ this organization connection. Only applicable for database connections.\
            \ Default: false."
          type: boolean
        show_as_button:
          description: "Determines whether a connection should be displayed on this\
            \ organization’s login prompt. Only applicable for enterprise connections.\
            \ Default: true."
          type: boolean
      type: object
    get_invitations_200_response_oneOf_inner_inviter:
      additionalProperties: false
      example:
        name: Jane Doe
      properties:
        name:
          default: Jane Doe
          description: The inviter's name.
          maxLength: 300
          minLength: 1
          type: string
      required:
      - name
      type: object
    get_invitations_200_response_oneOf_inner_invitee:
      additionalProperties: false
      example:
        email: john.doe@gmail.com
      properties:
        email:
          default: john.doe@gmail.com
          description: The invitee's email.
          type: string
      required:
      - email
      type: object
    get_invitations_200_response_oneOf_inner_app_metadata:
      additionalProperties: true
      description: Data related to the user that does affect the application's core
        functionality.
      example:
        globalClientID: ""
        lastLogin: ""
        metadata: ""
        clientID: ""
        email_verified: ""
        loginsCount: ""
        lastIP: ""
        created_at: ""
        global_client_id: ""
        identities: ""
        blocked: ""
        updated_at: ""
        user_id: ""
        _id: ""
        email: ""
        __tenant: ""
      properties:
        clientID: {}
        globalClientID: {}
        global_client_id: {}
        email_verified: {}
        user_id: {}
        identities: {}
        lastIP: {}
        lastLogin: {}
        metadata: {}
        created_at: {}
        loginsCount: {}
        _id: {}
        email: {}
        blocked: {}
        __tenant: {}
        updated_at: {}
      type: object
    get_invitations_200_response_oneOf_inner:
      additionalProperties: false
      example:
        roles:
        - roles
        - roles
        created_at: 2020-08-20T19:10:06.299Z
        ticket_id: ticket_id
        invitation_url: https://mycompany.org/login?invitation=f81dWWYW6gzGGicxT8Ha0txBkGNcAcYr&organization=org_0000000000000001&organization_name=acme
        client_id: AaiyAPdpYdesoKnqjj8HJqRn4T5titww
        invitee:
          email: john.doe@gmail.com
        expires_at: 2020-08-27T19:10:06.299Z
        user_metadata:
          key: ""
        connection_id: con_0000000000000001
        organization_id: organization_id
        inviter:
          name: Jane Doe
        id: uinv_0000000000000001
        app_metadata:
          globalClientID: ""
          lastLogin: ""
          metadata: ""
          clientID: ""
          email_verified: ""
          loginsCount: ""
          lastIP: ""
          created_at: ""
          global_client_id: ""
          identities: ""
          blocked: ""
          updated_at: ""
          user_id: ""
          _id: ""
          email: ""
          __tenant: ""
      properties:
        id:
          default: uinv_0000000000000001
          description: The id of the user invitation.
          type: string
        organization_id:
          description: Organization identifier
          type: string
        inviter:
          $ref: '#/components/schemas/get_invitations_200_response_oneOf_inner_inviter'
        invitee:
          $ref: '#/components/schemas/get_invitations_200_response_oneOf_inner_invitee'
        invitation_url:
          default: https://mycompany.org/login?invitation=f81dWWYW6gzGGicxT8Ha0txBkGNcAcYr&organization=org_0000000000000001&organization_name=acme
          description: The invitation url to be send to the invitee.
          type: string
        created_at:
          default: 2020-08-20T19:10:06.299Z
          description: The ISO 8601 formatted timestamp representing the creation
            time of the invitation.
          type: string
        expires_at:
          default: 2020-08-27T19:10:06.299Z
          description: The ISO 8601 formatted timestamp representing the expiration
            time of the invitation.
          type: string
        client_id:
          default: AaiyAPdpYdesoKnqjj8HJqRn4T5titww
          description: Auth0 client ID. Used to resolve the application's login initiation
            endpoint.
          type: string
        connection_id:
          default: con_0000000000000001
          description: The id of the connection to force invitee to authenticate with.
          type: string
        app_metadata:
          $ref: '#/components/schemas/get_invitations_200_response_oneOf_inner_app_metadata'
        user_metadata:
          additionalProperties: true
          description: Data related to the user that does not affect the application's
            core functionality.
          type: object
        roles:
          description: List of roles IDs to associated with the user.
          items:
            type: string
          type: array
        ticket_id:
          description: The id of the invitation ticket
          type: string
      type: object
    get_invitations_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        invitations:
          items:
            $ref: '#/components/schemas/get_invitations_200_response_oneOf_inner'
          type: array
      type: object
    get_invitations_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/get_invitations_200_response_oneOf_inner'
        type: array
      - $ref: '#/components/schemas/get_invitations_200_response_oneOf'
    post_invitations_request:
      additionalProperties: false
      properties:
        inviter:
          $ref: '#/components/schemas/get_invitations_200_response_oneOf_inner_inviter'
        invitee:
          $ref: '#/components/schemas/get_invitations_200_response_oneOf_inner_invitee'
        client_id:
          default: AaiyAPdpYdesoKnqjj8HJqRn4T5titww
          description: Auth0 client ID. Used to resolve the application's login initiation
            endpoint.
          type: string
        connection_id:
          default: con_0000000000000001
          description: The id of the connection to force invitee to authenticate with.
          type: string
        app_metadata:
          $ref: '#/components/schemas/get_invitations_200_response_oneOf_inner_app_metadata'
        user_metadata:
          additionalProperties: true
          description: Data related to the user that does not affect the application's
            core functionality.
          type: object
        ttl_sec:
          description: "Number of seconds for which the invitation is valid before\
            \ expiration. If unspecified or set to 0, this value defaults to 604800\
            \ seconds (7 days). Max value: 2592000 seconds (30 days)."
          type: integer
        roles:
          description: List of roles IDs to associated with the user.
          items:
            type: string
          type: array
        send_invitation_email:
          default: true
          description: "Whether the user will receive an invitation email (true) or\
            \ no email (false), true by default"
          type: boolean
      required:
      - client_id
      - invitee
      - inviter
      type: object
    get_members_200_response_oneOf_inner_roles_inner:
      additionalProperties: false
      example:
        name: name
        id: id
      properties:
        id:
          description: ID for this role.
          type: string
        name:
          description: Name of this role.
          type: string
      type: object
    get_members_200_response_oneOf_inner:
      additionalProperties: false
      example:
        user_id: user_id
        roles:
        - name: name
          id: id
        - name: name
          id: id
        name: name
        picture: picture
        email: john.doe@gmail.com
      properties:
        user_id:
          description: ID of this user.
          type: string
        picture:
          description: URL to a picture for this user.
          type: string
        name:
          description: Name of this user.
          type: string
        email:
          default: john.doe@gmail.com
          description: Email address of this user.
          type: string
        roles:
          items:
            $ref: '#/components/schemas/get_members_200_response_oneOf_inner_roles_inner'
          type: array
      type: object
    get_members_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        total:
          type: number
        members:
          items:
            $ref: '#/components/schemas/get_members_200_response_oneOf_inner'
          type: array
      type: object
    get_members_200_response_oneOf_1:
      additionalProperties: true
      properties:
        next:
          type: string
        members:
          items:
            $ref: '#/components/schemas/get_members_200_response_oneOf_inner'
          type: array
      type: object
    get_members_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/get_members_200_response_oneOf_inner'
        type: array
      - $ref: '#/components/schemas/get_members_200_response_oneOf'
      - $ref: '#/components/schemas/get_members_200_response_oneOf_1'
    post_members_request:
      additionalProperties: true
      properties:
        members:
          description: List of user IDs to add to the organization as members.
          items:
            type: string
          type: array
      required:
      - members
      type: object
    delete_members_request:
      additionalProperties: true
      properties:
        members:
          description: List of user IDs to remove from the organization.
          items:
            type: string
          type: array
      required:
      - members
      type: object
    get_organization_member_roles_200_response_oneOf_inner:
      additionalProperties: false
      example:
        name: name
        description: description
        id: id
      properties:
        id:
          description: ID for this role.
          type: string
        name:
          description: Name of this role.
          type: string
        description:
          description: Description of this role.
          type: string
      type: object
    get_organization_member_roles_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        total:
          type: number
        roles:
          items:
            $ref: '#/components/schemas/get_organization_member_roles_200_response_oneOf_inner'
          type: array
      type: object
    get_organization_member_roles_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/get_organization_member_roles_200_response_oneOf_inner'
        type: array
      - $ref: '#/components/schemas/get_organization_member_roles_200_response_oneOf'
    post_organization_member_roles_request:
      additionalProperties: false
      properties:
        roles:
          description: List of roles IDs to associated with the user.
          items:
            type: string
          type: array
      required:
      - roles
      type: object
    delete_organization_member_roles_request:
      additionalProperties: false
      properties:
        roles:
          description: List of roles IDs associated with the organization member to
            remove.
          items:
            type: string
          type: array
      required:
      - roles
      type: object
    get_custom_text_by_language_prompt_parameter:
      enum:
      - login
      - login-id
      - login-password
      - login-passwordless
      - login-email-verification
      - signup
      - signup-id
      - signup-password
      - phone-identifier-enrollment
      - phone-identifier-challenge
      - reset-password
      - consent
      - logout
      - mfa-push
      - mfa-otp
      - mfa-voice
      - mfa-phone
      - mfa-webauthn
      - mfa-sms
      - mfa-email
      - mfa-recovery-code
      - mfa
      - status
      - device-flow
      - email-verification
      - email-otp-challenge
      - organizations
      - invitation
      - common
      - passkeys
      type: string
    get_custom_text_by_language_language_parameter:
      enum:
      - ar
      - bg
      - bs
      - ca-ES
      - cs
      - cy
      - da
      - de
      - el
      - en
      - es
      - et
      - eu-ES
      - fi
      - fr
      - fr-CA
      - fr-FR
      - gl-ES
      - he
      - hi
      - hr
      - hu
      - id
      - is
      - it
      - ja
      - ko
      - lt
      - lv
      - nb
      - nl
      - nn
      - "no"
      - pl
      - pt
      - pt-BR
      - pt-PT
      - ro
      - ru
      - sk
      - sl
      - sr
      - sv
      - th
      - tr
      - uk
      - vi
      - zh-CN
      - zh-TW
      type: string
    get_resource_servers_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        total:
          type: number
        resource_servers:
          items:
            $ref: '#/components/schemas/resourceServer'
          type: array
      type: object
    get_resource_servers_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/resourceServer'
        type: array
      - $ref: '#/components/schemas/get_resource_servers_200_response_oneOf'
    get_partials_prompt_parameter:
      enum:
      - login
      - login-id
      - login-password
      - signup
      - signup-id
      - signup-password
      - customized-consent
      type: string
    get_refresh_token_200_response_created_at:
      nullable: true
      oneOf:
      - description: The date and time when the refresh token was created
        format: date-time
        type: string
      - additionalProperties: true
        description: The date and time when the refresh token was created
        type: object
    get_refresh_token_200_response_idle_expires_at:
      nullable: true
      oneOf:
      - description: The date and time when the refresh token will expire if idle
        format: date-time
        type: string
      - additionalProperties: true
        description: The date and time when the refresh token will expire if idle
        type: object
    get_refresh_token_200_response_expires_at:
      nullable: true
      oneOf:
      - description: The date and time when the refresh token will expire
        format: date-time
        type: string
      - additionalProperties: true
        description: The date and time when the refresh token will expire
        type: object
    get_refresh_token_200_response_resource_servers_inner:
      additionalProperties: true
      example:
        audience: audience
        scopes: scopes
      properties:
        audience:
          description: Resource server ID
          type: string
        scopes:
          description: List of scopes for the refresh token
          type: string
      type: object
    get_refresh_token_200_response:
      additionalProperties: true
      example:
        idle_expires_at: 2000-01-23T04:56:07.000+00:00
        rotating: true
        expires_at: 2000-01-23T04:56:07.000+00:00
        user_id: auth0|507f1f77bcf86cd799439020
        resource_servers:
        - audience: audience
          scopes: scopes
        - audience: audience
          scopes: scopes
        created_at: 2000-01-23T04:56:07.000+00:00
        session_id: session_id
        id: id
        client_id: client_id
      properties:
        id:
          description: The ID of the refresh token
          type: string
        user_id:
          default: auth0|507f1f77bcf86cd799439020
          description: ID of the user which can be used when interacting with other
            APIs.
          type: string
        created_at:
          $ref: '#/components/schemas/get_refresh_token_200_response_created_at'
        idle_expires_at:
          $ref: '#/components/schemas/get_refresh_token_200_response_idle_expires_at'
        expires_at:
          $ref: '#/components/schemas/get_refresh_token_200_response_expires_at'
        client_id:
          description: ID of the client application granted with this refresh token
          type: string
        session_id:
          description: ID of the authenticated session used to obtain this refresh-token
          nullable: true
          type: string
        rotating:
          description: True if the token is a rotating refresh token
          type: boolean
        resource_servers:
          description: A list of the resource server IDs associated to this refresh-token
            and their granted scopes
          items:
            $ref: '#/components/schemas/get_refresh_token_200_response_resource_servers_inner'
          type: array
      type: object
    get_role_permission_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        total:
          type: number
        permissions:
          items:
            $ref: '#/components/schemas/permission'
          type: array
      type: object
    get_role_permission_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/permission'
        type: array
      - $ref: '#/components/schemas/get_role_permission_200_response_oneOf'
    post_role_permission_assignment_request_permissions_inner:
      additionalProperties: false
      properties:
        resource_server_identifier:
          description: Resource server (API) identifier that this permission is for.
          type: string
        permission_name:
          description: Name of this permission.
          type: string
      required:
      - permission_name
      - resource_server_identifier
      type: object
    post_role_permission_assignment_request:
      additionalProperties: false
      properties:
        permissions:
          description: "array of resource_server_identifier, permission_name pairs."
          items:
            $ref: '#/components/schemas/post_role_permission_assignment_request_permissions_inner'
          type: array
      required:
      - permissions
      type: object
    get_role_user_200_response_oneOf_inner:
      additionalProperties: false
      example:
        user_id: user_id
        name: name
        picture: picture
        email: john.doe@gmail.com
      properties:
        user_id:
          description: ID of this user.
          type: string
        picture:
          description: URL to a picture for this user.
          type: string
        name:
          description: Name of this user.
          type: string
        email:
          default: john.doe@gmail.com
          description: Email address of this user.
          type: string
      type: object
    get_role_user_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        total:
          type: number
        users:
          items:
            $ref: '#/components/schemas/get_role_user_200_response_oneOf_inner'
          type: array
      type: object
    get_role_user_200_response_oneOf_1:
      additionalProperties: false
      properties:
        next:
          type: string
        users:
          items:
            $ref: '#/components/schemas/get_role_user_200_response_oneOf_inner'
          type: array
      type: object
    get_role_user_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/get_role_user_200_response_oneOf_inner'
        type: array
      - $ref: '#/components/schemas/get_role_user_200_response_oneOf'
      - $ref: '#/components/schemas/get_role_user_200_response_oneOf_1'
    post_role_users_request:
      additionalProperties: false
      properties:
        users:
          description: user_id's of the users to assign the role to.
          items:
            type: string
          type: array
      required:
      - users
      type: object
    get_rules_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        total:
          type: number
        rules:
          items:
            $ref: '#/components/schemas/rule'
          type: array
      type: object
    get_rules_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/rule'
        type: array
      - $ref: '#/components/schemas/get_rules_200_response_oneOf'
    get_rules_configs_200_response_inner:
      additionalProperties: true
      example:
        key: MY_RULES_CONFIG_KEY
      properties:
        key:
          default: MY_RULES_CONFIG_KEY
          description: Key for a rules config variable.
          maxLength: 127
          minLength: 1
          type: string
      type: object
    put_rules_configs_by_key_request:
      additionalProperties: false
      properties:
        value:
          default: MY_RULES_CONFIG_VALUE
          description: Value for a rules config variable.
          type: string
      required:
      - value
      type: object
    put_rules_configs_by_key_200_response:
      additionalProperties: true
      example:
        value: MY_RULES_CONFIG_VALUE
        key: MY_RULES_CONFIG_KEY
      properties:
        key:
          default: MY_RULES_CONFIG_KEY
          description: Key for a rules config variable.
          maxLength: 127
          minLength: 1
          type: string
        value:
          default: MY_RULES_CONFIG_VALUE
          description: Value for a rules config variable.
          type: string
      required:
      - key
      - value
      type: object
    get_session_200_response_created_at:
      nullable: true
      oneOf:
      - description: The date and time when the session was created
        format: date-time
        type: string
      - additionalProperties: true
        description: The date and time when the session was created
        type: object
    get_session_200_response_updated_at:
      nullable: true
      oneOf:
      - description: The date and time when the session was last updated
        format: date-time
        type: string
      - additionalProperties: true
        description: The date and time when the session was last updated
        type: object
    get_session_200_response_authenticated_at:
      nullable: true
      oneOf:
      - description: The date and time when the session was last authenticated
        format: date-time
        type: string
      - additionalProperties: true
        description: The date and time when the session was last authenticated
        type: object
    get_session_200_response_idle_expires_at:
      nullable: true
      oneOf:
      - description: The date and time when the session will expire if idle
        format: date-time
        type: string
      - additionalProperties: true
        description: The date and time when the session will expire if idle
        type: object
    get_session_200_response_expires_at:
      nullable: true
      oneOf:
      - description: The date and time when the session will expire
        format: date-time
        type: string
      - additionalProperties: true
        description: The date and time when the session will expire
        type: object
    get_session_200_response_device:
      additionalProperties: true
      description: Metadata related to the device used in the session
      example:
        last_ip: last_ip
        last_user_agent: last_user_agent
        initial_ip: initial_ip
        initial_asn: initial_asn
        last_asn: last_asn
      properties:
        initial_ip:
          description: First IP address associated with this session
          nullable: true
          type: string
        initial_asn:
          description: First autonomous system number associated with this session
          type: string
        last_user_agent:
          description: Last user agent of the device from which this user logged in
          type: string
        last_ip:
          description: Last IP address from which this user logged in
          nullable: true
          type: string
        last_asn:
          description: Last autonomous system number from which this user logged in
          type: string
      type: object
    get_session_200_response_clients_inner:
      additionalProperties: true
      description: Client details
      example:
        client_id: client_id
      properties:
        client_id:
          description: ID of client for the session
          type: string
      type: object
    get_session_200_response_authentication_methods_inner_timestamp:
      nullable: true
      oneOf:
      - description: Timestamp of when the signal was received
        format: date-time
        type: string
      - additionalProperties: true
        description: Timestamp of when the signal was received
        type: object
    get_session_200_response_authentication_methods_inner:
      additionalProperties: true
      description: Authentication signal details
      example:
        name: name
        ^type$: ^type$
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          description: "One of: \"federated\", \"passkey\", \"pwd\", \"sms\", \"email\"\
            , \"mfa\", \"mock\" or a custom method denoted by a URL"
          type: string
        timestamp:
          $ref: '#/components/schemas/get_session_200_response_authentication_methods_inner_timestamp'
        ^type$:
          description: A specific MFA factor. Only present when "name" is set to "mfa"
          type: string
      type: object
    get_session_200_response_authentication:
      additionalProperties: true
      description: Details about authentication signals obtained during the login
        flow
      example:
        methods:
        - name: name
          ^type$: ^type$
          timestamp: 2000-01-23T04:56:07.000+00:00
        - name: name
          ^type$: ^type$
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        methods:
          description: Contains the authentication methods a user has completed during
            their session
          items:
            $ref: '#/components/schemas/get_session_200_response_authentication_methods_inner'
          type: array
      type: object
    get_session_200_response:
      additionalProperties: true
      example:
        idle_expires_at: 2000-01-23T04:56:07.000+00:00
        expires_at: 2000-01-23T04:56:07.000+00:00
        clients:
        - client_id: client_id
        - client_id: client_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        authenticated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        device:
          last_ip: last_ip
          last_user_agent: last_user_agent
          initial_ip: initial_ip
          initial_asn: initial_asn
          last_asn: last_asn
        authentication:
          methods:
          - name: name
            ^type$: ^type$
            timestamp: 2000-01-23T04:56:07.000+00:00
          - name: name
            ^type$: ^type$
            timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: The ID of the session
          type: string
        user_id:
          description: ID of the user which can be used when interacting with other
            APIs.
          type: string
        created_at:
          $ref: '#/components/schemas/get_session_200_response_created_at'
        updated_at:
          $ref: '#/components/schemas/get_session_200_response_updated_at'
        authenticated_at:
          $ref: '#/components/schemas/get_session_200_response_authenticated_at'
        idle_expires_at:
          $ref: '#/components/schemas/get_session_200_response_idle_expires_at'
        expires_at:
          $ref: '#/components/schemas/get_session_200_response_expires_at'
        device:
          $ref: '#/components/schemas/get_session_200_response_device'
        clients:
          description: List of client details for the session
          items:
            $ref: '#/components/schemas/get_session_200_response_clients_inner'
          type: array
        authentication:
          $ref: '#/components/schemas/get_session_200_response_authentication'
      type: object
    post_email_verification_request:
      additionalProperties: false
      properties:
        result_url:
          default: http://myapp.com/callback
          description: URL the user will be redirected to in the classic Universal
            Login experience once the ticket is used.
          type: string
        user_id:
          description: user_id of for whom the ticket should be created.
          type: string
        client_id:
          default: DaM8bokEXBWrTUFCiJjWn50jei6ardyX
          description: "ID of the client. If provided for tenants using New Universal\
            \ Login experience, the user will be prompted to redirect to the default\
            \ login route of the corresponding application once the ticket is used.\
            \ See <a target='' href='https://manage.local.dev.auth0.com/docs/universal-login/configure-default-login-routes#completing-the-password-reset-flow'>Configuring\
            \ Default Login Routes</a> for more details."
          type: string
        organization_id:
          default: org_2eondWoxcMIpaLQc
          description: "(Optional) Organization ID – the ID of the Organization. If\
            \ provided, organization parameters will be made available to the email\
            \ template and organization branding will be applied to the prompt. In\
            \ addition, the redirect link in the prompt will include organization_id\
            \ and organization_name query string parameters."
          type: string
        ttl_sec:
          description: "Number of seconds for which the ticket is valid before expiration.\
            \ If unspecified or set to 0, this value defaults to 432000 seconds (5\
            \ days)."
          type: integer
        includeEmailInRedirect:
          description: "Whether to include the email address as part of the returnUrl\
            \ in the reset_email (true), or not (false)."
          type: boolean
        identity:
          $ref: '#/components/schemas/post_verification_email_request_identity'
      required:
      - user_id
      type: object
    post_email_verification_201_response:
      additionalProperties: true
      example:
        ticket: https://login.auth0.com/lo/verify_email?client_id=nsaPS2p3cargoFy82WT7betaOPOt3qSh&tenant=mdocs&bewit=bmNlR01CcDNOUE1GeXVzODJXVDdyY1RUT1BPdDNxU2hcMTQzMDY2MjE4MVxuRTcxM0RSeUNlbEpzUUJmaFVaS3A1NEdJbWFzSUZMYzRTdEFtY2NMMXhZPVx7ImVtYWloojoiZGFtaWtww2NoQGhvdG1haWwuY29tIiwidGVuYW50IjoiZHNjaGVua2tjwWFuIiwiY2xpZW50X2lkIjoibmNlR01CcDNOUE1GeXVzODJXVDdyY1RUT1BPiiqxU2giLCJjb25uZWN0aW9uIjoiRGFtaWmsdiwicmVzdWx0VXJsIjoiIn0
      properties:
        ticket:
          default: https://login.auth0.com/lo/verify_email?client_id=nsaPS2p3cargoFy82WT7betaOPOt3qSh&tenant=mdocs&bewit=bmNlR01CcDNOUE1GeXVzODJXVDdyY1RUT1BPdDNxU2hcMTQzMDY2MjE4MVxuRTcxM0RSeUNlbEpzUUJmaFVaS3A1NEdJbWFzSUZMYzRTdEFtY2NMMXhZPVx7ImVtYWloojoiZGFtaWtww2NoQGhvdG1haWwuY29tIiwidGVuYW50IjoiZHNjaGVua2tjwWFuIiwiY2xpZW50X2lkIjoibmNlR01CcDNOUE1GeXVzODJXVDdyY1RUT1BPiiqxU2giLCJjb25uZWN0aW9uIjoiRGFtaWmsdiwicmVzdWx0VXJsIjoiIn0
          description: URL representing the ticket.
          type: string
      required:
      - ticket
      type: object
    post_password_change_request:
      additionalProperties: false
      properties:
        result_url:
          default: http://myapp.com/callback
          description: URL the user will be redirected to in the classic Universal
            Login experience once the ticket is used.
          type: string
        user_id:
          description: user_id of for whom the ticket should be created.
          type: string
        client_id:
          default: DaM8bokEXBWrTUFCiJjWn50jei6ardyX
          description: "ID of the client. If provided for tenants using New Universal\
            \ Login experience, the user will be prompted to redirect to the default\
            \ login route of the corresponding application once the ticket is used.\
            \ See <a target='' href='https://manage.local.dev.auth0.com/docs/universal-login/configure-default-login-routes#completing-the-password-reset-flow'>Configuring\
            \ Default Login Routes</a> for more details."
          type: string
        organization_id:
          default: org_2eondWoxcMIpaLQc
          description: "(Optional) Organization ID – the ID of the Organization. If\
            \ provided, organization parameters will be made available to the email\
            \ template and organization branding will be applied to the prompt. In\
            \ addition, the redirect link in the prompt will include organization_id\
            \ and organization_name query string parameters."
          type: string
        connection_id:
          default: con_0000000000000001
          description: "ID of the connection. If provided, allows the user to be specified\
            \ using email instead of user_id. If you set this value, you must also\
            \ send the email parameter. You cannot send user_id when specifying a\
            \ connection_id."
          type: string
        email:
          description: Email address of the user for whom the tickets should be created.
            Requires the connection_id parameter. Cannot be specified when using user_id.
          type: string
        ttl_sec:
          description: "Number of seconds for which the ticket is valid before expiration.\
            \ If unspecified or set to 0, this value defaults to 432000 seconds (5\
            \ days)."
          type: integer
        mark_email_as_verified:
          default: false
          description: Whether to set the email_verified attribute to true (true)
            or whether it should not be updated (false).
          type: boolean
        includeEmailInRedirect:
          description: "Whether to include the email address as part of the returnUrl\
            \ in the reset_email (true), or not (false)."
          type: boolean
      type: object
    post_password_change_201_response:
      additionalProperties: true
      example:
        ticket: https://login.auth0.com/lo/reset?client_id=nsaPS2p3cargoFy82WT7betaOPOt3qSh&tenant=mdocs&bewit=bmNlR01CcDNOUE1GeXVzODJXVDdyY1RUT1BPdDNxU2hcMTQzMDY2MjE4MVxuRTcxM0RSeUNlbEpzUUJmaFVaS3A1NEdJbWFzSUZMYzRTdEFtY2NMMXhZPVx7ImVtYWloojoiZGFtaWtww2NoQGhvdG1haWwuY29tIiwidGVuYW50IjoiZHNjaGVua2tjwWFuIiwiY2xpZW50X2lkIjoibmNlR01CcDNOUE1GeXVzODJXVDdyY1RUT1BPiiqxU2giLCJjb25uZWN0aW9uIjoiRGFtaWmsdiwicmVzdWx0VXJsIjoiIn0
      properties:
        ticket:
          default: https://login.auth0.com/lo/reset?client_id=nsaPS2p3cargoFy82WT7betaOPOt3qSh&tenant=mdocs&bewit=bmNlR01CcDNOUE1GeXVzODJXVDdyY1RUT1BPdDNxU2hcMTQzMDY2MjE4MVxuRTcxM0RSeUNlbEpzUUJmaFVaS3A1NEdJbWFzSUZMYzRTdEFtY2NMMXhZPVx7ImVtYWloojoiZGFtaWtww2NoQGhvdG1haWwuY29tIiwidGVuYW50IjoiZHNjaGVua2tjwWFuIiwiY2xpZW50X2lkIjoibmNlR01CcDNOUE1GeXVzODJXVDdyY1RUT1BPiiqxU2giLCJjb25uZWN0aW9uIjoiRGFtaWmsdiwicmVzdWx0VXJsIjoiIn0
          description: URL representing the ticket.
          type: string
      required:
      - ticket
      type: object
    get_users_search_engine_parameter:
      enum:
      - v1
      - v2
      - v3
      type: string
    get_users_200_response_oneOf_inner_created_at:
      oneOf:
      - description: Date and time when this user was created (ISO_8601 format).
        type: string
      - additionalProperties: true
        description: Date and time when this user was created (ISO_8601 format).
        type: object
    get_users_200_response_oneOf_inner_updated_at:
      oneOf:
      - description: Date and time when this user was last updated/modified (ISO_8601
          format).
        type: string
      - additionalProperties: true
        description: Date and time when this user was last updated/modified (ISO_8601
          format).
        type: object
    get_users_200_response_oneOf_inner_identities_inner:
      additionalProperties: false
      example:
        access_token: access_token
        refresh_token: refresh_token
        isSocial: true
        user_id: user_id
        provider: provider
        connection: connection
        profileData:
          email_verified: true
          phone_verified: true
          name: name
          phone_number: phone_number
          given_name: given_name
          family_name: family_name
          email: email
          username: johndoe
        access_token_secret: access_token_secret
      properties:
        connection:
          description: Name of the connection containing this identity.
          type: string
        user_id:
          description: Unique identifier of the user user for this identity.
          type: string
        provider:
          description: The type of identity provider
          type: string
        isSocial:
          description: Whether this identity is from a social provider (true) or not
            (false).
          type: boolean
        access_token:
          description: IDP access token returned only if scope read:user_idp_tokens
            is defined.
          type: string
        access_token_secret:
          description: IDP access token secret returned only if scope read:user_idp_tokens
            is defined.
          type: string
        refresh_token:
          description: IDP refresh token returned only if scope read:user_idp_tokens
            is defined.
          type: string
        profileData:
          $ref: '#/components/schemas/userProfile'
      type: object
    get_users_200_response_oneOf_inner_app_metadata:
      additionalProperties: true
      description: User metadata to which this user has read-only access.
      example:
        globalClientID: ""
        lastLogin: ""
        metadata: ""
        clientID: ""
        email_verified: ""
        loginsCount: ""
        lastIP: ""
        created_at: ""
        global_client_id: ""
        identities: ""
        blocked: ""
        updated_at: ""
        user_id: ""
        _id: ""
        email: ""
        __tenant: ""
      properties:
        clientID: {}
        globalClientID: {}
        global_client_id: {}
        email_verified: {}
        user_id: {}
        identities: {}
        lastIP: {}
        lastLogin: {}
        metadata: {}
        created_at: {}
        loginsCount: {}
        _id: {}
        email: {}
        blocked: {}
        __tenant: {}
        updated_at: {}
      type: object
    get_users_200_response_oneOf_inner_last_login:
      oneOf:
      - description: Last date and time this user logged in (ISO_8601 format).
        type: string
      - additionalProperties: true
        description: Last date and time this user logged in (ISO_8601 format).
        type: object
    get_users_200_response_oneOf_inner:
      additionalProperties: true
      example:
        last_ip: last_ip
        email_verified: false
        last_login: get_users_200_response_oneOf_inner_last_login
        created_at: get_users_200_response_oneOf_inner_created_at
        given_name: given_name
        picture: picture
        logins_count: 0
        multifactor:
        - multifactor
        - multifactor
        identities:
        - access_token: access_token
          refresh_token: refresh_token
          isSocial: true
          user_id: user_id
          provider: provider
          connection: connection
          profileData:
            email_verified: true
            phone_verified: true
            name: name
            phone_number: phone_number
            given_name: given_name
            family_name: family_name
            email: email
            username: johndoe
          access_token_secret: access_token_secret
        - access_token: access_token
          refresh_token: refresh_token
          isSocial: true
          user_id: user_id
          provider: provider
          connection: connection
          profileData:
            email_verified: true
            phone_verified: true
            name: name
            phone_number: phone_number
            given_name: given_name
            family_name: family_name
            email: email
            username: johndoe
          access_token_secret: access_token_secret
        user_metadata:
          key: ""
        phone_verified: false
        updated_at: get_users_200_response_oneOf_inner_updated_at
        blocked: true
        user_id: auth0|507f1f77bcf86cd799439020
        name: name
        nickname: nickname
        phone_number: "+199999999999999"
        family_name: family_name
        email: john.doe@gmail.com
        username: johndoe
        app_metadata:
          globalClientID: ""
          lastLogin: ""
          metadata: ""
          clientID: ""
          email_verified: ""
          loginsCount: ""
          lastIP: ""
          created_at: ""
          global_client_id: ""
          identities: ""
          blocked: ""
          updated_at: ""
          user_id: ""
          _id: ""
          email: ""
          __tenant: ""
      properties:
        user_id:
          default: auth0|507f1f77bcf86cd799439020
          description: ID of the user which can be used when interacting with other
            APIs.
          type: string
        email:
          default: john.doe@gmail.com
          description: Email address of this user.
          type: string
        email_verified:
          default: false
          description: Whether this email address is verified (true) or unverified
            (false).
          type: boolean
        username:
          default: johndoe
          description: Username of this user.
          type: string
        phone_number:
          default: "+199999999999999"
          description: Phone number for this user when using SMS connections. Follows
            the <a href="https://en.wikipedia.org/wiki/E.164">E.164 recommendation</a>.
          type: string
        phone_verified:
          default: false
          description: Whether this phone number has been verified (true) or not (false).
          type: boolean
        created_at:
          $ref: '#/components/schemas/get_users_200_response_oneOf_inner_created_at'
        updated_at:
          $ref: '#/components/schemas/get_users_200_response_oneOf_inner_updated_at'
        identities:
          description: Array of user identity objects when accounts are linked.
          items:
            $ref: '#/components/schemas/get_users_200_response_oneOf_inner_identities_inner'
          type: array
        app_metadata:
          $ref: '#/components/schemas/get_users_200_response_oneOf_inner_app_metadata'
        user_metadata:
          additionalProperties: true
          description: User metadata to which this user has read/write access.
          type: object
        picture:
          description: "URL to picture, photo, or avatar of this user."
          type: string
        name:
          description: Name of this user.
          type: string
        nickname:
          description: Preferred nickname or alias of this user.
          type: string
        multifactor:
          description: List of multi-factor authentication providers with which this
            user has enrolled.
          items:
            type: string
          type: array
        last_ip:
          description: Last IP address from which this user logged in.
          type: string
        last_login:
          $ref: '#/components/schemas/get_users_200_response_oneOf_inner_last_login'
        logins_count:
          description: Total number of logins this user has performed.
          type: integer
        blocked:
          description: Whether this user was blocked by an administrator (true) or
            is not (false).
          type: boolean
        given_name:
          description: Given name/first name/forename of this user.
          type: string
        family_name:
          description: Family name/last name/surname of this user.
          type: string
      type: object
    get_users_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        length:
          type: number
        total:
          type: number
        users:
          items:
            $ref: '#/components/schemas/get_users_200_response_oneOf_inner'
          type: array
      type: object
    get_users_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/get_users_200_response_oneOf_inner'
        type: array
      - $ref: '#/components/schemas/get_users_200_response_oneOf'
    get_authentication_methods_200_response_oneOf_inner_type:
      enum:
      - recovery-code
      - totp
      - push
      - phone
      - email
      - email-verification
      - webauthn-roaming
      - webauthn-platform
      - guardian
      - passkey
      type: string
    get_authentication_methods_200_response_oneOf_inner_authentication_methods_inner_type:
      enum:
      - totp
      - push
      - sms
      - voice
      type: string
    get_authentication_methods_200_response_oneOf_inner_authentication_methods_inner:
      additionalProperties: true
      example:
        id: id
        type: totp
      properties:
        type:
          $ref: '#/components/schemas/get_authentication_methods_200_response_oneOf_inner_authentication_methods_inner_type'
        id:
          type: string
      type: object
    get_authentication_methods_200_response_oneOf_inner_preferred_authentication_method:
      description: The authentication method preferred for phone authenticators.
      enum:
      - sms
      - voice
      type: string
    get_authentication_methods_200_response_oneOf_inner:
      additionalProperties: false
      example:
        public_key: public_key
        last_auth_at: last_auth_at
        enrolled_at: enrolled_at
        identity_user_id: identity_user_id
        key_id: key_id
        created_at: created_at
        type: recovery-code
        confirmed: true
        link_id: link_id
        preferred_authentication_method: sms
        credential_backed_up: true
        authentication_methods:
        - id: id
          type: totp
        - id: id
          type: totp
        name: name
        phone_number: phone_number
        id: id
        email: email
        credential_device_type: credential_device_type
        user_agent: user_agent
      properties:
        id:
          description: The ID of the authentication method (auto generated)
          type: string
        type:
          $ref: '#/components/schemas/get_authentication_methods_200_response_oneOf_inner_type'
        confirmed:
          description: The authentication method status
          type: boolean
        name:
          description: A human-readable label to identify the authentication method
          maxLength: 20
          type: string
        authentication_methods:
          items:
            $ref: '#/components/schemas/get_authentication_methods_200_response_oneOf_inner_authentication_methods_inner'
          type: array
        preferred_authentication_method:
          $ref: '#/components/schemas/get_authentication_methods_200_response_oneOf_inner_preferred_authentication_method'
        link_id:
          description: The ID of a linked authentication method. Linked authentication
            methods will be deleted together.
          type: string
        phone_number:
          description: Applies to phone authentication methods only. The destination
            phone number used to send verification codes via text and voice.
          type: string
        email:
          description: Applies to email and email-verification authentication methods
            only. The email address used to send verification messages.
          type: string
        key_id:
          description: Applies to webauthn authentication methods only. The ID of
            the generated credential.
          type: string
        public_key:
          description: Applies to webauthn authentication methods only. The public
            key.
          type: string
        created_at:
          description: Authenticator creation date
          type: string
        enrolled_at:
          description: Enrollment date
          type: string
        last_auth_at:
          description: Last authentication
          type: string
        credential_device_type:
          description: "Applies to passkeys only. The kind of device the credential\
            \ is stored on as defined by backup eligibility. \"single_device\" credentials\
            \ cannot be backed up and synced to another device, \"multi_device\" credentials\
            \ can be backed up if enabled by the end-user."
          type: string
        credential_backed_up:
          description: Applies to passkeys only. Whether the credential was backed
            up.
          type: boolean
        identity_user_id:
          description: Applies to passkeys only. The ID of the user identity linked
            with the authentication method.
          type: string
        user_agent:
          description: Applies to passkeys only. The user-agent of the browser used
            to create the passkey.
          type: string
      required:
      - created_at
      - id
      - type
      type: object
    get_authentication_methods_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          description: Index of the starting record. Derived from the page and per_page
            parameters.
          type: number
        limit:
          description: Maximum amount of records to return.
          type: number
        total:
          description: Total number of pageable records.
          type: number
        authenticators:
          description: The paginated authentication methods. Returned in this structure
            when include_totals is true.
          items:
            $ref: '#/components/schemas/get_authentication_methods_200_response_oneOf_inner'
          type: array
      type: object
    get_authentication_methods_200_response:
      oneOf:
      - description: The paginated authentication methods. Returned in this structure
          when include_totals is false.
        items:
          $ref: '#/components/schemas/get_authentication_methods_200_response_oneOf_inner'
        type: array
      - $ref: '#/components/schemas/get_authentication_methods_200_response_oneOf'
    put_authentication_methods_request_inner_type:
      enum:
      - phone
      - email
      - totp
      type: string
    put_authentication_methods_request_inner_preferred_authentication_method:
      description: The preferred authentication method for phone authentication method.
      enum:
      - voice
      - sms
      type: string
    put_authentication_methods_request_inner:
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/put_authentication_methods_request_inner_type'
        preferred_authentication_method:
          $ref: '#/components/schemas/put_authentication_methods_request_inner_preferred_authentication_method'
        name:
          description: AA human-readable label to identify the authentication method.
          maxLength: 20
          minLength: 1
          type: string
        phone_number:
          description: Applies to phone authentication methods only. The destination
            phone number used to send verification codes via text and voice.
          maxLength: 30
          minLength: 2
          type: string
        email:
          description: Applies to email authentication methods only. The email address
            used to send verification messages.
          minLength: 1
          type: string
        totp_secret:
          description: Applies to totp authentication methods only. The base32 encoded
            secret for TOTP generation.
          minLength: 1
          type: string
      required:
      - type
      type: object
    put_authentication_methods_200_response_inner_type:
      enum:
      - phone
      - email
      - totp
      - webauthn-roaming
      type: string
    put_authentication_methods_200_response_inner_authentication_methods_inner:
      additionalProperties: true
      example:
        id: id
        type: totp
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/get_authentication_methods_200_response_oneOf_inner_authentication_methods_inner_type'
      type: object
    put_authentication_methods_200_response_inner_preferred_authentication_method:
      description: Preferred phone authentication method
      enum:
      - voice
      - sms
      type: string
    put_authentication_methods_200_response_inner:
      additionalProperties: {}
      description: The successfully created authentication method.
      example:
        public_key: public_key
        totp_secret: totp_secret
        key_id: key_id
        authentication_methods:
        - id: id
          type: totp
        - id: id
          type: totp
        name: name
        created_at: created_at
        phone_number: phone_number
        id: id
        type: phone
        email: email
        relying_party_identifier: relying_party_identifier
        preferred_authentication_method: voice
      properties:
        id:
          description: The ID of the newly created authentication method (automatically
            generated by the application)
          type: string
        type:
          $ref: '#/components/schemas/put_authentication_methods_200_response_inner_type'
        name:
          description: A human-readable label to identify the authentication method.
          type: string
        totp_secret:
          description: Base32 encoded secret for TOTP generation
          type: string
        phone_number:
          description: Applies to phone authentication methods only. The destination
            phone number used to send verification codes via text and voice.
          maxLength: 30
          minLength: 2
          type: string
        email:
          description: Applies to email authentication methods only. The email address
            used to send verification messages.
          type: string
        authentication_methods:
          items:
            $ref: '#/components/schemas/put_authentication_methods_200_response_inner_authentication_methods_inner'
          type: array
        preferred_authentication_method:
          $ref: '#/components/schemas/put_authentication_methods_200_response_inner_preferred_authentication_method'
        key_id:
          description: Applies to webauthn authenticators only. The id of the credential.
          type: string
        public_key:
          description: Applies to webauthn authenticators only. The public key.
          type: string
        relying_party_identifier:
          description: Applies to webauthn authenticators only. The relying party
            identifier.
          type: string
        created_at:
          description: Authentication method creation date
          type: string
      required:
      - type
      type: object
    post_authentication_methods_request_preferred_authentication_method:
      description: Preferred phone authentication method.
      enum:
      - voice
      - sms
      type: string
    post_authentication_methods_request:
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/put_authentication_methods_200_response_inner_type'
        name:
          description: A human-readable label to identify the authentication method.
          type: string
        totp_secret:
          description: Base32 encoded secret for TOTP generation.
          type: string
        phone_number:
          description: Applies to phone authentication methods only. The destination
            phone number used to send verification codes via text and voice.
          maxLength: 30
          minLength: 2
          type: string
        email:
          description: Applies to email authentication methods only. The email address
            used to send verification messages.
          type: string
        preferred_authentication_method:
          $ref: '#/components/schemas/post_authentication_methods_request_preferred_authentication_method'
        key_id:
          description: Applies to email webauthn authenticators only. The id of the
            credential.
          type: string
        public_key:
          description: Applies to email webauthn authenticators only. The public key.
          type: string
        relying_party_identifier:
          description: Applies to email webauthn authenticators only. The relying
            party identifier.
          type: string
      required:
      - type
      type: object
    post_authentication_methods_201_response:
      additionalProperties: false
      description: The successfully created authentication method.
      example:
        public_key: public_key
        totp_secret: totp_secret
        key_id: key_id
        authentication_methods:
        - id: id
          type: totp
        - id: id
          type: totp
        name: name
        created_at: created_at
        phone_number: phone_number
        id: id
        type: phone
        email: email
        relying_party_identifier: relying_party_identifier
        preferred_authentication_method: voice
      properties:
        id:
          description: The ID of the newly created authentication method (automatically
            generated by the application)
          type: string
        type:
          $ref: '#/components/schemas/put_authentication_methods_200_response_inner_type'
        name:
          description: A human-readable label to identify the authentication method.
          type: string
        totp_secret:
          description: Base32 encoded secret for TOTP generation
          type: string
        phone_number:
          description: Applies to phone authentication methods only. The destination
            phone number used to send verification codes via text and voice.
          maxLength: 30
          minLength: 2
          type: string
        email:
          description: Applies to email authentication methods only. The email address
            used to send verification messages.
          type: string
        authentication_methods:
          items:
            $ref: '#/components/schemas/put_authentication_methods_200_response_inner_authentication_methods_inner'
          type: array
        preferred_authentication_method:
          $ref: '#/components/schemas/put_authentication_methods_200_response_inner_preferred_authentication_method'
        key_id:
          description: Applies to webauthn authenticators only. The id of the credential.
          type: string
        public_key:
          description: Applies to webauthn authenticators only. The public key.
          type: string
        relying_party_identifier:
          description: Applies to webauthn authenticators only. The relying party
            identifier.
          type: string
        created_at:
          description: Authentication method creation date
          type: string
      required:
      - type
      type: object
    patch_authentication_methods_by_authentication_method_id_request:
      additionalProperties: false
      properties:
        name:
          description: A human-readable label to identify the authentication method.
          type: string
        preferred_authentication_method:
          $ref: '#/components/schemas/put_authentication_methods_200_response_inner_preferred_authentication_method'
      type: object
    post_identities_request_provider:
      default: twitter
      description: Identity provider of the secondary user account being linked.
      enum:
      - ad
      - adfs
      - amazon
      - apple
      - dropbox
      - bitbucket
      - aol
      - auth0-oidc
      - auth0
      - baidu
      - bitly
      - box
      - custom
      - daccount
      - dwolla
      - email
      - evernote-sandbox
      - evernote
      - exact
      - facebook
      - fitbit
      - flickr
      - github
      - google-apps
      - google-oauth2
      - instagram
      - ip
      - line
      - linkedin
      - miicard
      - oauth1
      - oauth2
      - office365
      - oidc
      - okta
      - paypal
      - paypal-sandbox
      - pingfederate
      - planningcenter
      - renren
      - salesforce-community
      - salesforce-sandbox
      - salesforce
      - samlp
      - sharepoint
      - shopify
      - sms
      - soundcloud
      - thecity-sandbox
      - thecity
      - thirtysevensignals
      - twitter
      - untappd
      - vkontakte
      - waad
      - weibo
      - windowslive
      - wordpress
      - yahoo
      - yammer
      - yandex
      type: string
    post_identities_request_user_id:
      description: user_id of the secondary user account being linked.
      oneOf:
      - default: abc
        minLength: 1
        type: string
      - default: 191919191
        type: integer
    post_identities_request:
      additionalProperties: false
      properties:
        provider:
          $ref: '#/components/schemas/post_identities_request_provider'
        connection_id:
          description: connection_id of the secondary user account being linked when
            more than one `auth0` database provider exists.
          type: string
        user_id:
          $ref: '#/components/schemas/post_identities_request_user_id'
        link_with:
          default: "{SECONDARY_ACCOUNT_JWT}"
          description: "JWT for the secondary account being linked. If sending this\
            \ parameter, `provider`, `user_id`, and `connection_id` must not be sent."
          type: string
      type: object
    delete_user_identity_by_user_id_provider_parameter:
      enum:
      - ad
      - adfs
      - amazon
      - apple
      - dropbox
      - bitbucket
      - aol
      - auth0-oidc
      - auth0
      - baidu
      - bitly
      - box
      - custom
      - daccount
      - dwolla
      - email
      - evernote-sandbox
      - evernote
      - exact
      - facebook
      - fitbit
      - flickr
      - github
      - google-apps
      - google-oauth2
      - instagram
      - ip
      - line
      - linkedin
      - miicard
      - oauth1
      - oauth2
      - office365
      - oidc
      - okta
      - paypal
      - paypal-sandbox
      - pingfederate
      - planningcenter
      - renren
      - salesforce-community
      - salesforce-sandbox
      - salesforce
      - samlp
      - sharepoint
      - shopify
      - sms
      - soundcloud
      - thecity-sandbox
      - thecity
      - thirtysevensignals
      - twitter
      - untappd
      - vkontakte
      - waad
      - weibo
      - windowslive
      - wordpress
      - yahoo
      - yammer
      - yandex
      type: string
    delete_user_identity_by_user_id_200_response_inner:
      additionalProperties: false
      example:
        access_token: access_token
        refresh_token: refresh_token
        isSocial: true
        user_id: 5457edea1b8f22891a000004
        provider: auth0
        connection: Initial-Connection
        profileData:
          email_verified: true
          phone_verified: true
          name: name
          phone_number: phone_number
          given_name: given_name
          family_name: family_name
          email: email
          username: johndoe
        access_token_secret: access_token_secret
      properties:
        connection:
          default: Initial-Connection
          description: The name of the connection for the identity.
          type: string
        user_id:
          default: 5457edea1b8f22891a000004
          description: The unique identifier for the user for the identity.
          type: string
        provider:
          default: auth0
          description: The type of identity provider.
          type: string
        isSocial:
          description: "<code>true</code> if the identity provider is a social provider,\
            \ <code>false</code>s otherwise"
          type: boolean
        access_token:
          description: IDP access token returned only if scope read:user_idp_tokens
            is defined
          type: string
        access_token_secret:
          description: IDP access token secret returned only if scope read:user_idp_tokens
            is defined.
          type: string
        refresh_token:
          description: IDP refresh token returned only if scope read:user_idp_tokens
            is defined.
          type: string
        profileData:
          $ref: '#/components/schemas/userProfile'
      required:
      - connection
      - provider
      - user_id
      type: object
    delete_multifactor_by_provider_provider_parameter:
      enum:
      - duo
      - google-authenticator
      type: string
    get_user_organizations_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/get_organizations_200_response_oneOf_inner'
        type: array
      - $ref: '#/components/schemas/get_organizations_200_response_oneOf'
    get_permissions_200_response_oneOf_inner:
      additionalProperties: false
      example:
        resource_server_identifier: resource_server_identifier
        sources: ""
        resource_server_name: resource_server_name
        description: description
        permission_name: permission_name
      properties:
        sources: {}
        resource_server_identifier:
          description: Resource server (API) identifier that this permission is for.
          type: string
        permission_name:
          description: Name of this permission.
          type: string
        resource_server_name:
          description: Resource server (API) name this permission is for.
          type: string
        description:
          description: Description of this permission.
          type: string
      type: object
    get_permissions_200_response_oneOf:
      additionalProperties: false
      properties:
        start:
          type: number
        limit:
          type: number
        total:
          type: number
        permissions:
          items:
            $ref: '#/components/schemas/get_permissions_200_response_oneOf_inner'
          type: array
      type: object
    get_permissions_200_response:
      oneOf:
      - items:
          $ref: '#/components/schemas/get_permissions_200_response_oneOf_inner'
        type: array
      - $ref: '#/components/schemas/get_permissions_200_response_oneOf'
    post_permissions_request:
      additionalProperties: false
      properties:
        permissions:
          description: List of permissions to add to this user.
          items:
            $ref: '#/components/schemas/post_role_permission_assignment_request_permissions_inner'
          type: array
      required:
      - permissions
      type: object
    delete_permissions_request:
      additionalProperties: false
      properties:
        permissions:
          description: List of permissions to remove from this user.
          items:
            $ref: '#/components/schemas/post_role_permission_assignment_request_permissions_inner'
          type: array
      required:
      - permissions
      type: object
    post_recovery_code_regeneration_200_response:
      additionalProperties: true
      example:
        recovery_code: recovery_code
      properties:
        recovery_code:
          description: New account recovery code.
          type: string
      type: object
    post_user_roles_request:
      additionalProperties: false
      properties:
        roles:
          description: List of roles IDs to associated with the user.
          items:
            minLength: 1
            type: string
          type: array
      required:
      - roles
      type: object
    delete_user_roles_request:
      additionalProperties: false
      properties:
        roles:
          description: List of roles IDs to remove from the user.
          items:
            minLength: 1
            type: string
          type: array
      required:
      - roles
      type: object
    get_refresh_tokens_for_user_200_response_sessions_inner_created_at:
      oneOf:
      - description: The date and time when the refresh token was created
        format: date-time
        type: string
      - additionalProperties: true
        description: The date and time when the refresh token was created
        type: object
    get_refresh_tokens_for_user_200_response_sessions_inner_idle_expires_at:
      oneOf:
      - description: The date and time when the refresh token will expire if idle
        format: date-time
        type: string
      - additionalProperties: true
        description: The date and time when the refresh token will expire if idle
        type: object
    get_refresh_tokens_for_user_200_response_sessions_inner_expires_at:
      oneOf:
      - description: The date and time when the refresh token will expire
        format: date-time
        type: string
      - additionalProperties: true
        description: The date and time when the refresh token will expire
        type: object
    get_refresh_tokens_for_user_200_response_sessions_inner:
      additionalProperties: true
      example:
        idle_expires_at: 2000-01-23T04:56:07.000+00:00
        rotating: true
        expires_at: 2000-01-23T04:56:07.000+00:00
        user_id: auth0|507f1f77bcf86cd799439020
        resource_servers:
        - audience: audience
          scopes: scopes
        - audience: audience
          scopes: scopes
        created_at: 2000-01-23T04:56:07.000+00:00
        session_id: session_id
        id: id
        client_id: client_id
      properties:
        id:
          description: The ID of the refresh token
          type: string
        user_id:
          default: auth0|507f1f77bcf86cd799439020
          description: ID of the user which can be used when interacting with other
            APIs.
          type: string
        created_at:
          $ref: '#/components/schemas/get_refresh_tokens_for_user_200_response_sessions_inner_created_at'
        idle_expires_at:
          $ref: '#/components/schemas/get_refresh_tokens_for_user_200_response_sessions_inner_idle_expires_at'
        expires_at:
          $ref: '#/components/schemas/get_refresh_tokens_for_user_200_response_sessions_inner_expires_at'
        client_id:
          description: ID of the client application granted with this refresh token
          type: string
        session_id:
          description: ID of the authenticated session used to obtain this refresh-token
          type: string
        rotating:
          description: True if the token is a rotating refresh token
          type: boolean
        resource_servers:
          description: A list of the resource server IDs associated to this refresh-token
            and their granted scopes
          items:
            $ref: '#/components/schemas/get_refresh_token_200_response_resource_servers_inner'
          type: array
      type: object
    get_refresh_tokens_for_user_200_response:
      additionalProperties: true
      example:
        sessions:
        - idle_expires_at: 2000-01-23T04:56:07.000+00:00
          rotating: true
          expires_at: 2000-01-23T04:56:07.000+00:00
          user_id: auth0|507f1f77bcf86cd799439020
          resource_servers:
          - audience: audience
            scopes: scopes
          - audience: audience
            scopes: scopes
          created_at: 2000-01-23T04:56:07.000+00:00
          session_id: session_id
          id: id
          client_id: client_id
        - idle_expires_at: 2000-01-23T04:56:07.000+00:00
          rotating: true
          expires_at: 2000-01-23T04:56:07.000+00:00
          user_id: auth0|507f1f77bcf86cd799439020
          resource_servers:
          - audience: audience
            scopes: scopes
          - audience: audience
            scopes: scopes
          created_at: 2000-01-23T04:56:07.000+00:00
          session_id: session_id
          id: id
          client_id: client_id
      properties:
        sessions:
          items:
            $ref: '#/components/schemas/get_refresh_tokens_for_user_200_response_sessions_inner'
          type: array
      type: object
    get_sessions_for_user_200_response_sessions_inner_created_at:
      oneOf:
      - description: The date and time when the session was created
        format: date-time
        type: string
      - additionalProperties: true
        description: The date and time when the session was created
        type: object
    get_sessions_for_user_200_response_sessions_inner_updated_at:
      oneOf:
      - description: The date and time when the session was last updated
        format: date-time
        type: string
      - additionalProperties: true
        description: The date and time when the session was last updated
        type: object
    get_sessions_for_user_200_response_sessions_inner_authenticated_at:
      oneOf:
      - description: The date and time when the session was last authenticated
        format: date-time
        type: string
      - additionalProperties: true
        description: The date and time when the session was last authenticated
        type: object
    get_sessions_for_user_200_response_sessions_inner_idle_expires_at:
      oneOf:
      - description: The date and time when the session will expire if idle
        format: date-time
        type: string
      - additionalProperties: true
        description: The date and time when the session will expire if idle
        type: object
    get_sessions_for_user_200_response_sessions_inner_expires_at:
      oneOf:
      - description: The date and time when the session will expire
        format: date-time
        type: string
      - additionalProperties: true
        description: The date and time when the session will expire
        type: object
    get_sessions_for_user_200_response_sessions_inner_device:
      additionalProperties: true
      description: Metadata related to the device used in the session
      example:
        last_ip: last_ip
        last_user_agent: last_user_agent
        initial_ip: initial_ip
        initial_asn: initial_asn
        last_asn: last_asn
      properties:
        initial_ip:
          description: First IP address associated with this session
          type: string
        initial_asn:
          description: First autonomous system number associated with this session
          type: string
        last_user_agent:
          description: Last user agent of the device from which this user logged in
          type: string
        last_ip:
          description: Last IP address from which this user logged in
          type: string
        last_asn:
          description: Last autonomous system number from which this user logged in
          type: string
      type: object
    get_sessions_for_user_200_response_sessions_inner_authentication_methods_inner_timestamp:
      oneOf:
      - description: Timestamp of when the signal was received
        format: date-time
        type: string
      - additionalProperties: true
        description: Timestamp of when the signal was received
        type: object
    get_sessions_for_user_200_response_sessions_inner_authentication_methods_inner:
      additionalProperties: true
      description: Authentication signal details
      example:
        name: name
        ^type$: ^type$
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          description: "One of: \"federated\", \"passkey\", \"pwd\", \"sms\", \"email\"\
            , \"mfa\", \"mock\" or a custom method denoted by a URL"
          type: string
        timestamp:
          $ref: '#/components/schemas/get_sessions_for_user_200_response_sessions_inner_authentication_methods_inner_timestamp'
        ^type$:
          description: A specific MFA factor. Only present when "name" is set to "mfa"
          type: string
      type: object
    get_sessions_for_user_200_response_sessions_inner_authentication:
      additionalProperties: true
      description: Details about authentication signals obtained during the login
        flow
      example:
        methods:
        - name: name
          ^type$: ^type$
          timestamp: 2000-01-23T04:56:07.000+00:00
        - name: name
          ^type$: ^type$
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        methods:
          description: Contains the authentication methods a user has completed during
            their session
          items:
            $ref: '#/components/schemas/get_sessions_for_user_200_response_sessions_inner_authentication_methods_inner'
          type: array
      type: object
    get_sessions_for_user_200_response_sessions_inner:
      additionalProperties: true
      example:
        idle_expires_at: 2000-01-23T04:56:07.000+00:00
        expires_at: 2000-01-23T04:56:07.000+00:00
        clients:
        - client_id: client_id
        - client_id: client_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        authenticated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        device:
          last_ip: last_ip
          last_user_agent: last_user_agent
          initial_ip: initial_ip
          initial_asn: initial_asn
          last_asn: last_asn
        authentication:
          methods:
          - name: name
            ^type$: ^type$
            timestamp: 2000-01-23T04:56:07.000+00:00
          - name: name
            ^type$: ^type$
            timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: The ID of the session
          type: string
        user_id:
          description: ID of the user which can be used when interacting with other
            APIs.
          type: string
        created_at:
          $ref: '#/components/schemas/get_sessions_for_user_200_response_sessions_inner_created_at'
        updated_at:
          $ref: '#/components/schemas/get_sessions_for_user_200_response_sessions_inner_updated_at'
        authenticated_at:
          $ref: '#/components/schemas/get_sessions_for_user_200_response_sessions_inner_authenticated_at'
        idle_expires_at:
          $ref: '#/components/schemas/get_sessions_for_user_200_response_sessions_inner_idle_expires_at'
        expires_at:
          $ref: '#/components/schemas/get_sessions_for_user_200_response_sessions_inner_expires_at'
        device:
          $ref: '#/components/schemas/get_sessions_for_user_200_response_sessions_inner_device'
        clients:
          description: List of client details for the session
          items:
            $ref: '#/components/schemas/get_session_200_response_clients_inner'
          type: array
        authentication:
          $ref: '#/components/schemas/get_sessions_for_user_200_response_sessions_inner_authentication'
      type: object
    get_sessions_for_user_200_response:
      additionalProperties: true
      example:
        sessions:
        - idle_expires_at: 2000-01-23T04:56:07.000+00:00
          expires_at: 2000-01-23T04:56:07.000+00:00
          clients:
          - client_id: client_id
          - client_id: client_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_id: user_id
          authenticated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          device:
            last_ip: last_ip
            last_user_agent: last_user_agent
            initial_ip: initial_ip
            initial_asn: initial_asn
            last_asn: last_asn
          authentication:
            methods:
            - name: name
              ^type$: ^type$
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              ^type$: ^type$
              timestamp: 2000-01-23T04:56:07.000+00:00
        - idle_expires_at: 2000-01-23T04:56:07.000+00:00
          expires_at: 2000-01-23T04:56:07.000+00:00
          clients:
          - client_id: client_id
          - client_id: client_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          user_id: user_id
          authenticated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
          device:
            last_ip: last_ip
            last_user_agent: last_user_agent
            initial_ip: initial_ip
            initial_asn: initial_asn
            last_asn: last_asn
          authentication:
            methods:
            - name: name
              ^type$: ^type$
              timestamp: 2000-01-23T04:56:07.000+00:00
            - name: name
              ^type$: ^type$
              timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        sessions:
          items:
            $ref: '#/components/schemas/get_sessions_for_user_200_response_sessions_inner'
          type: array
      type: object
    client_oidc_logout:
      additionalProperties: true
      description: Configuration for OIDC backchannel logout
      example:
        backchannel_logout_urls:
        - backchannel_logout_urls
        - backchannel_logout_urls
      properties:
        backchannel_logout_urls:
          description: Comma-separated list of URLs that are valid to call back from
            Auth0 for OIDC backchannel logout. Currently only one URL is allowed.
          items:
            type: string
          type: array
      type: object
    client_jwt_configuration_alg:
      default: HS256
      description: Algorithm used to sign JWTs. Can be `HS256` or `RS256`. `PS256`
        available via addon.
      enum:
      - HS256
      - RS256
      - PS256
      type: string
    client_jwt_configuration:
      additionalProperties: true
      description: Configuration related to JWTs for the client.
      example:
        lifetime_in_seconds: 0
        secret_encoded: true
        scopes:
          key: ""
        alg: HS256
      properties:
        lifetime_in_seconds:
          default: 36000
          description: Number of seconds the JWT will be valid for (affects `exp`
            claim).
          type: integer
        secret_encoded:
          default: true
          description: Whether the client secret is base64 encoded (true) or unencoded
            (false).
          type: boolean
        scopes:
          additionalProperties: true
          description: Configuration related to id token claims for the client.
          type: object
        alg:
          $ref: '#/components/schemas/client_jwt_configuration_alg'
      type: object
    client_signing_keys_inner:
      additionalProperties: true
      example:
        pkcs7: ""
        subject: ""
        cert: ""
      properties:
        pkcs7:
          default: ""
          description: Signing certificate public key and chain in PKCS#7 (.P7B) format.
          type: string
        cert:
          default: ""
          description: Signing certificate public key in X.590 (.CER) format.
          type: string
        subject:
          default: ""
          description: "Subject name for this certificate in the format `/CN={domain}`."
          type: string
      type: object
    client_encryption_key:
      additionalProperties: true
      description: Encryption used for WsFed responses with this client.
      example:
        subject: subject
        cert: cert
        pub: pub
      nullable: true
      properties:
        pub:
          description: Encryption Public RSA Key.
          type: string
        cert:
          description: Encryption certificate for public key in X.590 (.CER) format.
          type: string
        subject:
          description: "Encryption certificate name for this certificate in the format\
            \ `/CN={domain}`."
          type: string
      type: object
    client_addons_aws:
      additionalProperties: true
      description: AWS addon configuration.
      example:
        principal: principal
        role: role
        lifetime_in_seconds: 6
      properties:
        principal:
          description: "AWS principal ARN, e.g. `arn:aws:iam::010616021751:saml-provider/idpname`"
          type: string
        role:
          description: "AWS role ARN, e.g. `arn:aws:iam::010616021751:role/foo`"
          type: string
        lifetime_in_seconds:
          description: AWS token lifetime in seconds
          type: integer
      type: object
    client_addons_azure_blob:
      additionalProperties: true
      description: Azure Blob Storage addon configuration.
      example:
        blobName: blobName
        container_list: true
        storageAccessKey: storageAccessKey
        accountName: accountName
        blob_read: true
        container_read: true
        blob_delete: true
        signedIdentifier: signedIdentifier
        containerName: containerName
        container_delete: true
        expiration: 1
        container_write: true
        blob_write: true
      properties:
        accountName:
          description: Your Azure storage account name. Usually first segment in your
            Azure storage URL. e.g. `https://acme-org.blob.core.windows.net` would
            be the account name `acme-org`.
          type: string
        storageAccessKey:
          description: Access key associated with this storage account.
          type: string
        containerName:
          description: Container to request a token for. e.g. `my-container`.
          type: string
        blobName:
          description: Entity to request a token for. e.g. `my-blob`. If blank the
            computed SAS will apply to the entire storage container.
          type: string
        expiration:
          description: Expiration in minutes for the generated token (default of 5
            minutes).
          type: integer
        signedIdentifier:
          description: Shared access policy identifier defined in your storage account
            resource.
          type: string
        blob_read:
          description: "Indicates if the issued token has permission to read the content,\
            \ properties, metadata and block list. Use the blob as the source of a\
            \ copy operation."
          type: boolean
        blob_write:
          description: "Indicates if the issued token has permission to create or\
            \ write content, properties, metadata, or block list. Snapshot or lease\
            \ the blob. Resize the blob (page blob only). Use the blob as the destination\
            \ of a copy operation within the same account."
          type: boolean
        blob_delete:
          description: Indicates if the issued token has permission to delete the
            blob.
          type: boolean
        container_read:
          description: "Indicates if the issued token has permission to read the content,\
            \ properties, metadata or block list of any blob in the container. Use\
            \ any blob in the container as the source of a copy operation"
          type: boolean
        container_write:
          description: "Indicates that for any blob in the container if the issued\
            \ token has permission to create or write content, properties, metadata,\
            \ or block list. Snapshot or lease the blob. Resize the blob (page blob\
            \ only). Use the blob as the destination of a copy operation within the\
            \ same account."
          type: boolean
        container_delete:
          description: Indicates if issued token has permission to delete any blob
            in the container.
          type: boolean
        container_list:
          description: Indicates if the issued token has permission to list blobs
            in the container.
          type: boolean
      type: object
    client_addons_azure_sb:
      additionalProperties: true
      description: Azure Storage Bus addon configuration.
      example:
        entityPath: entityPath
        sasKey: sasKey
        namespace: namespace
        sasKeyName: sasKeyName
        expiration: 5
      properties:
        namespace:
          description: Your Azure Service Bus namespace. Usually the first segment
            of your Service Bus URL (e.g. `https://acme-org.servicebus.windows.net`
            would be `acme-org`).
          type: string
        sasKeyName:
          description: Your shared access policy name defined in your Service Bus
            entity.
          type: string
        sasKey:
          description: Primary Key associated with your shared access policy.
          type: string
        entityPath:
          description: Entity you want to request a token for. e.g. `my-queue`.'
          type: string
        expiration:
          description: Optional expiration in minutes for the generated token. Defaults
            to 5 minutes.
          type: integer
      type: object
    client_addons_rms:
      additionalProperties: true
      description: Active Directory Rights Management Service SSO configuration.
      example:
        url: url
      properties:
        url:
          description: "URL of your Rights Management Server. It can be internal or\
            \ external, but users will have to be able to reach it."
          type: string
      required:
      - url
      type: object
    client_addons_mscrm:
      additionalProperties: true
      description: Microsoft Dynamics CRM SSO configuration.
      example:
        url: url
      properties:
        url:
          description: Microsoft Dynamics CRM application URL.
          type: string
      required:
      - url
      type: object
    client_addons_slack:
      additionalProperties: true
      description: Slack team or workspace name usually first segment in your Slack
        URL. e.g. `https://acme-org.slack.com` would be `acme-org`.
      example:
        team: team
      properties:
        team:
          description: Slack team name.
          type: string
      required:
      - team
      type: object
    client_addons_sentry:
      additionalProperties: true
      description: Sentry SSO configuration.
      example:
        base_url: base_url
        org_slug: org_slug
      properties:
        org_slug:
          description: Generated slug for your Sentry organization. Found in your
            Sentry URL. e.g. `https://sentry.acme.com/acme-org/` would be `acme-org`.
          type: string
        base_url:
          description: "URL prefix only if running Sentry Community Edition, otherwise\
            \ leave should be blank."
          type: string
      type: object
    client_addons_echosign:
      additionalProperties: true
      description: Adobe EchoSign SSO configuration.
      example:
        domain: domain
      properties:
        domain:
          description: Your custom domain found in your EchoSign URL. e.g. `https://acme-org.echosign.com`
            would be `acme-org`.
          type: string
      type: object
    client_addons_egnyte:
      additionalProperties: true
      description: Egnyte SSO configuration.
      example:
        domain: domain
      properties:
        domain:
          description: Your custom domain found in your Egnyte URL. e.g. `https://acme-org.egnyte.com`
            would be `acme-org`.
          type: string
      type: object
    client_addons_firebase:
      additionalProperties: true
      description: Google Firebase addon configuration.
      example:
        lifetime_in_seconds: 5
        private_key_id: private_key_id
        client_email: client_email
        private_key: private_key
        secret: secret
      properties:
        secret:
          description: Google Firebase Secret. (SDK 2 only).
          type: string
        private_key_id:
          description: Optional ID of the private key to obtain kid header in the
            issued token (SDK v3+ tokens only).
          type: string
        private_key:
          description: Private Key for signing the token (SDK v3+ tokens only).
          type: string
        client_email:
          description: "ID of the Service Account you have created (shown as `client_email`\
            \ in the generated JSON file, SDK v3+ tokens only)."
          type: string
        lifetime_in_seconds:
          description: Optional expiration in seconds for the generated token. Defaults
            to 3600 seconds (SDK v3+ tokens only).
          type: integer
      type: object
    client_addons_newrelic:
      additionalProperties: true
      description: New Relic SSO configuration.
      example:
        account: account
      properties:
        account:
          description: Your New Relic Account ID found in your New Relic URL after
            the `/accounts/` path. e.g. `https://rpm.newrelic.com/accounts/123456/query`
            would be `123456`.
          type: string
      type: object
    client_addons_office365:
      additionalProperties: true
      description: Microsoft Office 365 SSO configuration.
      example:
        domain: domain
        connection: connection
      properties:
        domain:
          description: Your Office 365 domain name. e.g. `acme-org.com`.
          type: string
        connection:
          description: Optional Auth0 database connection for testing an already-configured
            Office 365 tenant.
          type: string
      type: object
    client_addons_salesforce:
      additionalProperties: true
      description: Salesforce SSO configuration.
      example:
        entity_id: entity_id
      properties:
        entity_id:
          description: Arbitrary logical URL that identifies the Saleforce resource.
            e.g. `https://acme-org.com`.
          type: string
      type: object
    client_addons_salesforce_api:
      additionalProperties: true
      description: Salesforce API addon configuration.
      example:
        principal: principal
        clientid: clientid
        community_url_section: community_url_section
        communityName: communityName
      properties:
        clientid:
          description: Consumer Key assigned by Salesforce to the Connected App.
          type: string
        principal:
          description: Name of the property in the user object that maps to a Salesforce
            username. e.g. `email`.
          type: string
        communityName:
          description: Community name.
          type: string
        community_url_section:
          description: Community url section.
          type: string
      type: object
    client_addons_salesforce_sandbox_api:
      additionalProperties: true
      description: Salesforce Sandbox addon configuration.
      example:
        principal: principal
        clientid: clientid
        community_url_section: community_url_section
        communityName: communityName
      properties:
        clientid:
          description: Consumer Key assigned by Salesforce to the Connected App.
          type: string
        principal:
          description: Name of the property in the user object that maps to a Salesforce
            username. e.g. `email`.
          type: string
        communityName:
          description: Community name.
          type: string
        community_url_section:
          description: Community url section.
          type: string
      type: object
    client_addons_samlp:
      additionalProperties: true
      description: SAML2 addon indicator (no configuration settings needed for SAML2
        addon).
      example:
        audience: audience
        authnContextClassRef: authnContextClassRef
        nameIdentifierProbes:
        - nameIdentifierProbes
        - nameIdentifierProbes
        destination: destination
        digestAlgorithm: digestAlgorithm
        signatureAlgorithm: signatureAlgorithm
        issuer: issuer
        passthroughClaimsWithNoMapping: true
        mapIdentities: true
        mappings:
          key: ""
        nameIdentifierFormat: nameIdentifierFormat
        mapUnknownClaimsAsIs: true
        recipient: recipient
        lifetimeInSeconds: 2
        createUpnClaim: true
        signResponse: true
      properties:
        mappings:
          additionalProperties: true
          type: object
        audience:
          type: string
        recipient:
          type: string
        createUpnClaim:
          type: boolean
        mapUnknownClaimsAsIs:
          type: boolean
        passthroughClaimsWithNoMapping:
          type: boolean
        mapIdentities:
          type: boolean
        signatureAlgorithm:
          type: string
        digestAlgorithm:
          type: string
        issuer:
          type: string
        destination:
          type: string
        lifetimeInSeconds:
          type: integer
        signResponse:
          type: boolean
        nameIdentifierFormat:
          type: string
        nameIdentifierProbes:
          items:
            minLength: 1
            type: string
          type: array
        authnContextClassRef:
          type: string
      type: object
    client_addons_layer:
      additionalProperties: true
      description: Layer addon configuration.
      example:
        principal: principal
        privateKey: privateKey
        providerId: providerId
        keyId: keyId
        expiration: 7
      properties:
        providerId:
          description: Provider ID of your Layer account
          type: string
        keyId:
          description: Authentication Key identifier used to sign the Layer token.
          type: string
        privateKey:
          description: Private key for signing the Layer token.
          type: string
        principal:
          description: Name of the property used as the unique user id in Layer. If
            not specified `user_id` is used.
          type: string
        expiration:
          description: Optional expiration in minutes for the generated token. Defaults
            to 5 minutes.
          type: integer
      required:
      - keyId
      - privateKey
      - providerId
      type: object
    client_addons_sap_api:
      additionalProperties: true
      description: SAP API addon configuration.
      example:
        clientid: clientid
        nameIdentifierFormat: nameIdentifierFormat
        servicePassword: servicePassword
        scope: scope
        tokenEndpointUrl: tokenEndpointUrl
        usernameAttribute: usernameAttribute
      properties:
        clientid:
          description: If activated in the OAuth 2.0 client configuration (transaction
            SOAUTH2) the SAML attribute client_id must be set and equal the client_id
            form parameter of the access token request.
          type: string
        usernameAttribute:
          description: Name of the property in the user object that maps to a SAP
            username. e.g. `email`.
          type: string
        tokenEndpointUrl:
          description: Your SAP OData server OAuth2 token endpoint URL.
          type: string
        scope:
          description: Requested scope for SAP APIs.
          type: string
        servicePassword:
          description: Service account password to use to authenticate API calls to
            the token endpoint.
          type: string
        nameIdentifierFormat:
          description: NameID element of the Subject which can be used to express
            the user's identity. Defaults to `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`.
          type: string
      type: object
    client_addons_sharepoint_external_url:
      description: External SharePoint application URLs if exposed to the Internet.
      oneOf:
      - items:
          type: string
        type: array
      - type: string
    client_addons_sharepoint:
      additionalProperties: true
      description: SharePoint SSO configuration.
      example:
        external_url:
        - client_addons_sharepoint_external_url
        - client_addons_sharepoint_external_url
        url: url
      properties:
        url:
          description: Internal SharePoint application URL.
          type: string
        external_url:
          $ref: '#/components/schemas/client_addons_sharepoint_external_url'
      type: object
    client_addons_springcm:
      additionalProperties: true
      description: SpringCM SSO configuration.
      example:
        acsurl: acsurl
      properties:
        acsurl:
          description: "SpringCM ACS URL, e.g. `https://na11.springcm.com/atlas/sso/SSOEndpoint.ashx`."
          type: string
      type: object
    client_addons_wams:
      additionalProperties: true
      description: Windows Azure Mobile Services addon configuration.
      example:
        masterkey: masterkey
      properties:
        masterkey:
          description: Your master key for Windows Azure Mobile Services.
          type: string
      type: object
    client_addons_zendesk:
      additionalProperties: true
      description: Zendesk SSO configuration.
      example:
        accountName: accountName
      properties:
        accountName:
          description: Zendesk account name usually first segment in your Zendesk
            URL. e.g. `https://acme-org.zendesk.com` would be `acme-org`.
          type: string
      type: object
    client_addons_zoom:
      additionalProperties: true
      description: Zoom SSO configuration.
      example:
        account: account
      properties:
        account:
          description: "Zoom account name usually first segment of your Zoom URL,\
            \ e.g. `https://acme-org.zoom.us` would be `acme-org`."
          type: string
      type: object
    client_addons_sso_integration:
      additionalProperties: true
      example:
        name: name
        version: version
      properties:
        name:
          description: SSO integration name
          type: string
        version:
          description: SSO integration version installed
          type: string
      type: object
    client_addons:
      additionalProperties: false
      description: Addons enabled for this client and their associated configurations.
      example:
        concur:
          key: ""
        wams:
          masterkey: masterkey
        box:
          key: ""
        sharepoint:
          external_url:
          - client_addons_sharepoint_external_url
          - client_addons_sharepoint_external_url
          url: url
        echosign:
          domain: domain
        mscrm:
          url: url
        newrelic:
          account: account
        layer:
          principal: principal
          privateKey: privateKey
          providerId: providerId
          keyId: keyId
          expiration: 7
        salesforce:
          entity_id: entity_id
        springcm:
          acsurl: acsurl
        salesforce_sandbox_api:
          principal: principal
          clientid: clientid
          community_url_section: community_url_section
          communityName: communityName
        oag: "{}"
        slack:
          team: team
        azure_sb:
          entityPath: entityPath
          sasKey: sasKey
          namespace: namespace
          sasKeyName: sasKeyName
          expiration: 5
        office365:
          domain: domain
          connection: connection
        rms:
          url: url
        sentry:
          base_url: base_url
          org_slug: org_slug
        samlp:
          audience: audience
          authnContextClassRef: authnContextClassRef
          nameIdentifierProbes:
          - nameIdentifierProbes
          - nameIdentifierProbes
          destination: destination
          digestAlgorithm: digestAlgorithm
          signatureAlgorithm: signatureAlgorithm
          issuer: issuer
          passthroughClaimsWithNoMapping: true
          mapIdentities: true
          mappings:
            key: ""
          nameIdentifierFormat: nameIdentifierFormat
          mapUnknownClaimsAsIs: true
          recipient: recipient
          lifetimeInSeconds: 2
          createUpnClaim: true
          signResponse: true
        egnyte:
          domain: domain
        zoom:
          account: account
        wsfed:
          key: ""
        firebase:
          lifetime_in_seconds: 5
          private_key_id: private_key_id
          client_email: client_email
          private_key: private_key
          secret: secret
        azure_blob:
          blobName: blobName
          container_list: true
          storageAccessKey: storageAccessKey
          accountName: accountName
          blob_read: true
          container_read: true
          blob_delete: true
          signedIdentifier: signedIdentifier
          containerName: containerName
          container_delete: true
          expiration: 1
          container_write: true
          blob_write: true
        zendesk:
          accountName: accountName
        salesforce_api:
          principal: principal
          clientid: clientid
          community_url_section: community_url_section
          communityName: communityName
        dropbox:
          key: ""
        sap_api:
          clientid: clientid
          nameIdentifierFormat: nameIdentifierFormat
          servicePassword: servicePassword
          scope: scope
          tokenEndpointUrl: tokenEndpointUrl
          usernameAttribute: usernameAttribute
        cloudbees:
          key: ""
        aws:
          principal: principal
          role: role
          lifetime_in_seconds: 6
        sso_integration:
          name: name
          version: version
      properties:
        aws:
          $ref: '#/components/schemas/client_addons_aws'
        azure_blob:
          $ref: '#/components/schemas/client_addons_azure_blob'
        azure_sb:
          $ref: '#/components/schemas/client_addons_azure_sb'
        rms:
          $ref: '#/components/schemas/client_addons_rms'
        mscrm:
          $ref: '#/components/schemas/client_addons_mscrm'
        slack:
          $ref: '#/components/schemas/client_addons_slack'
        sentry:
          $ref: '#/components/schemas/client_addons_sentry'
        box:
          additionalProperties: true
          description: Box SSO indicator (no configuration settings needed for Box
            SSO).
          type: object
        cloudbees:
          additionalProperties: true
          description: CloudBees SSO indicator (no configuration settings needed for
            CloudBees SSO).
          type: object
        concur:
          additionalProperties: true
          description: Concur SSO indicator (no configuration settings needed for
            Concur SSO).
          type: object
        dropbox:
          additionalProperties: true
          description: Dropbox SSO indicator (no configuration settings needed for
            Dropbox SSO).
          type: object
        echosign:
          $ref: '#/components/schemas/client_addons_echosign'
        egnyte:
          $ref: '#/components/schemas/client_addons_egnyte'
        firebase:
          $ref: '#/components/schemas/client_addons_firebase'
        newrelic:
          $ref: '#/components/schemas/client_addons_newrelic'
        office365:
          $ref: '#/components/schemas/client_addons_office365'
        salesforce:
          $ref: '#/components/schemas/client_addons_salesforce'
        salesforce_api:
          $ref: '#/components/schemas/client_addons_salesforce_api'
        salesforce_sandbox_api:
          $ref: '#/components/schemas/client_addons_salesforce_sandbox_api'
        samlp:
          $ref: '#/components/schemas/client_addons_samlp'
        layer:
          $ref: '#/components/schemas/client_addons_layer'
        sap_api:
          $ref: '#/components/schemas/client_addons_sap_api'
        sharepoint:
          $ref: '#/components/schemas/client_addons_sharepoint'
        springcm:
          $ref: '#/components/schemas/client_addons_springcm'
        wams:
          $ref: '#/components/schemas/client_addons_wams'
        wsfed:
          additionalProperties: true
          description: WS-Fed (WIF) addon indicator. Actual configuration is stored
            in `callback` and `client_aliases` properties on the client.
          type: object
        zendesk:
          $ref: '#/components/schemas/client_addons_zendesk'
        zoom:
          $ref: '#/components/schemas/client_addons_zoom'
        sso_integration:
          $ref: '#/components/schemas/client_addons_sso_integration'
        oag:
          additionalProperties: false
          description: Okta Access Gateway SSO configuration
          nullable: true
          properties: {}
          type: object
      type: object
    client_token_endpoint_auth_method:
      default: none
      description: "Defines the requested authentication method for the token endpoint.\
        \ Can be `none` (public client without a client secret), `client_secret_post`\
        \ (client uses HTTP POST parameters), or `client_secret_basic` (client uses\
        \ HTTP Basic)."
      enum:
      - none
      - client_secret_post
      - client_secret_basic
      type: string
    client_mobile_android:
      additionalProperties: true
      description: Android native app configuration.
      example:
        app_package_name: ""
        sha256_cert_fingerprints:
        - sha256_cert_fingerprints
        - sha256_cert_fingerprints
      properties:
        app_package_name:
          default: ""
          description: App package name found in AndroidManifest.xml.
          type: string
        sha256_cert_fingerprints:
          description: "SHA256 fingerprints of the app's signing certificate. Multiple\
            \ fingerprints can be used to support different versions of your app,\
            \ such as debug and production builds."
          items:
            minLength: 1
            type: string
          type: array
      type: object
    client_mobile_ios:
      additionalProperties: true
      description: iOS native app configuration.
      example:
        app_bundle_identifier: ""
        team_id: ""
      properties:
        team_id:
          default: ""
          description: Identifier assigned to the Apple account that signs and uploads
            the app to the store.
          type: string
        app_bundle_identifier:
          default: ""
          description: "Assigned by developer to the app as its unique identifier\
            \ inside the store. Usually this is a reverse domain plus the app name,\
            \ e.g. `com.you.MyApp`."
          type: string
      type: object
    client_mobile:
      additionalProperties: true
      description: Additional configuration for native mobile apps.
      example:
        android:
          app_package_name: ""
          sha256_cert_fingerprints:
          - sha256_cert_fingerprints
          - sha256_cert_fingerprints
        ios:
          app_bundle_identifier: ""
          team_id: ""
      properties:
        android:
          $ref: '#/components/schemas/client_mobile_android'
        ios:
          $ref: '#/components/schemas/client_mobile_ios'
      type: object
    client_native_social_login_apple:
      additionalProperties: false
      description: Native Social Login support for the Apple connection
      example:
        enabled: false
      nullable: true
      properties:
        enabled:
          default: false
          description: Determine whether or not to allow signing in natively using
            an Apple authorization code
          type: boolean
      type: object
    client_native_social_login_facebook:
      additionalProperties: false
      description: Native Social Login support for the Facebook connection
      example:
        enabled: false
      nullable: true
      properties:
        enabled:
          default: false
          description: Determine whether or not to allow signing in natively using
            Facebook
          type: boolean
      type: object
    client_native_social_login:
      additionalProperties: false
      description: Configure native social settings
      example:
        apple:
          enabled: false
        facebook:
          enabled: false
      nullable: true
      properties:
        apple:
          $ref: '#/components/schemas/client_native_social_login_apple'
        facebook:
          $ref: '#/components/schemas/client_native_social_login_facebook'
      type: object
    client_refresh_token_rotation_type:
      default: non-rotating
      description: "Refresh token rotation types, one of: rotating, non-rotating"
      enum:
      - rotating
      - non-rotating
      type: string
    client_refresh_token_expiration_type:
      default: non-expiring
      description: "Refresh token expiration types, one of: expiring, non-expiring"
      enum:
      - expiring
      - non-expiring
      type: string
    client_refresh_token:
      additionalProperties: false
      description: Refresh token configuration
      example:
        expiration_type: non-expiring
        token_lifetime: 3
        idle_token_lifetime: 2
        infinite_idle_token_lifetime: false
        infinite_token_lifetime: true
        rotation_type: non-rotating
        leeway: 9
      nullable: true
      properties:
        rotation_type:
          $ref: '#/components/schemas/client_refresh_token_rotation_type'
        expiration_type:
          $ref: '#/components/schemas/client_refresh_token_expiration_type'
        leeway:
          default: 0
          description: Period in seconds where the previous refresh token can be exchanged
            without triggering breach detection
          type: integer
        token_lifetime:
          description: Period (in seconds) for which refresh tokens will remain valid
          type: integer
        infinite_token_lifetime:
          description: Prevents tokens from having a set lifetime when `true` (takes
            precedence over `token_lifetime` values)
          type: boolean
        idle_token_lifetime:
          description: Period (in seconds) for which refresh tokens will remain valid
            without use
          type: integer
        infinite_idle_token_lifetime:
          default: false
          description: Prevents tokens from expiring without use when `true` (takes
            precedence over `idle_token_lifetime` values)
          type: boolean
      required:
      - expiration_type
      - rotation_type
      type: object
    client_organization_usage:
      default: deny
      description: "Defines how to proceed during an authentication transaction with\
        \ regards an organization. Can be `deny` (default), `allow` or `require`."
      enum:
      - deny
      - allow
      - require
      type: string
    client_organization_require_behavior:
      default: no_prompt
      description: "Defines how to proceed during an authentication transaction when\
        \ `client.organization_usage: 'require'`. Can be `no_prompt` (default), `pre_login_prompt`\
        \ or `post_login_prompt`. `post_login_prompt` requires `oidc_conformant: true`."
      enum:
      - no_prompt
      - pre_login_prompt
      - post_login_prompt
      type: string
    client_client_authentication_methods_private_key_jwt_credentials_inner:
      additionalProperties: false
      example:
        id: id
      properties:
        id:
          description: Credential ID
          format: credential-id
          type: string
      required:
      - id
      type: object
    client_client_authentication_methods_private_key_jwt:
      additionalProperties: false
      description: "Defines `private_key_jwt` client authentication method. If this\
        \ property is defined, the client is enabled to use the Private Key JWT authentication\
        \ method."
      example:
        credentials:
        - id: id
        - id: id
      properties:
        credentials:
          description: A list of unique and previously created credential IDs enabled
            on the client for Private Key JWT authentication.
          items:
            $ref: '#/components/schemas/client_client_authentication_methods_private_key_jwt_credentials_inner'
          type: array
      required:
      - credentials
      type: object
    client_client_authentication_methods_tls_client_auth:
      additionalProperties: false
      description: "Defines `tls_client_auth` client authentication method. If the\
        \ property is defined, the client is configured to use CA-based mTLS authentication\
        \ method."
      example:
        credentials:
        - id: id
        - id: id
      properties:
        credentials:
          description: A list of unique and previously created credential IDs enabled
            on the client for CA-based mTLS authentication.
          items:
            $ref: '#/components/schemas/client_client_authentication_methods_private_key_jwt_credentials_inner'
          type: array
      required:
      - credentials
      type: object
    client_client_authentication_methods_self_signed_tls_client_auth:
      additionalProperties: false
      description: "Defines `self_signed_tls_client_auth` client authentication method.\
        \ If the property is defined, the client is configured to use mTLS authentication\
        \ method utilizing self-signed certificate."
      example:
        credentials:
        - id: id
        - id: id
      properties:
        credentials:
          description: A list of unique and previously created credential IDs enabled
            on the client for mTLS authentication utilizing self-signed certificate.
          items:
            $ref: '#/components/schemas/client_client_authentication_methods_private_key_jwt_credentials_inner'
          type: array
      required:
      - credentials
      type: object
    client_client_authentication_methods:
      additionalProperties: false
      description: Defines client authentication methods.
      example:
        private_key_jwt:
          credentials:
          - id: id
          - id: id
        self_signed_tls_client_auth:
          credentials:
          - id: id
          - id: id
        tls_client_auth:
          credentials:
          - id: id
          - id: id
      nullable: true
      properties:
        private_key_jwt:
          $ref: '#/components/schemas/client_client_authentication_methods_private_key_jwt'
        tls_client_auth:
          $ref: '#/components/schemas/client_client_authentication_methods_tls_client_auth'
        self_signed_tls_client_auth:
          $ref: '#/components/schemas/client_client_authentication_methods_self_signed_tls_client_auth'
      type: object
    client_signed_request_object:
      additionalProperties: false
      description: JWT-secured Authorization Requests (JAR) settings.
      example:
        credentials:
        - id: id
        - id: id
        required: false
      properties:
        required:
          default: false
          description: Indicates whether the JAR requests are mandatory
          type: boolean
        credentials:
          items:
            $ref: '#/components/schemas/client_client_authentication_methods_private_key_jwt_credentials_inner'
          type: array
      type: object
    client_compliance_level:
      description: "Defines the compliance level for this client, which may restrict\
        \ it's capabilities"
      enum:
      - none
      - fapi1_adv_pkj_par
      - fapi1_adv_mtls_par
      - null
      nullable: true
      type: string
    clientCreate_oidc_logout:
      additionalProperties: false
      description: Configuration for OIDC backchannel logout
      properties:
        backchannel_logout_urls:
          description: Comma-separated list of URLs that are valid to call back from
            Auth0 for OIDC backchannel logout. Currently only one URL is allowed.
          items:
            type: string
          type: array
      required:
      - backchannel_logout_urls
      type: object
    clientCreate_token_endpoint_auth_method:
      description: "Defines the requested authentication method for the token endpoint.\
        \ Can be `none` (public client without a client secret), `client_secret_post`\
        \ (client uses HTTP POST parameters), or `client_secret_basic` (client uses\
        \ HTTP Basic)."
      enum:
      - none
      - client_secret_post
      - client_secret_basic
      type: string
    clientCreate_app_type:
      description: "Type of client used to determine which settings are applicable.\
        \ Can be `spa`, `native`, `non_interactive`, or `regular_web`."
      enum:
      - native
      - spa
      - regular_web
      - non_interactive
      - rms
      - box
      - cloudbees
      - concur
      - dropbox
      - mscrm
      - echosign
      - egnyte
      - newrelic
      - office365
      - salesforce
      - sentry
      - sharepoint
      - slack
      - springcm
      - zendesk
      - zoom
      - sso_integration
      - oag
      type: string
    clientCreate_jwt_configuration:
      additionalProperties: false
      description: Configuration related to JWTs for the client.
      properties:
        lifetime_in_seconds:
          description: Number of seconds the JWT will be valid for (affects `exp`
            claim).
          type: integer
        scopes:
          additionalProperties: true
          description: Configuration related to id token claims for the client.
          type: object
        alg:
          $ref: '#/components/schemas/client_jwt_configuration_alg'
      type: object
    clientCreate_encryption_key:
      additionalProperties: false
      description: Encryption used for WsFed responses with this client.
      properties:
        pub:
          description: Encryption Public RSA Key.
          minLength: 1
          type: string
        cert:
          description: Encryption certificate for public key in X.590 (.CER) format.
          minLength: 1
          type: string
        subject:
          description: "Encryption certificate name for this certificate in the format\
            \ `/CN={domain}`."
          minLength: 1
          type: string
      type: object
    clientCreate_mobile_android:
      additionalProperties: false
      description: Android native app configuration.
      properties:
        app_package_name:
          default: ""
          description: App package name found in AndroidManifest.xml.
          minLength: 1
          type: string
        sha256_cert_fingerprints:
          description: "SHA256 fingerprints of the app's signing certificate. Multiple\
            \ fingerprints can be used to support different versions of your app,\
            \ such as debug and production builds."
          items:
            minLength: 1
            type: string
          type: array
      type: object
    clientCreate_mobile_ios:
      additionalProperties: false
      description: Configuration related to iOS native apps
      properties:
        team_id:
          default: ""
          description: Identifier assigned to the account that signs and upload the
            app to the store
          minLength: 1
          type: string
        app_bundle_identifier:
          default: ""
          description: "Assigned by the developer to the app as its unique identifier\
            \ inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>"
          minLength: 1
          type: string
      type: object
    clientCreate_mobile:
      additionalProperties: false
      description: Additional configuration for native mobile apps.
      properties:
        android:
          $ref: '#/components/schemas/clientCreate_mobile_android'
        ios:
          $ref: '#/components/schemas/clientCreate_mobile_ios'
      type: object
    clientCreate_client_authentication_methods_private_key_jwt_credentials_inner_credential_type:
      default: public_key
      description: "Credential type. Supported types: public_key."
      enum:
      - public_key
      type: string
    clientCreate_client_authentication_methods_private_key_jwt_credentials_inner_alg:
      default: RS256
      description: "Algorithm which will be used with the credential. Can be one of\
        \ RS256, RS384, PS256. If not specified, RS256 will be used."
      enum:
      - RS256
      - RS384
      - PS256
      type: string
    clientCreate_client_authentication_methods_private_key_jwt_credentials_inner:
      additionalProperties: false
      properties:
        credential_type:
          $ref: '#/components/schemas/clientCreate_client_authentication_methods_private_key_jwt_credentials_inner_credential_type'
        name:
          default: ""
          description: Friendly name for a credential.
          maxLength: 128
          type: string
        pem:
          default: "-----BEGIN PUBLIC KEY-----\r\nMIIBIjANBg...\r\n-----END PUBLIC\
            \ KEY-----\r\n"
          description: PEM-formatted public key (SPKI and PKCS1) or X509 certificate.
            Must be JSON escaped.
          type: string
        alg:
          $ref: '#/components/schemas/clientCreate_client_authentication_methods_private_key_jwt_credentials_inner_alg'
        parse_expiry_from_cert:
          default: false
          description: "Parse expiry from x509 certificate. If true, attempts to parse\
            \ the expiry date from the provided PEM."
          type: boolean
        expires_at:
          default: 2023-02-07T12:40:17.807Z
          description: "The ISO 8601 formatted date representing the expiration of\
            \ the credential. If not specified (not recommended), the credential never\
            \ expires."
          format: date-time
          type: string
      required:
      - credential_type
      - pem
      type: object
    clientCreate_client_authentication_methods_private_key_jwt:
      additionalProperties: false
      description: "Defines `private_key_jwt` client authentication method. If this\
        \ property is defined, the client is enabled to use the Private Key JWT authentication\
        \ method."
      properties:
        credentials:
          description: Fully defined credentials that will be enabled on the client
            for Private Key JWT authentication.
          items:
            $ref: '#/components/schemas/clientCreate_client_authentication_methods_private_key_jwt_credentials_inner'
          type: array
      required:
      - credentials
      type: object
    clientCreate_client_authentication_methods_tls_client_auth_credentials_inner_credential_type:
      enum:
      - cert_subject_dn
      type: string
    clientCreate_client_authentication_methods_tls_client_auth_credentials_inner:
      additionalProperties: false
      properties:
        credential_type:
          $ref: '#/components/schemas/clientCreate_client_authentication_methods_tls_client_auth_credentials_inner_credential_type'
        name:
          type: string
        subject_dn:
          description: Subject Distinguished Name. Mutually exclusive with `pem` property.
          maxLength: 256
          minLength: 1
          type: string
        pem:
          default: "-----BEGIN CERTIFICATE-----\r\nMIIBIjANBg...\r\n-----END CERTIFICATE-----\r\
            \n"
          description: PEM-formatted X509 certificate. Must be JSON escaped. Mutually
            exclusive with `subject_dn` property.
          maxLength: 4096
          minLength: 1
          type: string
      type: object
    clientCreate_client_authentication_methods_tls_client_auth:
      additionalProperties: false
      description: "Defines `tls_client_auth` client authentication method. If the\
        \ property is defined, the client is configured to use CA-based mTLS authentication\
        \ method."
      properties:
        credentials:
          description: Fully defined credentials that will be enabled on the client
            for CA-based mTLS authentication.
          items:
            $ref: '#/components/schemas/clientCreate_client_authentication_methods_tls_client_auth_credentials_inner'
          type: array
      required:
      - credentials
      type: object
    clientCreate_client_authentication_methods_self_signed_tls_client_auth_credentials_inner_credential_type:
      enum:
      - x509_cert
      type: string
    clientCreate_client_authentication_methods_self_signed_tls_client_auth_credentials_inner:
      additionalProperties: false
      properties:
        credential_type:
          $ref: '#/components/schemas/clientCreate_client_authentication_methods_self_signed_tls_client_auth_credentials_inner_credential_type'
        name:
          type: string
        pem:
          default: "-----BEGIN CERTIFICATE-----\r\nMIIBIjANBg...\r\n-----END CERTIFICATE-----\r\
            \n"
          description: PEM-formatted X509 certificate. Must be JSON escaped.
          maxLength: 4096
          minLength: 1
          type: string
      required:
      - credential_type
      - pem
      type: object
    clientCreate_client_authentication_methods_self_signed_tls_client_auth:
      additionalProperties: false
      description: "Defines `self_signed_tls_client_auth` client authentication method.\
        \ If the property is defined, the client is configured to use mTLS authentication\
        \ method utilizing self-signed certificate."
      properties:
        credentials:
          description: Fully defined credentials that will be enabled on the client
            for mTLS authentication utilizing self-signed certificate.
          items:
            $ref: '#/components/schemas/clientCreate_client_authentication_methods_self_signed_tls_client_auth_credentials_inner'
          type: array
      required:
      - credentials
      type: object
    clientCreate_client_authentication_methods:
      additionalProperties: false
      description: Defines client authentication methods.
      properties:
        private_key_jwt:
          $ref: '#/components/schemas/clientCreate_client_authentication_methods_private_key_jwt'
        tls_client_auth:
          $ref: '#/components/schemas/clientCreate_client_authentication_methods_tls_client_auth'
        self_signed_tls_client_auth:
          $ref: '#/components/schemas/clientCreate_client_authentication_methods_self_signed_tls_client_auth'
      type: object
    clientCreate_signed_request_object:
      additionalProperties: false
      description: JWT-secured Authorization Requests (JAR) settings.
      properties:
        required:
          default: false
          description: Indicates whether the JAR requests are mandatory
          type: boolean
        credentials:
          items:
            $ref: '#/components/schemas/clientCreate_client_authentication_methods_private_key_jwt_credentials_inner'
          type: array
      type: object
    clientUpdate_oidc_logout:
      additionalProperties: false
      description: Configuration for OIDC backchannel logout
      nullable: true
      properties:
        backchannel_logout_urls:
          description: Comma-separated list of URLs that are valid to call back from
            Auth0 for OIDC backchannel logout. Currently only one URL is allowed.
          items:
            type: string
          type: array
      type: object
    clientUpdate_jwt_configuration:
      additionalProperties: false
      description: An object that holds settings related to how JWTs are created
      nullable: true
      properties:
        lifetime_in_seconds:
          description: The amount of time (in seconds) that the token will be valid
            after being issued
          type: integer
        scopes:
          additionalProperties: true
          type: object
        alg:
          $ref: '#/components/schemas/client_jwt_configuration_alg'
      type: object
    clientUpdate_encryption_key:
      additionalProperties: false
      description: The client's encryption key
      nullable: true
      properties:
        pub:
          description: Encryption public key
          minLength: 1
          type: string
        cert:
          description: Encryption certificate
          minLength: 1
          type: string
        subject:
          description: Certificate subject
          minLength: 1
          type: string
      type: object
    clientUpdate_token_endpoint_auth_method:
      description: "Defines the requested authentication method for the token endpoint.\
        \ Possible values are 'none' (public client without a client secret), 'client_secret_post'\
        \ (client uses HTTP POST parameters) or 'client_secret_basic' (client uses\
        \ HTTP Basic)"
      enum:
      - none
      - client_secret_post
      - client_secret_basic
      - null
      nullable: true
      type: string
    clientUpdate_app_type:
      description: The type of application this client represents
      enum:
      - native
      - spa
      - regular_web
      - non_interactive
      - rms
      - box
      - cloudbees
      - concur
      - dropbox
      - mscrm
      - echosign
      - egnyte
      - newrelic
      - office365
      - salesforce
      - sentry
      - sharepoint
      - slack
      - springcm
      - zendesk
      - zoom
      - sso_integration
      - oag
      type: string
    clientUpdate_addons:
      additionalProperties: false
      description: Addons enabled for this client and their associated configurations.
      nullable: true
      properties:
        aws:
          $ref: '#/components/schemas/client_addons_aws'
        azure_blob:
          $ref: '#/components/schemas/client_addons_azure_blob'
        azure_sb:
          $ref: '#/components/schemas/client_addons_azure_sb'
        rms:
          $ref: '#/components/schemas/client_addons_rms'
        mscrm:
          $ref: '#/components/schemas/client_addons_mscrm'
        slack:
          $ref: '#/components/schemas/client_addons_slack'
        sentry:
          $ref: '#/components/schemas/client_addons_sentry'
        box:
          additionalProperties: true
          description: Box SSO indicator (no configuration settings needed for Box
            SSO).
          type: object
        cloudbees:
          additionalProperties: true
          description: CloudBees SSO indicator (no configuration settings needed for
            CloudBees SSO).
          type: object
        concur:
          additionalProperties: true
          description: Concur SSO indicator (no configuration settings needed for
            Concur SSO).
          type: object
        dropbox:
          additionalProperties: true
          description: Dropbox SSO indicator (no configuration settings needed for
            Dropbox SSO).
          type: object
        echosign:
          $ref: '#/components/schemas/client_addons_echosign'
        egnyte:
          $ref: '#/components/schemas/client_addons_egnyte'
        firebase:
          $ref: '#/components/schemas/client_addons_firebase'
        newrelic:
          $ref: '#/components/schemas/client_addons_newrelic'
        office365:
          $ref: '#/components/schemas/client_addons_office365'
        salesforce:
          $ref: '#/components/schemas/client_addons_salesforce'
        salesforce_api:
          $ref: '#/components/schemas/client_addons_salesforce_api'
        salesforce_sandbox_api:
          $ref: '#/components/schemas/client_addons_salesforce_sandbox_api'
        samlp:
          $ref: '#/components/schemas/client_addons_samlp'
        layer:
          $ref: '#/components/schemas/client_addons_layer'
        sap_api:
          $ref: '#/components/schemas/client_addons_sap_api'
        sharepoint:
          $ref: '#/components/schemas/client_addons_sharepoint'
        springcm:
          $ref: '#/components/schemas/client_addons_springcm'
        wams:
          $ref: '#/components/schemas/client_addons_wams'
        wsfed:
          additionalProperties: true
          description: WS-Fed (WIF) addon indicator. Actual configuration is stored
            in `callback` and `client_aliases` properties on the client.
          type: object
        zendesk:
          $ref: '#/components/schemas/client_addons_zendesk'
        zoom:
          $ref: '#/components/schemas/client_addons_zoom'
        sso_integration:
          $ref: '#/components/schemas/client_addons_sso_integration'
        oag:
          additionalProperties: false
          description: Okta Access Gateway SSO configuration
          nullable: true
          properties: {}
          type: object
      type: object
    clientUpdate_mobile_android:
      additionalProperties: false
      description: Configuration related to Android native apps
      nullable: true
      properties:
        app_package_name:
          default: ""
          description: Application package name found in <code>AndroidManifest.xml</code>
          minLength: 1
          type: string
        sha256_cert_fingerprints:
          description: "The SHA256 fingerprints of your app's signing certificate.\
            \ Multiple fingerprints can be used to support different versions of your\
            \ app, such as debug and production builds"
          items:
            minLength: 1
            type: string
          type: array
      type: object
    clientUpdate_mobile_ios:
      additionalProperties: false
      description: Configuration related to iOS native apps
      nullable: true
      properties:
        team_id:
          default: ""
          description: Identifier assigned to the account that signs and upload the
            app to the store
          minLength: 1
          type: string
        app_bundle_identifier:
          default: ""
          description: "Assigned by the developer to the app as its unique identifier\
            \ inside the store, usually is a reverse domain plus the app name: <code>com.you.MyApp</code>"
          minLength: 1
          type: string
      type: object
    clientUpdate_mobile:
      additionalProperties: false
      description: Configuration related to native mobile apps
      nullable: true
      properties:
        android:
          $ref: '#/components/schemas/clientUpdate_mobile_android'
        ios:
          $ref: '#/components/schemas/clientUpdate_mobile_ios'
      type: object
    clientUpdate_signed_request_object:
      additionalProperties: false
      description: JWT-secured Authorization Requests (JAR) settings.
      nullable: true
      properties:
        required:
          default: false
          description: Indicates whether the JAR requests are mandatory
          type: boolean
        credentials:
          items:
            $ref: '#/components/schemas/client_client_authentication_methods_private_key_jwt_credentials_inner'
          type: array
      type: object
    connectionCreate_strategy:
      description: The identity provider identifier for the connection
      enum:
      - ad
      - adfs
      - amazon
      - apple
      - dropbox
      - bitbucket
      - aol
      - auth0-oidc
      - auth0
      - baidu
      - bitly
      - box
      - custom
      - daccount
      - dwolla
      - email
      - evernote-sandbox
      - evernote
      - exact
      - facebook
      - fitbit
      - flickr
      - github
      - google-apps
      - google-oauth2
      - instagram
      - ip
      - line
      - linkedin
      - miicard
      - oauth1
      - oauth2
      - office365
      - oidc
      - okta
      - paypal
      - paypal-sandbox
      - pingfederate
      - planningcenter
      - renren
      - salesforce-community
      - salesforce-sandbox
      - salesforce
      - samlp
      - sharepoint
      - shopify
      - sms
      - soundcloud
      - thecity-sandbox
      - thecity
      - thirtysevensignals
      - twitter
      - untappd
      - vkontakte
      - waad
      - weibo
      - windowslive
      - wordpress
      - yahoo
      - yammer
      - yandex
      type: string
    connectionCreate_options_validation_username:
      additionalProperties: false
      nullable: true
      properties:
        min:
          type: integer
        max:
          type: integer
      required:
      - max
      - min
      type: object
    connectionCreate_options_validation:
      additionalProperties: false
      description: Options for validation
      nullable: true
      properties:
        username:
          $ref: '#/components/schemas/connectionCreate_options_validation_username'
      type: object
    connectionCreate_options_customScripts:
      additionalProperties: true
      description: A map of scripts used to integrate with a custom database.
      properties:
        login:
          minLength: 1
          type: string
        get_user:
          minLength: 1
          type: string
        delete:
          minLength: 1
          type: string
        change_password:
          minLength: 1
          type: string
        verify:
          minLength: 1
          type: string
        create:
          minLength: 1
          type: string
      type: object
    connectionCreate_options_authentication_methods_password:
      additionalProperties: false
      description: Password authentication enablement
      properties:
        enabled:
          description: Determines whether passwords are enabled
          type: boolean
      type: object
    connectionCreate_options_authentication_methods_passkey:
      additionalProperties: false
      description: Passkey authentication enablement
      properties:
        enabled:
          description: Determines whether passkeys are enabled
          type: boolean
      type: object
    connectionCreate_options_authentication_methods:
      additionalProperties: false
      description: Options for enabling authentication methods.
      nullable: true
      properties:
        password:
          $ref: '#/components/schemas/connectionCreate_options_authentication_methods_password'
        passkey:
          $ref: '#/components/schemas/connectionCreate_options_authentication_methods_passkey'
      type: object
    connectionCreate_options_passkey_options_challenge_ui:
      description: Controls the UI used to challenge the user for their passkey.
      enum:
      - both
      - autofill
      - button
      type: string
    connectionCreate_options_passkey_options:
      additionalProperties: false
      description: Options for the passkey authentication method
      nullable: true
      properties:
        challenge_ui:
          $ref: '#/components/schemas/connectionCreate_options_passkey_options_challenge_ui'
        progressive_enrollment_enabled:
          description: Enables or disables progressive enrollment of passkeys for
            the connection.
          type: boolean
        local_enrollment_enabled:
          description: Enables or disables enrollment prompt for local passkey when
            user authenticates using a cross-device passkey for the connection.
          type: boolean
      type: object
    connectionCreate_options_passwordPolicy:
      description: Password strength level
      enum:
      - none
      - low
      - fair
      - good
      - excellent
      - null
      nullable: true
      type: string
    connectionCreate_options_password_complexity_options:
      additionalProperties: false
      description: Password complexity options
      nullable: true
      properties:
        min_length:
          description: Minimum password length
          type: integer
      type: object
    connectionCreate_options_password_history:
      additionalProperties: false
      description: Options for password history policy
      nullable: true
      properties:
        enable:
          type: boolean
        size:
          type: integer
      required:
      - enable
      type: object
    connectionCreate_options_password_no_personal_info:
      additionalProperties: false
      description: Options for password expiration policy
      nullable: true
      properties:
        enable:
          type: boolean
      required:
      - enable
      type: object
    connectionCreate_options_password_dictionary:
      additionalProperties: false
      description: Options for password dictionary policy
      nullable: true
      properties:
        enable:
          type: boolean
        dictionary:
          description: Custom Password Dictionary. An array of up to 200 entries.
          items:
            description: Custom Password Dictionary entry. 50 characters max.
            maxLength: 50
            type: string
          type: array
      required:
      - enable
      type: object
    connectionCreate_options_set_user_root_attributes:
      default: on_each_login
      description: "Determines whether the 'name', 'given_name', 'family_name', 'nickname',\
        \ and 'picture' attributes can be independently updated when using an external\
        \ IdP. Possible values are 'on_each_login' (default value, it configures the\
        \ connection to automatically update the root attributes from the external\
        \ IdP with each user login. When this setting is used, root attributes cannot\
        \ be independently updated), 'on_first_login' (configures the connection to\
        \ only set the root attributes on first login, allowing them to be independently\
        \ updated thereafter)"
      enum:
      - on_each_login
      - on_first_login
      type: string
    connectionCreate_options_gateway_authentication:
      additionalProperties: true
      description: Token-based authentication settings to be applied when connection
        is using an sms strategy.
      nullable: true
      properties:
        method:
          description: The Authorization header type.
          type: string
        subject:
          description: The subject to be added to the JWT payload.
          type: string
        audience:
          description: The audience to be added to the JWT payload.
          type: string
        secret:
          description: The secret to be used for signing tokens.
          type: string
        secret_base64_encoded:
          description: Set to true if the provided secret is base64 encoded.
          type: boolean
      required:
      - audience
      - method
      - secret
      type: object
    connectionCreate_options:
      additionalProperties: true
      description: The connection's options (depend on the connection strategy)
      properties:
        validation:
          $ref: '#/components/schemas/connectionCreate_options_validation'
        non_persistent_attrs:
          description: An array of user fields that should not be stored in the Auth0
            database (https://manage.local.dev.auth0.com/docs/security/data-security/denylist)
          items:
            type: string
          type: array
        enable_script_context:
          type: boolean
        enabledDatabaseCustomization:
          description: Set to true to use a legacy user store
          type: boolean
        import_mode:
          description: Enable this if you have a legacy user store and you want to
            gradually migrate those users to the Auth0 user store
          type: boolean
        customScripts:
          $ref: '#/components/schemas/connectionCreate_options_customScripts'
        authentication_methods:
          $ref: '#/components/schemas/connectionCreate_options_authentication_methods'
        passkey_options:
          $ref: '#/components/schemas/connectionCreate_options_passkey_options'
        passwordPolicy:
          $ref: '#/components/schemas/connectionCreate_options_passwordPolicy'
        password_complexity_options:
          $ref: '#/components/schemas/connectionCreate_options_password_complexity_options'
        password_history:
          $ref: '#/components/schemas/connectionCreate_options_password_history'
        password_no_personal_info:
          $ref: '#/components/schemas/connectionCreate_options_password_no_personal_info'
        password_dictionary:
          $ref: '#/components/schemas/connectionCreate_options_password_dictionary'
        api_enable_users:
          type: boolean
        basic_profile:
          type: boolean
        ext_admin:
          type: boolean
        ext_is_suspended:
          type: boolean
        ext_agreed_terms:
          type: boolean
        ext_groups:
          type: boolean
        ext_assigned_plans:
          type: boolean
        ext_profile:
          type: boolean
        disable_self_service_change_password:
          type: boolean
        upstream_params:
          additionalProperties: true
          description: Options for adding parameters in the request to the upstream
            IdP
          nullable: true
          type: object
        set_user_root_attributes:
          $ref: '#/components/schemas/connectionCreate_options_set_user_root_attributes'
        gateway_authentication:
          $ref: '#/components/schemas/connectionCreate_options_gateway_authentication'
      type: object
    connectionUpdate_options:
      additionalProperties: true
      description: The connection's options (depend on the connection strategy)
      nullable: true
      properties:
        validation:
          $ref: '#/components/schemas/connectionCreate_options_validation'
        non_persistent_attrs:
          description: An array of user fields that should not be stored in the Auth0
            database (https://manage.local.dev.auth0.com/docs/security/data-security/denylist)
          items:
            type: string
          type: array
        enable_script_context:
          type: boolean
        enabledDatabaseCustomization:
          description: Set to true to use a legacy user store
          type: boolean
        import_mode:
          description: Enable this if you have a legacy user store and you want to
            gradually migrate those users to the Auth0 user store
          type: boolean
        customScripts:
          $ref: '#/components/schemas/connectionCreate_options_customScripts'
        authentication_methods:
          $ref: '#/components/schemas/connectionCreate_options_authentication_methods'
        passkey_options:
          $ref: '#/components/schemas/connectionCreate_options_passkey_options'
        passwordPolicy:
          $ref: '#/components/schemas/connectionCreate_options_passwordPolicy'
        password_complexity_options:
          $ref: '#/components/schemas/connectionCreate_options_password_complexity_options'
        password_history:
          $ref: '#/components/schemas/connectionCreate_options_password_history'
        password_no_personal_info:
          $ref: '#/components/schemas/connectionCreate_options_password_no_personal_info'
        password_dictionary:
          $ref: '#/components/schemas/connectionCreate_options_password_dictionary'
        api_enable_users:
          type: boolean
        basic_profile:
          type: boolean
        ext_admin:
          type: boolean
        ext_is_suspended:
          type: boolean
        ext_agreed_terms:
          type: boolean
        ext_groups:
          type: boolean
        ext_assigned_plans:
          type: boolean
        ext_profile:
          type: boolean
        disable_self_service_change_password:
          type: boolean
        upstream_params:
          additionalProperties: true
          description: Options for adding parameters in the request to the upstream
            IdP
          nullable: true
          type: object
        set_user_root_attributes:
          $ref: '#/components/schemas/connectionCreate_options_set_user_root_attributes'
        gateway_authentication:
          $ref: '#/components/schemas/connectionCreate_options_gateway_authentication'
      type: object
    deviceCredential_type:
      default: public_key
      description: "Type of credential. Can be `public_key`, `refresh_token`, or `rotating_refresh_token`."
      enum:
      - public_key
      - refresh_token
      - rotating_refresh_token
      type: string
    deviceCredentialCreate_type:
      description: Type of credential. Must be `public_key`.
      enum:
      - public_key
      type: string
    emailProvider_credentials:
      additionalProperties: false
      description: Credentials required to use the provider.
      example:
        smtp_port: 0
        smtp_user: smtp_user
        api_user: api_user
        smtp_host: smtp_host
        region: region
      properties:
        api_user:
          description: API User.
          type: string
        region:
          description: AWS or SparkPost region.
          type: string
        smtp_host:
          description: SMTP host.
          type: string
        smtp_port:
          description: SMTP port.
          type: integer
        smtp_user:
          description: SMTP username.
          type: string
      type: object
    emailProviderUpdate_name:
      description: "Name of the email provider. Can be `mailgun`, `mandrill`, `sendgrid`,\
        \ `ses`, `sparkpost`, `smtp`, `azure_cs`, `ms365`, or `custom`."
      enum:
      - mailgun
      - mandrill
      - sendgrid
      - ses
      - sparkpost
      - smtp
      - azure_cs
      - ms365
      - custom
      type: string
    emailProviderUpdate_credentials_anyOf:
      additionalProperties: false
      properties:
        api_key:
          description: API Key
          minLength: 1
          type: string
      required:
      - api_key
      type: object
    emailProviderUpdate_credentials_anyOf_1:
      additionalProperties: false
      properties:
        accessKeyId:
          description: AWS Access Key ID.
          minLength: 1
          type: string
        secretAccessKey:
          description: AWS Secret Access Key.
          minLength: 1
          type: string
        region:
          description: AWS region.
          minLength: 1
          type: string
      type: object
    emailProviderUpdate_credentials_anyOf_2_smtp_host:
      anyOf:
      - format: hostname-rfc2181
        type: string
      - format: ipv4
        type: string
      - format: ipv6
        type: string
      description: SMTP host.
      type: string
    emailProviderUpdate_credentials_anyOf_2:
      additionalProperties: false
      properties:
        smtp_host:
          $ref: '#/components/schemas/emailProviderUpdate_credentials_anyOf_2_smtp_host'
        smtp_port:
          description: SMTP port.
          type: integer
        smtp_user:
          description: SMTP username.
          minLength: 1
          type: string
        smtp_pass:
          description: SMTP password.
          minLength: 1
          type: string
      type: object
    emailProviderUpdate_credentials_anyOf_3_region:
      description: "Set to <code>eu</code> to use SparkPost service hosted in Western\
        \ Europe. To use SparkPost hosted in North America, set it to <code>null</code>."
      enum:
      - eu
      - null
      type: string
    emailProviderUpdate_credentials_anyOf_3:
      additionalProperties: false
      properties:
        api_key:
          description: API Key
          minLength: 1
          type: string
        region:
          $ref: '#/components/schemas/emailProviderUpdate_credentials_anyOf_3_region'
      type: object
    emailProviderUpdate_credentials_anyOf_4_region:
      description: "Set to <code>eu</code> if your domain is provisioned to use Mailgun's\
        \ EU region. Otherwise, set to <code>null</code>."
      enum:
      - eu
      - null
      type: string
    emailProviderUpdate_credentials_anyOf_4:
      additionalProperties: false
      properties:
        api_key:
          description: API Key
          minLength: 1
          type: string
        domain:
          description: Domain
          minLength: 4
          type: string
        region:
          $ref: '#/components/schemas/emailProviderUpdate_credentials_anyOf_4_region'
      type: object
    emailProviderUpdate_credentials_anyOf_5:
      additionalProperties: false
      properties:
        connectionString:
          description: Azure Communication Services Connection String.
          minLength: 1
          type: string
      type: object
    emailProviderUpdate_credentials_anyOf_6:
      additionalProperties: false
      properties:
        tenantId:
          description: Microsoft 365 Tenant ID.
          minLength: 1
          type: string
        clientId:
          description: Microsoft 365 Client ID.
          minLength: 1
          type: string
        clientSecret:
          description: Microsoft 365 Client Secret.
          minLength: 1
          type: string
      type: object
    emailProviderUpdate_credentials:
      anyOf:
      - $ref: '#/components/schemas/emailProviderUpdate_credentials_anyOf'
      - $ref: '#/components/schemas/emailProviderUpdate_credentials_anyOf_1'
      - $ref: '#/components/schemas/emailProviderUpdate_credentials_anyOf_2'
      - $ref: '#/components/schemas/emailProviderUpdate_credentials_anyOf_3'
      - $ref: '#/components/schemas/emailProviderUpdate_credentials_anyOf_4'
      - $ref: '#/components/schemas/emailProviderUpdate_credentials_anyOf_5'
      - $ref: '#/components/schemas/emailProviderUpdate_credentials_anyOf_6'
      - additionalProperties: false
        properties: {}
        type: object
      description: Credentials required to use the provider.
      type: object
    emailProviderCreate_name:
      default: mandrill
      description: "Name of the email provider. Can be `mailgun`, `mandrill`, `sendgrid`,\
        \ `ses`, `sparkpost`, `smtp`, `azure_cs`, `ms365`, or `custom`."
      enum:
      - mailgun
      - mandrill
      - sendgrid
      - ses
      - sparkpost
      - smtp
      - azure_cs
      - ms365
      - custom
      type: string
    emailProviderCreate_credentials_anyOf:
      additionalProperties: false
      properties:
        accessKeyId:
          description: AWS Access Key ID.
          minLength: 1
          type: string
        secretAccessKey:
          description: AWS Secret Access Key.
          minLength: 1
          type: string
        region:
          description: AWS region.
          minLength: 1
          type: string
      required:
      - accessKeyId
      - region
      - secretAccessKey
      type: object
    emailProviderCreate_credentials_anyOf_1:
      additionalProperties: false
      properties:
        smtp_host:
          $ref: '#/components/schemas/emailProviderUpdate_credentials_anyOf_2_smtp_host'
        smtp_port:
          description: SMTP port.
          type: integer
        smtp_user:
          description: SMTP username.
          minLength: 1
          type: string
        smtp_pass:
          description: SMTP password.
          minLength: 1
          type: string
      required:
      - smtp_host
      - smtp_pass
      - smtp_port
      - smtp_user
      type: object
    emailProviderCreate_credentials_anyOf_2:
      additionalProperties: false
      properties:
        api_key:
          description: API Key
          minLength: 1
          type: string
        region:
          $ref: '#/components/schemas/emailProviderUpdate_credentials_anyOf_3_region'
      required:
      - api_key
      type: object
    emailProviderCreate_credentials_anyOf_3:
      additionalProperties: false
      properties:
        api_key:
          description: API Key
          minLength: 1
          type: string
        domain:
          description: Domain
          minLength: 4
          type: string
        region:
          $ref: '#/components/schemas/emailProviderUpdate_credentials_anyOf_4_region'
      required:
      - api_key
      - domain
      type: object
    emailProviderCreate_credentials_anyOf_4:
      additionalProperties: false
      properties:
        connectionString:
          description: Azure Communication Services Connection String.
          minLength: 1
          type: string
      required:
      - connectionString
      type: object
    emailProviderCreate_credentials_anyOf_5:
      additionalProperties: false
      properties:
        tenantId:
          description: Microsoft 365 Tenant ID.
          minLength: 1
          type: string
        clientId:
          description: Microsoft 365 Client ID.
          minLength: 1
          type: string
        clientSecret:
          description: Microsoft 365 Client Secret.
          minLength: 1
          type: string
      required:
      - clientId
      - clientSecret
      - tenantId
      type: object
    emailProviderCreate_credentials:
      anyOf:
      - $ref: '#/components/schemas/emailProviderUpdate_credentials_anyOf'
      - $ref: '#/components/schemas/emailProviderCreate_credentials_anyOf'
      - $ref: '#/components/schemas/emailProviderCreate_credentials_anyOf_1'
      - $ref: '#/components/schemas/emailProviderCreate_credentials_anyOf_2'
      - $ref: '#/components/schemas/emailProviderCreate_credentials_anyOf_3'
      - $ref: '#/components/schemas/emailProviderCreate_credentials_anyOf_4'
      - $ref: '#/components/schemas/emailProviderCreate_credentials_anyOf_5'
      - additionalProperties: false
        properties: {}
        type: object
      description: Credentials required to use the provider.
      type: object
    enrollment_status:
      default: pending
      description: Status of this enrollment. Can be `pending` or `confirmed`.
      enum:
      - pending
      - confirmed
      type: string
    enrollment_enrolled_at:
      oneOf:
      - default: 2016-07-12T17:56:26.804Z
        description: Enrollment date and time.
        type: string
    enrollment_last_auth:
      oneOf:
      - default: 2016-07-12T17:56:26.804Z
        description: Last authentication date and time.
        type: string
    factor_name:
      default: sms
      description: "Factor name. Can be `sms`, `push-notification`, `email`, `duo`\
        \ `otp` `webauthn-roaming`, `webauthn-platform`, or `recovery-code`."
      enum:
      - push-notification
      - sms
      - email
      - duo
      - otp
      - webauthn-roaming
      - webauthn-platform
      - recovery-code
      minLength: 1
      type: string
    hookCreate_triggerId:
      default: credentials-exchange
      description: "Execution stage of this rule. Can be `credentials-exchange`, `pre-user-registration`,\
        \ `post-user-registration`, `post-change-password`, or `send-phone-message`."
      enum:
      - credentials-exchange
      - pre-user-registration
      - post-user-registration
      - post-change-password
      - send-phone-message
      type: string
    log_date:
      oneOf:
      - default: 2016-02-23T19:57:29.532Z
        description: Date when the event occurred in ISO 8601 format.
        type: string
      - additionalProperties: true
        description: Date when the event occurred in ISO 8601 format.
        type: object
    log_location_info:
      additionalProperties: true
      description: Information about the location that triggered this event based
        on the `ip`.
      example:
        country_code: country_code
        city_name: city_name
        latitude: latitude
        country_name: country_name
        country_code3: country_code3
        continent_code: continent_code
        time_zone: time_zone
        longitude: longitude
      properties:
        country_code:
          description: Two-letter <a href="https://www.iso.org/iso-3166-country-codes.html">Alpha-2
            ISO 3166-1</a> country code.
          maxLength: 2
          minLength: 2
          type: string
        country_code3:
          description: Three-letter <a href="https://www.iso.org/iso-3166-country-codes.html">Alpha-3
            ISO 3166-1</a> country code.
          maxLength: 3
          minLength: 3
          type: string
        country_name:
          description: Full country name in English.
          type: string
        city_name:
          description: Full city name in English.
          type: string
        latitude:
          description: Global latitude (horizontal) position.
          type: string
        longitude:
          description: Global longitude (vertical) position.
          type: string
        time_zone:
          description: Time zone name as found in the <a href="https://www.iana.org/time-zones">tz
            database</a>.
          type: string
        continent_code:
          description: "Continent the country is located within. Can be `AF` (Africa),\
            \ `AN` (Antarctica), `AS` (Asia), `EU` (Europe), `NA` (North America),\
            \ `OC` (Oceania) or `SA` (South America)."
          type: string
      type: object
    promptsSettings_universal_login_experience:
      description: Which login experience to use. Can be `new` or `classic`.
      enum:
      - new
      - classic
      type: string
    resourceServer_token_dialect:
      description: Dialect of access tokens that should be issued. `access_token`
        is a JWT containing standard Auth0 claims; `rfc9068_profile` is a JWT conforming
        to the IETF JWT Access Token Profile. `access_token_authz` and `rfc9068_profile_authz`
        additionally include RBAC permissions claims.
      enum:
      - access_token
      - access_token_authz
      - rfc9068_profile
      - rfc9068_profile_authz
      type: string
    resourceServer_token_encryption_format:
      description: Format of the encrypted JWT payload.
      enum:
      - compact-nested-jwe
      type: string
    resourceServer_token_encryption_encryption_key_alg:
      description: Algorithm used to encrypt the token.
      enum:
      - RSA-OAEP-256
      - RSA-OAEP-384
      - RSA-OAEP-512
      type: string
    resourceServer_token_encryption_encryption_key:
      additionalProperties: false
      example:
        kid: kid
        name: name
        pem: "-----BEGIN PUBLIC KEY-----\r\nMIIBIjANBg...\r\n-----END PUBLIC KEY-----\r\
          \n"
        alg: RSA-OAEP-256
      properties:
        name:
          description: Name of the encryption key.
          maxLength: 128
          minLength: 1
          type: string
        alg:
          $ref: '#/components/schemas/resourceServer_token_encryption_encryption_key_alg'
        kid:
          description: Key ID.
          maxLength: 128
          minLength: 1
          type: string
        pem:
          default: "-----BEGIN PUBLIC KEY-----\r\nMIIBIjANBg...\r\n-----END PUBLIC\
            \ KEY-----\r\n"
          description: PEM-formatted public key. Must be JSON escaped.
          maxLength: 4096
          minLength: 1
          type: string
      required:
      - alg
      - pem
      type: object
    resourceServer_token_encryption:
      additionalProperties: false
      example:
        format: compact-nested-jwe
        encryption_key:
          kid: kid
          name: name
          pem: "-----BEGIN PUBLIC KEY-----\r\nMIIBIjANBg...\r\n-----END PUBLIC KEY-----\r\
            \n"
          alg: RSA-OAEP-256
      nullable: true
      properties:
        format:
          $ref: '#/components/schemas/resourceServer_token_encryption_format'
        encryption_key:
          $ref: '#/components/schemas/resourceServer_token_encryption_encryption_key'
      required:
      - encryption_key
      - format
      type: object
    resourceServer_consent_policy:
      enum:
      - transactional-authorization-with-mfa
      - null
      nullable: true
      type: string
    resourceServer_proof_of_possession_mechanism:
      description: Intended mechanism for Proof-of-Possession
      enum:
      - mtls
      type: string
    resourceServer_proof_of_possession:
      additionalProperties: false
      description: Proof-of-Possession configuration for access tokens
      example:
        mechanism: mtls
        required: true
      nullable: true
      properties:
        mechanism:
          $ref: '#/components/schemas/resourceServer_proof_of_possession_mechanism'
        required:
          description: Whether the use of Proof-of-Possession is required for the
            resource server
          type: boolean
      required:
      - mechanism
      - required
      type: object
    resourceServerCreate_token_dialect:
      description: Dialect of issued access token. `access_token` is a JWT containing
        standard Auth0 claims; `rfc9068_profile` is a JWT conforming to the IETF JWT
        Access Token Profile. `access_token_authz` and `rfc9068_profile_authz` additionally
        include RBAC permissions claims.
      enum:
      - access_token
      - access_token_authz
      - rfc9068_profile
      - rfc9068_profile_authz
      type: string
    tenantSettings_change_password:
      additionalProperties: false
      description: Change Password page customization.
      example:
        html: ""
        enabled: false
      nullable: true
      properties:
        enabled:
          default: false
          description: Whether to use the custom change password HTML (true) or the
            default Auth0 page (false). Default is to use the Auth0 page.
          type: boolean
        html:
          default: ""
          description: Custom change password HTML (<a href='https://github.com/Shopify/liquid/wiki/Liquid-for-Designers'>Liquid
            syntax</a> supported).
          type: string
      type: object
    tenantSettings_guardian_mfa_page:
      additionalProperties: false
      description: Guardian page customization.
      example:
        html: ""
        enabled: false
      nullable: true
      properties:
        enabled:
          default: false
          description: "Whether to use the custom Guardian HTML (true) or the default\
            \ Auth0 page (false, default)"
          type: boolean
        html:
          default: ""
          description: ' Custom Guardian HTML (<a href=''https://github.com/Shopify/liquid/wiki/Liquid-for-Designers''>Liquid
            syntax</a> is supported).'
          type: string
      type: object
    tenantSettings_error_page:
      additionalProperties: false
      description: Error page customization.
      example:
        html: ""
        show_log_link: false
        url: https://mycompany.org/error
      nullable: true
      properties:
        html:
          default: ""
          description: Custom Error HTML (<a href='https://github.com/Shopify/liquid/wiki/Liquid-for-Designers'>Liquid
            syntax</a> is supported).
          type: string
        show_log_link:
          default: false
          description: "Whether to show the link to log as part of the default error\
            \ page (true, default) or not to show the link (false)."
          type: boolean
        url:
          default: https://mycompany.org/error
          description: URL to redirect to when an error occurs instead of showing
            the default error page.
          type: string
      type: object
    tenantSettings_device_flow_charset:
      default: base20
      description: Character set used to generate a User Code. Can be `base20` or
        `digits`.
      enum:
      - base20
      - digits
      type: string
    tenantSettings_device_flow:
      additionalProperties: false
      description: Device Flow configuration
      example:
        charset: base20
        mask: '****-****'
      nullable: true
      properties:
        charset:
          $ref: '#/components/schemas/tenantSettings_device_flow_charset'
        mask:
          default: '****-****'
          description: "Mask used to format a generated User Code into a friendly,\
            \ readable format."
          maxLength: 20
          type: string
      type: object
    tenantSettings_flags:
      additionalProperties: false
      description: Flags used to change the behavior of this tenant.
      example:
        enable_legacy_profile: true
        enable_pipeline2: true
        enforce_client_authentication_on_passwordless_start: true
        revoke_refresh_token_grant: true
        disable_impersonation: false
        disable_fields_map_fix: true
        no_disclose_enterprise_connections: true
        allow_legacy_ro_grant_types: true
        mfa_show_factor_list_on_enrollment: true
        enable_sso: true
        enable_adfs_waad_email_verification: true
        allow_legacy_tokeninfo_endpoint: true
        dashboard_log_streams_next: true
        change_pwd_flow_v1: false
        enable_public_signup_user_exists_error: true
        enable_client_connections: true
        disable_clickjack_protection_headers: true
        allow_changing_enable_sso: true
        enable_idtoken_api2: true
        dashboard_insights_view: true
        allow_legacy_delegation_grant_types: true
        remove_alg_from_jwks: true
        enable_apis_section: false
      properties:
        change_pwd_flow_v1:
          default: false
          description: "Whether to use the older v1 change password flow (true, not\
            \ recommended except for backward compatibility) or the newer safer flow\
            \ (false, recommended)."
          type: boolean
        enable_apis_section:
          default: false
          description: Whether the APIs section is enabled (true) or disabled (false).
          type: boolean
        disable_impersonation:
          default: false
          description: Whether the impersonation functionality has been disabled (true)
            or not (false). Read-only.
          type: boolean
        enable_client_connections:
          default: true
          description: "Whether all current connections should be enabled when a new\
            \ client (application) is created (true, default) or not (false)."
          type: boolean
        enable_pipeline2:
          default: true
          description: Whether advanced API Authorization scenarios are enabled (true)
            or disabled (false).
          type: boolean
        allow_legacy_delegation_grant_types:
          description: "If enabled, clients are able to add legacy delegation grants."
          type: boolean
        allow_legacy_ro_grant_types:
          description: "If enabled, clients are able to add legacy RO grants."
          type: boolean
        allow_legacy_tokeninfo_endpoint:
          description: Whether the legacy `/tokeninfo` endpoint is enabled for your
            account (true) or unavailable (false).
          type: boolean
        enable_legacy_profile:
          description: Whether ID tokens and the userinfo endpoint includes a complete
            user profile (true) or only OpenID Connect claims (false).
          type: boolean
        enable_idtoken_api2:
          description: Whether ID tokens can be used to authorize some types of requests
            to API v2 (true) not not (false).
          type: boolean
        enable_public_signup_user_exists_error:
          description: Whether the public sign up process shows a user_exists error
            (true) or a generic error (false) if the user already exists.
          type: boolean
        enable_sso:
          description: Whether users are prompted to confirm log in before SSO redirection
            (false) or are not prompted (true).
          type: boolean
        allow_changing_enable_sso:
          description: Whether the `enable_sso` setting can be changed (true) or not
            (false).
          type: boolean
        disable_clickjack_protection_headers:
          description: Whether classic Universal Login prompts include additional
            security headers to prevent clickjacking (true) or no safeguard (false).
          type: boolean
        no_disclose_enterprise_connections:
          description: Do not Publish Enterprise Connections Information with IdP
            domains on the lock configuration file.
          type: boolean
        enforce_client_authentication_on_passwordless_start:
          description: Enforce client authentication for passwordless start.
          type: boolean
        enable_adfs_waad_email_verification:
          description: Enables the email verification flow during login for Azure
            AD and ADFS connections
          type: boolean
        revoke_refresh_token_grant:
          description: Delete underlying grant when a Refresh Token is revoked via
            the Authentication API.
          type: boolean
        dashboard_log_streams_next:
          description: Enables beta access to log streaming changes
          type: boolean
        dashboard_insights_view:
          description: Enables new insights activity page view
          type: boolean
        disable_fields_map_fix:
          description: Disables SAML fields map fix for bad mappings with repeated
            attributes
          type: boolean
        mfa_show_factor_list_on_enrollment:
          description: Used to allow users to pick what factor to enroll of the available
            MFA factors.
          type: boolean
        remove_alg_from_jwks:
          description: Removes alg property from jwks .well-known endpoint
          type: boolean
      type: object
    tenantSettings_session_cookie_mode:
      default: persistent
      description: Behavior of the session cookie
      enum:
      - persistent
      - non-persistent
      type: string
    tenantSettings_session_cookie:
      additionalProperties: false
      description: Session cookie configuration
      example:
        mode: persistent
      nullable: true
      properties:
        mode:
          $ref: '#/components/schemas/tenantSettings_session_cookie_mode'
      required:
      - mode
      type: object
    tenantSettings_sessions:
      additionalProperties: false
      description: Sessions related settings for tenant
      example:
        oidc_logout_prompt_enabled: true
      nullable: true
      properties:
        oidc_logout_prompt_enabled:
          default: true
          description: Whether to bypass prompting logic (false) when performing OIDC
            Logout
          type: boolean
      type: object
    tenantSettings_mtls:
      additionalProperties: false
      description: mTLS configuration.
      example:
        enable_endpoint_aliases: false
      nullable: true
      properties:
        enable_endpoint_aliases:
          default: false
          description: "If true, enables mTLS endpoint aliases"
          type: boolean
      type: object
    tenantSettingsUpdate_device_flow:
      additionalProperties: false
      description: Device Flow configuration.
      nullable: true
      properties:
        charset:
          $ref: '#/components/schemas/tenantSettings_device_flow_charset'
        mask:
          default: '****-****'
          description: "Mask used to format a generated User Code into a friendly,\
            \ readable format."
          type: string
      type: object
    tenantSettingsUpdate_flags:
      additionalProperties: false
      description: Flags used to change the behavior of this tenant.
      properties:
        change_pwd_flow_v1:
          description: "Whether to use the older v1 change password flow (true, not\
            \ recommended except for backward compatibility) or the newer safer flow\
            \ (false, recommended)."
          type: boolean
        enable_client_connections:
          description: "Whether all current connections should be enabled when a new\
            \ client (application) is created (true, default) or not (false)."
          type: boolean
        enable_apis_section:
          description: Whether the APIs section is enabled (true) or disabled (false).
          type: boolean
        enable_pipeline2:
          description: Whether advanced API Authorization scenarios are enabled (true)
            or disabled (false).
          type: boolean
        enable_dynamic_client_registration:
          description: ' Whether third-party developers can <a href=''https://auth0.com/docs/api-auth/dynamic-client-registration''>dynamically
            register</a> applications for your APIs (true) or not (false). This flag
            enables dynamic client registration.'
          type: boolean
        enable_custom_domain_in_emails:
          description: "Whether emails sent by Auth0 for change password, verification\
            \ etc. should use your verified custom domain (true) or your auth0.com\
            \ sub-domain (false).  Affects all emails, links, and URLs. Email will\
            \ fail if the custom domain is not verified."
          type: boolean
        allow_legacy_tokeninfo_endpoint:
          description: Whether the legacy `/tokeninfo` endpoint is enabled for your
            account (true) or unavailable (false).
          type: boolean
        enable_legacy_profile:
          description: Whether ID tokens and the userinfo endpoint includes a complete
            user profile (true) or only OpenID Connect claims (false).
          type: boolean
        enable_idtoken_api2:
          description: Whether ID tokens can be used to authorize some types of requests
            to API v2 (true) not not (false).
          type: boolean
        enable_public_signup_user_exists_error:
          description: Whether the public sign up process shows a user_exists error
            (true) or a generic error (false) if the user already exists.
          type: boolean
        allow_legacy_delegation_grant_types:
          description: ' Whether the legacy delegation endpoint will be enabled for
            your account (true) or not available (false).'
          type: boolean
        allow_legacy_ro_grant_types:
          description: Whether the legacy `auth/ro` endpoint (used with resource owner
            password and passwordless features) will be enabled for your account (true)
            or not available (false).
          type: boolean
        enable_sso:
          description: Whether users are prompted to confirm log in before SSO redirection
            (false) or are not prompted (true).
          type: boolean
        disable_clickjack_protection_headers:
          description: Whether classic Universal Login prompts include additional
            security headers to prevent clickjacking (true) or no safeguard (false).
          type: boolean
        no_disclose_enterprise_connections:
          description: Do not Publish Enterprise Connections Information with IdP
            domains on the lock configuration file.
          type: boolean
        disable_management_api_sms_obfuscation:
          description: "If true, SMS phone numbers will not be obfuscated in Management\
            \ API GET calls."
          type: boolean
        enforce_client_authentication_on_passwordless_start:
          description: Enforce client authentication for passwordless start.
          type: boolean
        trust_azure_adfs_email_verified_connection_property:
          description: Changes email_verified behavior for Azure AD/ADFS connections
            when enabled. Sets email_verified to false otherwise.
          type: boolean
        enable_adfs_waad_email_verification:
          description: Enables the email verification flow during login for Azure
            AD and ADFS connections.
          type: boolean
        revoke_refresh_token_grant:
          description: Delete underlying grant when a Refresh Token is revoked via
            the Authentication API.
          type: boolean
        dashboard_log_streams_next:
          description: Enables beta access to log streaming changes.
          type: boolean
        dashboard_insights_view:
          description: Enables new insights activity page view.
          type: boolean
        disable_fields_map_fix:
          description: Disables SAML fields map fix for bad mappings with repeated
            attributes.
          type: boolean
        mfa_show_factor_list_on_enrollment:
          description: Used to allow users to pick what factor to enroll of the available
            MFA factors.
          type: boolean
        remove_alg_from_jwks:
          description: Removes alg property from jwks .well-known endpoint
          type: boolean
      type: object
    userBlock_blocked_for_inner:
      additionalProperties: true
      example:
        identifier: john.doe@gmail.com
        ip: 10.0.0.1
        connection: connection
      properties:
        identifier:
          default: john.doe@gmail.com
          description: "Identifier (should be any of an `email`, `username`, or `phone_number`)"
          type: string
        ip:
          default: 10.0.0.1
          description: IP Address
          type: string
        connection:
          description: Connection identifier
          type: string
      type: object
    userUpdate_app_metadata:
      additionalProperties: true
      description: User metadata to which this user has read-only access.
      nullable: true
      properties:
        clientID: {}
        globalClientID: {}
        global_client_id: {}
        email_verified: {}
        user_id: {}
        identities: {}
        lastIP: {}
        lastLogin: {}
        metadata: {}
        created_at: {}
        loginsCount: {}
        _id: {}
        email: {}
        blocked: {}
        __tenant: {}
        updated_at: {}
      type: object
    userEnrollment_status:
      description: Status of this enrollment. Can be `pending` or `confirmed`.
      enum:
      - pending
      - confirmed
      type: string
    userEnrollment_auth_method:
      description: "Authentication method for this enrollment. Can be `authenticator`,\
        \ `guardian`, `sms`, `webauthn-roaming`, or `webauthn-platform`."
      enum:
      - authenticator
      - guardian
      - sms
      - webauthn-platform
      - webauthn-roaming
      type: string
    userIdentity_user_id:
      description: user_id of this identity.
      oneOf:
      - default: abc
        minLength: 1
        type: string
      - default: 191919191
        type: integer
  securitySchemes:
    bearerAuth:
      bearerFormat: jwt
      scheme: bearer
      type: http
    oAuth2ClientCredentials:
      flows:
        clientCredentials:
          scopes:
            read:actions: Read Actions
            create:actions: Create Actions
            update:actions: Update Actions
            delete:actions: Delete Actions
            read:anomaly_blocks: Read Anomaly Blocks
            delete:anomaly_blocks: Delete Anomaly Blocks
            read:attack_protection: Read Attack Protection
            update:attack_protection: Update Attack Protection
            blacklist:tokens: Blacklist Tokens
            read:branding: Read Branding
            update:branding: Update Branding
            delete:branding: Delete Branding
            read:client_grants: Read Client Grants
            create:client_grants: Create Client Grants
            update:client_grants: Update Client Grants
            delete:client_grants: Delete Client Grants
            read:clients: Read Clients
            read:client_keys: Read Client Keys
            read:client_credentials: Read Client Credentials
            read:client_summary: Read Client Summary
            create:clients: Create Clients
            create:client_credentials: Create Client Credentials
            update:client_credentials: Update Client Credentials
            delete:client_credentials: Delete Client Credentials
            update:clients: Update Clients
            update:client_keys: Update Client Keys
            delete:clients: Delete Clients
            read:connections: Read Connections
            create:connections: Create Connections
            update:connections: Update Connections
            delete:connections: Delete Connections
            delete:users: Delete Users
            read:custom_domains: Read Custom Domains
            create:custom_domains: Create Custom Domains
            update:custom_domains: Update Custom Domains
            delete:custom_domains: Delete Custom Domains
            read:device_credentials: Read Device Credentials
            create:current_user_device_credentials: Create Current User Device Credentials
            delete:device_credentials: Delete Device Credentials
            delete:current_user_device_credentials: Delete Current User Device Credentials
            create:email_templates: Create Email Templates
            read:email_templates: Read Email Templates
            update:email_templates: Update Email Templates
            read:email_provider: Read Email Provider
            create:email_provider: Create Email Provider
            update:email_provider: Update Email Provider
            read:grants: Read Grants
            delete:grants: Delete Grants
            create:guardian_enrollment_tickets: Create Guardian Enrollment Tickets
            read:guardian_enrollments: Read Guardian Enrollments
            delete:guardian_enrollments: Delete Guardian Enrollments
            read:guardian_factors: Read Guardian Factors
            update:guardian_factors: Update Guardian Factors
            read:mfa_policies: Read Mfa Policies
            update:mfa_policies: Update Mfa Policies
            read:hooks: Read Hooks
            create:hooks: Create Hooks
            update:hooks: Update Hooks
            delete:hooks: Delete Hooks
            read:users: Read Users
            create:users: Create Users
            update:users: Update Users
            read:signing_keys: Read Signing Keys
            create:signing_keys: Create Signing Keys
            update:signing_keys: Update Signing Keys
            read:log_streams: Read Log Streams
            create:log_streams: Create Log Streams
            update:log_streams: Update Log Streams
            delete:log_streams: Delete Log Streams
            read:logs: Read Logs
            read:logs_users: Read Logs Users
            read:organizations: Read Organizations
            read:organizations_summary: Read Organizations Summary
            create:organizations: Create Organizations
            create:organization_connections: Create Organization Connections
            update:organizations: Update Organizations
            delete:organizations: Delete Organizations
            read:organization_connections: Read Organization Connections
            update:organization_connections: Update Organization Connections
            delete:organization_connections: Delete Organization Connections
            read:organization_invitations: Read Organization Invitations
            create:organization_invitations: Create Organization Invitations
            delete:organization_invitations: Delete Organization Invitations
            read:organization_members: Read Organization Members
            create:organization_members: Create Organization Members
            delete:organization_members: Delete Organization Members
            read:organization_member_roles: Read Organization Member Roles
            create:organization_member_roles: Create Organization Member Roles
            delete:organization_member_roles: Delete Organization Member Roles
            read:prompts: Read Prompts
            update:prompts: Update Prompts
            read:resource_servers: Read Resource Servers
            create:resource_servers: Create Resource Servers
            update:resource_servers: Update Resource Servers
            delete:resource_servers: Delete Resource Servers
            read:roles: Read Roles
            create:roles: Create Roles
            update:roles: Update Roles
            delete:roles: Delete Roles
            read:role_members: Read Role Members
            create:role_members: Create Role Members
            read:rules: Read Rules
            create:rules: Create Rules
            read:rules_configs: Read Rules Configs
            update:rules_configs: Update Rules Configs
            delete:rules_configs: Delete Rules Configs
            update:rules: Update Rules
            delete:rules: Delete Rules
            read:stats: Read Stats
            read:tenant_settings: Read Tenant Settings
            update:tenant_settings: Update Tenant Settings
            create:user_tickets: Create User Tickets
            read:user_idp_tokens: Read User Idp Tokens
            read:current_user: Read Current User
            update:users_app_metadata: Update Users App Metadata
            update:current_user_metadata: Update Current User Metadata
            delete:current_user: Delete Current User
            read:authentication_methods: Read Authentication Methods
            update:authentication_methods: Update Authentication Methods
            create:authentication_methods: Create Authentication Methods
            delete:authentication_methods: Delete Authentication Methods
            update:current_user_identities: Update Current User Identities
            delete:role_members: Delete Role Members
          tokenUrl: https://login0.local.dev.auth0.com/oauth/token/
          x-form-parameters:
            audience: https://login0.local.dev.auth0.com/api/v2/
      type: oauth2
